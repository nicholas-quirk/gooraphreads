var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
void 0;
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  if(p[goog.typeOf(x)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
void 0;
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
void 0;
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__7472__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__7472 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7472__delegate.call(this, array, i, idxs)
    };
    G__7472.cljs$lang$maxFixedArity = 2;
    G__7472.cljs$lang$applyTo = function(arglist__7473) {
      var array = cljs.core.first(arglist__7473);
      var i = cljs.core.first(cljs.core.next(arglist__7473));
      var idxs = cljs.core.rest(cljs.core.next(arglist__7473));
      return G__7472__delegate(array, i, idxs)
    };
    G__7472.cljs$lang$arity$variadic = G__7472__delegate;
    return G__7472
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
void 0;
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
void 0;
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3941__auto____7537 = this$;
      if(and__3941__auto____7537) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3941__auto____7537
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      return function() {
        var or__3943__auto____7538 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7538) {
          return or__3943__auto____7538
        }else {
          var or__3943__auto____7539 = cljs.core._invoke["_"];
          if(or__3943__auto____7539) {
            return or__3943__auto____7539
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3941__auto____7540 = this$;
      if(and__3941__auto____7540) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3941__auto____7540
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      return function() {
        var or__3943__auto____7541 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7541) {
          return or__3943__auto____7541
        }else {
          var or__3943__auto____7542 = cljs.core._invoke["_"];
          if(or__3943__auto____7542) {
            return or__3943__auto____7542
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3941__auto____7543 = this$;
      if(and__3941__auto____7543) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3941__auto____7543
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      return function() {
        var or__3943__auto____7544 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7544) {
          return or__3943__auto____7544
        }else {
          var or__3943__auto____7545 = cljs.core._invoke["_"];
          if(or__3943__auto____7545) {
            return or__3943__auto____7545
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3941__auto____7546 = this$;
      if(and__3941__auto____7546) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3941__auto____7546
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      return function() {
        var or__3943__auto____7547 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7547) {
          return or__3943__auto____7547
        }else {
          var or__3943__auto____7548 = cljs.core._invoke["_"];
          if(or__3943__auto____7548) {
            return or__3943__auto____7548
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3941__auto____7549 = this$;
      if(and__3941__auto____7549) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3941__auto____7549
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      return function() {
        var or__3943__auto____7550 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7550) {
          return or__3943__auto____7550
        }else {
          var or__3943__auto____7551 = cljs.core._invoke["_"];
          if(or__3943__auto____7551) {
            return or__3943__auto____7551
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3941__auto____7552 = this$;
      if(and__3941__auto____7552) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3941__auto____7552
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      return function() {
        var or__3943__auto____7553 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7553) {
          return or__3943__auto____7553
        }else {
          var or__3943__auto____7554 = cljs.core._invoke["_"];
          if(or__3943__auto____7554) {
            return or__3943__auto____7554
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3941__auto____7555 = this$;
      if(and__3941__auto____7555) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3941__auto____7555
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      return function() {
        var or__3943__auto____7556 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7556) {
          return or__3943__auto____7556
        }else {
          var or__3943__auto____7557 = cljs.core._invoke["_"];
          if(or__3943__auto____7557) {
            return or__3943__auto____7557
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3941__auto____7558 = this$;
      if(and__3941__auto____7558) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3941__auto____7558
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      return function() {
        var or__3943__auto____7559 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7559) {
          return or__3943__auto____7559
        }else {
          var or__3943__auto____7560 = cljs.core._invoke["_"];
          if(or__3943__auto____7560) {
            return or__3943__auto____7560
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3941__auto____7561 = this$;
      if(and__3941__auto____7561) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3941__auto____7561
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      return function() {
        var or__3943__auto____7562 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7562) {
          return or__3943__auto____7562
        }else {
          var or__3943__auto____7563 = cljs.core._invoke["_"];
          if(or__3943__auto____7563) {
            return or__3943__auto____7563
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3941__auto____7564 = this$;
      if(and__3941__auto____7564) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3941__auto____7564
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      return function() {
        var or__3943__auto____7565 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7565) {
          return or__3943__auto____7565
        }else {
          var or__3943__auto____7566 = cljs.core._invoke["_"];
          if(or__3943__auto____7566) {
            return or__3943__auto____7566
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3941__auto____7567 = this$;
      if(and__3941__auto____7567) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3941__auto____7567
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      return function() {
        var or__3943__auto____7568 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7568) {
          return or__3943__auto____7568
        }else {
          var or__3943__auto____7569 = cljs.core._invoke["_"];
          if(or__3943__auto____7569) {
            return or__3943__auto____7569
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3941__auto____7570 = this$;
      if(and__3941__auto____7570) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3941__auto____7570
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      return function() {
        var or__3943__auto____7571 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7571) {
          return or__3943__auto____7571
        }else {
          var or__3943__auto____7572 = cljs.core._invoke["_"];
          if(or__3943__auto____7572) {
            return or__3943__auto____7572
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3941__auto____7573 = this$;
      if(and__3941__auto____7573) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3941__auto____7573
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      return function() {
        var or__3943__auto____7574 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7574) {
          return or__3943__auto____7574
        }else {
          var or__3943__auto____7575 = cljs.core._invoke["_"];
          if(or__3943__auto____7575) {
            return or__3943__auto____7575
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3941__auto____7576 = this$;
      if(and__3941__auto____7576) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3941__auto____7576
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      return function() {
        var or__3943__auto____7577 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7577) {
          return or__3943__auto____7577
        }else {
          var or__3943__auto____7578 = cljs.core._invoke["_"];
          if(or__3943__auto____7578) {
            return or__3943__auto____7578
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3941__auto____7579 = this$;
      if(and__3941__auto____7579) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3941__auto____7579
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      return function() {
        var or__3943__auto____7580 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7580) {
          return or__3943__auto____7580
        }else {
          var or__3943__auto____7581 = cljs.core._invoke["_"];
          if(or__3943__auto____7581) {
            return or__3943__auto____7581
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3941__auto____7582 = this$;
      if(and__3941__auto____7582) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3941__auto____7582
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      return function() {
        var or__3943__auto____7583 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7583) {
          return or__3943__auto____7583
        }else {
          var or__3943__auto____7584 = cljs.core._invoke["_"];
          if(or__3943__auto____7584) {
            return or__3943__auto____7584
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3941__auto____7585 = this$;
      if(and__3941__auto____7585) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3941__auto____7585
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      return function() {
        var or__3943__auto____7586 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7586) {
          return or__3943__auto____7586
        }else {
          var or__3943__auto____7587 = cljs.core._invoke["_"];
          if(or__3943__auto____7587) {
            return or__3943__auto____7587
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3941__auto____7588 = this$;
      if(and__3941__auto____7588) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3941__auto____7588
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      return function() {
        var or__3943__auto____7589 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7589) {
          return or__3943__auto____7589
        }else {
          var or__3943__auto____7590 = cljs.core._invoke["_"];
          if(or__3943__auto____7590) {
            return or__3943__auto____7590
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3941__auto____7591 = this$;
      if(and__3941__auto____7591) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3941__auto____7591
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      return function() {
        var or__3943__auto____7592 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7592) {
          return or__3943__auto____7592
        }else {
          var or__3943__auto____7593 = cljs.core._invoke["_"];
          if(or__3943__auto____7593) {
            return or__3943__auto____7593
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3941__auto____7594 = this$;
      if(and__3941__auto____7594) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3941__auto____7594
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      return function() {
        var or__3943__auto____7595 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7595) {
          return or__3943__auto____7595
        }else {
          var or__3943__auto____7596 = cljs.core._invoke["_"];
          if(or__3943__auto____7596) {
            return or__3943__auto____7596
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3941__auto____7597 = this$;
      if(and__3941__auto____7597) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3941__auto____7597
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      return function() {
        var or__3943__auto____7598 = cljs.core._invoke[goog.typeOf(this$)];
        if(or__3943__auto____7598) {
          return or__3943__auto____7598
        }else {
          var or__3943__auto____7599 = cljs.core._invoke["_"];
          if(or__3943__auto____7599) {
            return or__3943__auto____7599
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
void 0;
void 0;
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3941__auto____7603 = coll;
    if(and__3941__auto____7603) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3941__auto____7603
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7604 = cljs.core._count[goog.typeOf(coll)];
      if(or__3943__auto____7604) {
        return or__3943__auto____7604
      }else {
        var or__3943__auto____7605 = cljs.core._count["_"];
        if(or__3943__auto____7605) {
          return or__3943__auto____7605
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3941__auto____7609 = coll;
    if(and__3941__auto____7609) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3941__auto____7609
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7610 = cljs.core._empty[goog.typeOf(coll)];
      if(or__3943__auto____7610) {
        return or__3943__auto____7610
      }else {
        var or__3943__auto____7611 = cljs.core._empty["_"];
        if(or__3943__auto____7611) {
          return or__3943__auto____7611
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3941__auto____7615 = coll;
    if(and__3941__auto____7615) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3941__auto____7615
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    return function() {
      var or__3943__auto____7616 = cljs.core._conj[goog.typeOf(coll)];
      if(or__3943__auto____7616) {
        return or__3943__auto____7616
      }else {
        var or__3943__auto____7617 = cljs.core._conj["_"];
        if(or__3943__auto____7617) {
          return or__3943__auto____7617
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
void 0;
void 0;
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3941__auto____7624 = coll;
      if(and__3941__auto____7624) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3941__auto____7624
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      return function() {
        var or__3943__auto____7625 = cljs.core._nth[goog.typeOf(coll)];
        if(or__3943__auto____7625) {
          return or__3943__auto____7625
        }else {
          var or__3943__auto____7626 = cljs.core._nth["_"];
          if(or__3943__auto____7626) {
            return or__3943__auto____7626
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3941__auto____7627 = coll;
      if(and__3941__auto____7627) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3941__auto____7627
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      return function() {
        var or__3943__auto____7628 = cljs.core._nth[goog.typeOf(coll)];
        if(or__3943__auto____7628) {
          return or__3943__auto____7628
        }else {
          var or__3943__auto____7629 = cljs.core._nth["_"];
          if(or__3943__auto____7629) {
            return or__3943__auto____7629
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
void 0;
void 0;
cljs.core.ASeq = {};
void 0;
void 0;
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3941__auto____7633 = coll;
    if(and__3941__auto____7633) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3941__auto____7633
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7634 = cljs.core._first[goog.typeOf(coll)];
      if(or__3943__auto____7634) {
        return or__3943__auto____7634
      }else {
        var or__3943__auto____7635 = cljs.core._first["_"];
        if(or__3943__auto____7635) {
          return or__3943__auto____7635
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3941__auto____7639 = coll;
    if(and__3941__auto____7639) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3941__auto____7639
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7640 = cljs.core._rest[goog.typeOf(coll)];
      if(or__3943__auto____7640) {
        return or__3943__auto____7640
      }else {
        var or__3943__auto____7641 = cljs.core._rest["_"];
        if(or__3943__auto____7641) {
          return or__3943__auto____7641
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3941__auto____7645 = coll;
    if(and__3941__auto____7645) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3941__auto____7645
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7646 = cljs.core._next[goog.typeOf(coll)];
      if(or__3943__auto____7646) {
        return or__3943__auto____7646
      }else {
        var or__3943__auto____7647 = cljs.core._next["_"];
        if(or__3943__auto____7647) {
          return or__3943__auto____7647
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3941__auto____7654 = o;
      if(and__3941__auto____7654) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3941__auto____7654
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      return function() {
        var or__3943__auto____7655 = cljs.core._lookup[goog.typeOf(o)];
        if(or__3943__auto____7655) {
          return or__3943__auto____7655
        }else {
          var or__3943__auto____7656 = cljs.core._lookup["_"];
          if(or__3943__auto____7656) {
            return or__3943__auto____7656
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3941__auto____7657 = o;
      if(and__3941__auto____7657) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3941__auto____7657
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      return function() {
        var or__3943__auto____7658 = cljs.core._lookup[goog.typeOf(o)];
        if(or__3943__auto____7658) {
          return or__3943__auto____7658
        }else {
          var or__3943__auto____7659 = cljs.core._lookup["_"];
          if(or__3943__auto____7659) {
            return or__3943__auto____7659
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
void 0;
void 0;
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3941__auto____7663 = coll;
    if(and__3941__auto____7663) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3941__auto____7663
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    return function() {
      var or__3943__auto____7664 = cljs.core._contains_key_QMARK_[goog.typeOf(coll)];
      if(or__3943__auto____7664) {
        return or__3943__auto____7664
      }else {
        var or__3943__auto____7665 = cljs.core._contains_key_QMARK_["_"];
        if(or__3943__auto____7665) {
          return or__3943__auto____7665
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3941__auto____7669 = coll;
    if(and__3941__auto____7669) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3941__auto____7669
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    return function() {
      var or__3943__auto____7670 = cljs.core._assoc[goog.typeOf(coll)];
      if(or__3943__auto____7670) {
        return or__3943__auto____7670
      }else {
        var or__3943__auto____7671 = cljs.core._assoc["_"];
        if(or__3943__auto____7671) {
          return or__3943__auto____7671
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
void 0;
void 0;
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3941__auto____7675 = coll;
    if(and__3941__auto____7675) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3941__auto____7675
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    return function() {
      var or__3943__auto____7676 = cljs.core._dissoc[goog.typeOf(coll)];
      if(or__3943__auto____7676) {
        return or__3943__auto____7676
      }else {
        var or__3943__auto____7677 = cljs.core._dissoc["_"];
        if(or__3943__auto____7677) {
          return or__3943__auto____7677
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
void 0;
void 0;
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3941__auto____7681 = coll;
    if(and__3941__auto____7681) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3941__auto____7681
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7682 = cljs.core._key[goog.typeOf(coll)];
      if(or__3943__auto____7682) {
        return or__3943__auto____7682
      }else {
        var or__3943__auto____7683 = cljs.core._key["_"];
        if(or__3943__auto____7683) {
          return or__3943__auto____7683
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3941__auto____7687 = coll;
    if(and__3941__auto____7687) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3941__auto____7687
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7688 = cljs.core._val[goog.typeOf(coll)];
      if(or__3943__auto____7688) {
        return or__3943__auto____7688
      }else {
        var or__3943__auto____7689 = cljs.core._val["_"];
        if(or__3943__auto____7689) {
          return or__3943__auto____7689
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3941__auto____7693 = coll;
    if(and__3941__auto____7693) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3941__auto____7693
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    return function() {
      var or__3943__auto____7694 = cljs.core._disjoin[goog.typeOf(coll)];
      if(or__3943__auto____7694) {
        return or__3943__auto____7694
      }else {
        var or__3943__auto____7695 = cljs.core._disjoin["_"];
        if(or__3943__auto____7695) {
          return or__3943__auto____7695
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
void 0;
void 0;
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3941__auto____7699 = coll;
    if(and__3941__auto____7699) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3941__auto____7699
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7700 = cljs.core._peek[goog.typeOf(coll)];
      if(or__3943__auto____7700) {
        return or__3943__auto____7700
      }else {
        var or__3943__auto____7701 = cljs.core._peek["_"];
        if(or__3943__auto____7701) {
          return or__3943__auto____7701
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3941__auto____7705 = coll;
    if(and__3941__auto____7705) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3941__auto____7705
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7706 = cljs.core._pop[goog.typeOf(coll)];
      if(or__3943__auto____7706) {
        return or__3943__auto____7706
      }else {
        var or__3943__auto____7707 = cljs.core._pop["_"];
        if(or__3943__auto____7707) {
          return or__3943__auto____7707
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3941__auto____7711 = coll;
    if(and__3941__auto____7711) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3941__auto____7711
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    return function() {
      var or__3943__auto____7712 = cljs.core._assoc_n[goog.typeOf(coll)];
      if(or__3943__auto____7712) {
        return or__3943__auto____7712
      }else {
        var or__3943__auto____7713 = cljs.core._assoc_n["_"];
        if(or__3943__auto____7713) {
          return or__3943__auto____7713
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
void 0;
void 0;
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3941__auto____7717 = o;
    if(and__3941__auto____7717) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3941__auto____7717
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    return function() {
      var or__3943__auto____7718 = cljs.core._deref[goog.typeOf(o)];
      if(or__3943__auto____7718) {
        return or__3943__auto____7718
      }else {
        var or__3943__auto____7719 = cljs.core._deref["_"];
        if(or__3943__auto____7719) {
          return or__3943__auto____7719
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3941__auto____7723 = o;
    if(and__3941__auto____7723) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3941__auto____7723
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    return function() {
      var or__3943__auto____7724 = cljs.core._deref_with_timeout[goog.typeOf(o)];
      if(or__3943__auto____7724) {
        return or__3943__auto____7724
      }else {
        var or__3943__auto____7725 = cljs.core._deref_with_timeout["_"];
        if(or__3943__auto____7725) {
          return or__3943__auto____7725
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
void 0;
void 0;
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3941__auto____7729 = o;
    if(and__3941__auto____7729) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3941__auto____7729
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    return function() {
      var or__3943__auto____7730 = cljs.core._meta[goog.typeOf(o)];
      if(or__3943__auto____7730) {
        return or__3943__auto____7730
      }else {
        var or__3943__auto____7731 = cljs.core._meta["_"];
        if(or__3943__auto____7731) {
          return or__3943__auto____7731
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3941__auto____7735 = o;
    if(and__3941__auto____7735) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3941__auto____7735
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    return function() {
      var or__3943__auto____7736 = cljs.core._with_meta[goog.typeOf(o)];
      if(or__3943__auto____7736) {
        return or__3943__auto____7736
      }else {
        var or__3943__auto____7737 = cljs.core._with_meta["_"];
        if(or__3943__auto____7737) {
          return or__3943__auto____7737
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
void 0;
void 0;
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3941__auto____7744 = coll;
      if(and__3941__auto____7744) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3941__auto____7744
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      return function() {
        var or__3943__auto____7745 = cljs.core._reduce[goog.typeOf(coll)];
        if(or__3943__auto____7745) {
          return or__3943__auto____7745
        }else {
          var or__3943__auto____7746 = cljs.core._reduce["_"];
          if(or__3943__auto____7746) {
            return or__3943__auto____7746
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3941__auto____7747 = coll;
      if(and__3941__auto____7747) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3941__auto____7747
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      return function() {
        var or__3943__auto____7748 = cljs.core._reduce[goog.typeOf(coll)];
        if(or__3943__auto____7748) {
          return or__3943__auto____7748
        }else {
          var or__3943__auto____7749 = cljs.core._reduce["_"];
          if(or__3943__auto____7749) {
            return or__3943__auto____7749
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
void 0;
void 0;
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3941__auto____7753 = coll;
    if(and__3941__auto____7753) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3941__auto____7753
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    return function() {
      var or__3943__auto____7754 = cljs.core._kv_reduce[goog.typeOf(coll)];
      if(or__3943__auto____7754) {
        return or__3943__auto____7754
      }else {
        var or__3943__auto____7755 = cljs.core._kv_reduce["_"];
        if(or__3943__auto____7755) {
          return or__3943__auto____7755
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
void 0;
void 0;
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3941__auto____7759 = o;
    if(and__3941__auto____7759) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3941__auto____7759
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    return function() {
      var or__3943__auto____7760 = cljs.core._equiv[goog.typeOf(o)];
      if(or__3943__auto____7760) {
        return or__3943__auto____7760
      }else {
        var or__3943__auto____7761 = cljs.core._equiv["_"];
        if(or__3943__auto____7761) {
          return or__3943__auto____7761
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
void 0;
void 0;
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3941__auto____7765 = o;
    if(and__3941__auto____7765) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3941__auto____7765
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    return function() {
      var or__3943__auto____7766 = cljs.core._hash[goog.typeOf(o)];
      if(or__3943__auto____7766) {
        return or__3943__auto____7766
      }else {
        var or__3943__auto____7767 = cljs.core._hash["_"];
        if(or__3943__auto____7767) {
          return or__3943__auto____7767
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3941__auto____7771 = o;
    if(and__3941__auto____7771) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3941__auto____7771
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    return function() {
      var or__3943__auto____7772 = cljs.core._seq[goog.typeOf(o)];
      if(or__3943__auto____7772) {
        return or__3943__auto____7772
      }else {
        var or__3943__auto____7773 = cljs.core._seq["_"];
        if(or__3943__auto____7773) {
          return or__3943__auto____7773
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
void 0;
void 0;
cljs.core.ISequential = {};
void 0;
void 0;
cljs.core.IList = {};
void 0;
void 0;
cljs.core.IRecord = {};
void 0;
void 0;
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3941__auto____7777 = coll;
    if(and__3941__auto____7777) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3941__auto____7777
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7778 = cljs.core._rseq[goog.typeOf(coll)];
      if(or__3943__auto____7778) {
        return or__3943__auto____7778
      }else {
        var or__3943__auto____7779 = cljs.core._rseq["_"];
        if(or__3943__auto____7779) {
          return or__3943__auto____7779
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3941__auto____7783 = coll;
    if(and__3941__auto____7783) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3941__auto____7783
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    return function() {
      var or__3943__auto____7784 = cljs.core._sorted_seq[goog.typeOf(coll)];
      if(or__3943__auto____7784) {
        return or__3943__auto____7784
      }else {
        var or__3943__auto____7785 = cljs.core._sorted_seq["_"];
        if(or__3943__auto____7785) {
          return or__3943__auto____7785
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3941__auto____7789 = coll;
    if(and__3941__auto____7789) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3941__auto____7789
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    return function() {
      var or__3943__auto____7790 = cljs.core._sorted_seq_from[goog.typeOf(coll)];
      if(or__3943__auto____7790) {
        return or__3943__auto____7790
      }else {
        var or__3943__auto____7791 = cljs.core._sorted_seq_from["_"];
        if(or__3943__auto____7791) {
          return or__3943__auto____7791
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3941__auto____7795 = coll;
    if(and__3941__auto____7795) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3941__auto____7795
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    return function() {
      var or__3943__auto____7796 = cljs.core._entry_key[goog.typeOf(coll)];
      if(or__3943__auto____7796) {
        return or__3943__auto____7796
      }else {
        var or__3943__auto____7797 = cljs.core._entry_key["_"];
        if(or__3943__auto____7797) {
          return or__3943__auto____7797
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3941__auto____7801 = coll;
    if(and__3941__auto____7801) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3941__auto____7801
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7802 = cljs.core._comparator[goog.typeOf(coll)];
      if(or__3943__auto____7802) {
        return or__3943__auto____7802
      }else {
        var or__3943__auto____7803 = cljs.core._comparator["_"];
        if(or__3943__auto____7803) {
          return or__3943__auto____7803
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3941__auto____7807 = o;
    if(and__3941__auto____7807) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3941__auto____7807
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    return function() {
      var or__3943__auto____7808 = cljs.core._pr_seq[goog.typeOf(o)];
      if(or__3943__auto____7808) {
        return or__3943__auto____7808
      }else {
        var or__3943__auto____7809 = cljs.core._pr_seq["_"];
        if(or__3943__auto____7809) {
          return or__3943__auto____7809
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
void 0;
void 0;
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3941__auto____7813 = d;
    if(and__3941__auto____7813) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3941__auto____7813
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    return function() {
      var or__3943__auto____7814 = cljs.core._realized_QMARK_[goog.typeOf(d)];
      if(or__3943__auto____7814) {
        return or__3943__auto____7814
      }else {
        var or__3943__auto____7815 = cljs.core._realized_QMARK_["_"];
        if(or__3943__auto____7815) {
          return or__3943__auto____7815
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
void 0;
void 0;
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3941__auto____7819 = this$;
    if(and__3941__auto____7819) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3941__auto____7819
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    return function() {
      var or__3943__auto____7820 = cljs.core._notify_watches[goog.typeOf(this$)];
      if(or__3943__auto____7820) {
        return or__3943__auto____7820
      }else {
        var or__3943__auto____7821 = cljs.core._notify_watches["_"];
        if(or__3943__auto____7821) {
          return or__3943__auto____7821
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3941__auto____7825 = this$;
    if(and__3941__auto____7825) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3941__auto____7825
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    return function() {
      var or__3943__auto____7826 = cljs.core._add_watch[goog.typeOf(this$)];
      if(or__3943__auto____7826) {
        return or__3943__auto____7826
      }else {
        var or__3943__auto____7827 = cljs.core._add_watch["_"];
        if(or__3943__auto____7827) {
          return or__3943__auto____7827
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3941__auto____7831 = this$;
    if(and__3941__auto____7831) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3941__auto____7831
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    return function() {
      var or__3943__auto____7832 = cljs.core._remove_watch[goog.typeOf(this$)];
      if(or__3943__auto____7832) {
        return or__3943__auto____7832
      }else {
        var or__3943__auto____7833 = cljs.core._remove_watch["_"];
        if(or__3943__auto____7833) {
          return or__3943__auto____7833
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
void 0;
void 0;
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3941__auto____7837 = coll;
    if(and__3941__auto____7837) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3941__auto____7837
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7838 = cljs.core._as_transient[goog.typeOf(coll)];
      if(or__3943__auto____7838) {
        return or__3943__auto____7838
      }else {
        var or__3943__auto____7839 = cljs.core._as_transient["_"];
        if(or__3943__auto____7839) {
          return or__3943__auto____7839
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3941__auto____7843 = tcoll;
    if(and__3941__auto____7843) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3941__auto____7843
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    return function() {
      var or__3943__auto____7844 = cljs.core._conj_BANG_[goog.typeOf(tcoll)];
      if(or__3943__auto____7844) {
        return or__3943__auto____7844
      }else {
        var or__3943__auto____7845 = cljs.core._conj_BANG_["_"];
        if(or__3943__auto____7845) {
          return or__3943__auto____7845
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3941__auto____7849 = tcoll;
    if(and__3941__auto____7849) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3941__auto____7849
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    return function() {
      var or__3943__auto____7850 = cljs.core._persistent_BANG_[goog.typeOf(tcoll)];
      if(or__3943__auto____7850) {
        return or__3943__auto____7850
      }else {
        var or__3943__auto____7851 = cljs.core._persistent_BANG_["_"];
        if(or__3943__auto____7851) {
          return or__3943__auto____7851
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
void 0;
void 0;
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3941__auto____7855 = tcoll;
    if(and__3941__auto____7855) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3941__auto____7855
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    return function() {
      var or__3943__auto____7856 = cljs.core._assoc_BANG_[goog.typeOf(tcoll)];
      if(or__3943__auto____7856) {
        return or__3943__auto____7856
      }else {
        var or__3943__auto____7857 = cljs.core._assoc_BANG_["_"];
        if(or__3943__auto____7857) {
          return or__3943__auto____7857
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
void 0;
void 0;
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3941__auto____7861 = tcoll;
    if(and__3941__auto____7861) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3941__auto____7861
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    return function() {
      var or__3943__auto____7862 = cljs.core._dissoc_BANG_[goog.typeOf(tcoll)];
      if(or__3943__auto____7862) {
        return or__3943__auto____7862
      }else {
        var or__3943__auto____7863 = cljs.core._dissoc_BANG_["_"];
        if(or__3943__auto____7863) {
          return or__3943__auto____7863
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
void 0;
void 0;
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3941__auto____7867 = tcoll;
    if(and__3941__auto____7867) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3941__auto____7867
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    return function() {
      var or__3943__auto____7868 = cljs.core._assoc_n_BANG_[goog.typeOf(tcoll)];
      if(or__3943__auto____7868) {
        return or__3943__auto____7868
      }else {
        var or__3943__auto____7869 = cljs.core._assoc_n_BANG_["_"];
        if(or__3943__auto____7869) {
          return or__3943__auto____7869
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3941__auto____7873 = tcoll;
    if(and__3941__auto____7873) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3941__auto____7873
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    return function() {
      var or__3943__auto____7874 = cljs.core._pop_BANG_[goog.typeOf(tcoll)];
      if(or__3943__auto____7874) {
        return or__3943__auto____7874
      }else {
        var or__3943__auto____7875 = cljs.core._pop_BANG_["_"];
        if(or__3943__auto____7875) {
          return or__3943__auto____7875
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
void 0;
void 0;
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3941__auto____7879 = tcoll;
    if(and__3941__auto____7879) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3941__auto____7879
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    return function() {
      var or__3943__auto____7880 = cljs.core._disjoin_BANG_[goog.typeOf(tcoll)];
      if(or__3943__auto____7880) {
        return or__3943__auto____7880
      }else {
        var or__3943__auto____7881 = cljs.core._disjoin_BANG_["_"];
        if(or__3943__auto____7881) {
          return or__3943__auto____7881
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
void 0;
void 0;
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3941__auto____7885 = x;
    if(and__3941__auto____7885) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3941__auto____7885
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    return function() {
      var or__3943__auto____7886 = cljs.core._compare[goog.typeOf(x)];
      if(or__3943__auto____7886) {
        return or__3943__auto____7886
      }else {
        var or__3943__auto____7887 = cljs.core._compare["_"];
        if(or__3943__auto____7887) {
          return or__3943__auto____7887
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
void 0;
void 0;
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3941__auto____7891 = coll;
    if(and__3941__auto____7891) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3941__auto____7891
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7892 = cljs.core._drop_first[goog.typeOf(coll)];
      if(or__3943__auto____7892) {
        return or__3943__auto____7892
      }else {
        var or__3943__auto____7893 = cljs.core._drop_first["_"];
        if(or__3943__auto____7893) {
          return or__3943__auto____7893
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3941__auto____7897 = coll;
    if(and__3941__auto____7897) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3941__auto____7897
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7898 = cljs.core._chunked_first[goog.typeOf(coll)];
      if(or__3943__auto____7898) {
        return or__3943__auto____7898
      }else {
        var or__3943__auto____7899 = cljs.core._chunked_first["_"];
        if(or__3943__auto____7899) {
          return or__3943__auto____7899
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3941__auto____7903 = coll;
    if(and__3941__auto____7903) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3941__auto____7903
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7904 = cljs.core._chunked_rest[goog.typeOf(coll)];
      if(or__3943__auto____7904) {
        return or__3943__auto____7904
      }else {
        var or__3943__auto____7905 = cljs.core._chunked_rest["_"];
        if(or__3943__auto____7905) {
          return or__3943__auto____7905
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
void 0;
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3941__auto____7909 = coll;
    if(and__3941__auto____7909) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3941__auto____7909
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    return function() {
      var or__3943__auto____7910 = cljs.core._chunked_next[goog.typeOf(coll)];
      if(or__3943__auto____7910) {
        return or__3943__auto____7910
      }else {
        var or__3943__auto____7911 = cljs.core._chunked_next["_"];
        if(or__3943__auto____7911) {
          return or__3943__auto____7911
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
void 0;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
void 0;
void 0;
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3943__auto____7913 = x === y;
    if(or__3943__auto____7913) {
      return or__3943__auto____7913
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__7914__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__7915 = y;
            var G__7916 = cljs.core.first.call(null, more);
            var G__7917 = cljs.core.next.call(null, more);
            x = G__7915;
            y = G__7916;
            more = G__7917;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__7914 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__7914__delegate.call(this, x, y, more)
    };
    G__7914.cljs$lang$maxFixedArity = 2;
    G__7914.cljs$lang$applyTo = function(arglist__7918) {
      var x = cljs.core.first(arglist__7918);
      var y = cljs.core.first(cljs.core.next(arglist__7918));
      var more = cljs.core.rest(cljs.core.next(arglist__7918));
      return G__7914__delegate(x, y, more)
    };
    G__7914.cljs$lang$arity$variadic = G__7914__delegate;
    return G__7914
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
void 0;
void 0;
void 0;
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__7919 = null;
  var G__7919__2 = function(o, k) {
    return null
  };
  var G__7919__3 = function(o, k, not_found) {
    return not_found
  };
  G__7919 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7919__2.call(this, o, k);
      case 3:
        return G__7919__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7919
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__7920 = null;
  var G__7920__2 = function(_, f) {
    return f.call(null)
  };
  var G__7920__3 = function(_, f, start) {
    return start
  };
  G__7920 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__7920__2.call(this, _, f);
      case 3:
        return G__7920__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7920
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__7921 = null;
  var G__7921__2 = function(_, n) {
    return null
  };
  var G__7921__3 = function(_, n, not_found) {
    return not_found
  };
  G__7921 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7921__2.call(this, _, n);
      case 3:
        return G__7921__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__7921
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  return o.toString() === other.toString()
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
void 0;
void 0;
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__7934 = cljs.core._count.call(null, cicoll);
    if(cnt__7934 === 0) {
      return f.call(null)
    }else {
      var val__7935 = cljs.core._nth.call(null, cicoll, 0);
      var n__7936 = 1;
      while(true) {
        if(n__7936 < cnt__7934) {
          var nval__7937 = f.call(null, val__7935, cljs.core._nth.call(null, cicoll, n__7936));
          if(cljs.core.reduced_QMARK_.call(null, nval__7937)) {
            return cljs.core.deref.call(null, nval__7937)
          }else {
            var G__7946 = nval__7937;
            var G__7947 = n__7936 + 1;
            val__7935 = G__7946;
            n__7936 = G__7947;
            continue
          }
        }else {
          return val__7935
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__7938 = cljs.core._count.call(null, cicoll);
    var val__7939 = val;
    var n__7940 = 0;
    while(true) {
      if(n__7940 < cnt__7938) {
        var nval__7941 = f.call(null, val__7939, cljs.core._nth.call(null, cicoll, n__7940));
        if(cljs.core.reduced_QMARK_.call(null, nval__7941)) {
          return cljs.core.deref.call(null, nval__7941)
        }else {
          var G__7948 = nval__7941;
          var G__7949 = n__7940 + 1;
          val__7939 = G__7948;
          n__7940 = G__7949;
          continue
        }
      }else {
        return val__7939
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__7942 = cljs.core._count.call(null, cicoll);
    var val__7943 = val;
    var n__7944 = idx;
    while(true) {
      if(n__7944 < cnt__7942) {
        var nval__7945 = f.call(null, val__7943, cljs.core._nth.call(null, cicoll, n__7944));
        if(cljs.core.reduced_QMARK_.call(null, nval__7945)) {
          return cljs.core.deref.call(null, nval__7945)
        }else {
          var G__7950 = nval__7945;
          var G__7951 = n__7944 + 1;
          val__7943 = G__7950;
          n__7944 = G__7951;
          continue
        }
      }else {
        return val__7943
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__7964 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__7965 = arr[0];
      var n__7966 = 1;
      while(true) {
        if(n__7966 < cnt__7964) {
          var nval__7967 = f.call(null, val__7965, arr[n__7966]);
          if(cljs.core.reduced_QMARK_.call(null, nval__7967)) {
            return cljs.core.deref.call(null, nval__7967)
          }else {
            var G__7976 = nval__7967;
            var G__7977 = n__7966 + 1;
            val__7965 = G__7976;
            n__7966 = G__7977;
            continue
          }
        }else {
          return val__7965
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__7968 = arr.length;
    var val__7969 = val;
    var n__7970 = 0;
    while(true) {
      if(n__7970 < cnt__7968) {
        var nval__7971 = f.call(null, val__7969, arr[n__7970]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7971)) {
          return cljs.core.deref.call(null, nval__7971)
        }else {
          var G__7978 = nval__7971;
          var G__7979 = n__7970 + 1;
          val__7969 = G__7978;
          n__7970 = G__7979;
          continue
        }
      }else {
        return val__7969
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__7972 = arr.length;
    var val__7973 = val;
    var n__7974 = idx;
    while(true) {
      if(n__7974 < cnt__7972) {
        var nval__7975 = f.call(null, val__7973, arr[n__7974]);
        if(cljs.core.reduced_QMARK_.call(null, nval__7975)) {
          return cljs.core.deref.call(null, nval__7975)
        }else {
          var G__7980 = nval__7975;
          var G__7981 = n__7974 + 1;
          val__7973 = G__7980;
          n__7974 = G__7981;
          continue
        }
      }else {
        return val__7973
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__7982 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__7983 = this;
  if(this__7983.i + 1 < this__7983.a.length) {
    return new cljs.core.IndexedSeq(this__7983.a, this__7983.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__7984 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__7985 = this;
  var c__7986 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__7986 > 0) {
    return new cljs.core.RSeq(coll, c__7986 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__7987 = this;
  var this__7988 = this;
  return cljs.core.pr_str.call(null, this__7988)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__7989 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7989.a)) {
    return cljs.core.ci_reduce.call(null, this__7989.a, f, this__7989.a[this__7989.i], this__7989.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__7989.a[this__7989.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__7990 = this;
  if(cljs.core.counted_QMARK_.call(null, this__7990.a)) {
    return cljs.core.ci_reduce.call(null, this__7990.a, f, start, this__7990.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__7991 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__7992 = this;
  return this__7992.a.length - this__7992.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__7993 = this;
  return this__7993.a[this__7993.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__7994 = this;
  if(this__7994.i + 1 < this__7994.a.length) {
    return new cljs.core.IndexedSeq(this__7994.a, this__7994.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__7995 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__7996 = this;
  var i__7997 = n + this__7996.i;
  if(i__7997 < this__7996.a.length) {
    return this__7996.a[i__7997]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__7998 = this;
  var i__7999 = n + this__7998.i;
  if(i__7999 < this__7998.a.length) {
    return this__7998.a[i__7999]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__8000 = null;
  var G__8000__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__8000__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__8000 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8000__2.call(this, array, f);
      case 3:
        return G__8000__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8000
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__8001 = null;
  var G__8001__2 = function(array, k) {
    return array[k]
  };
  var G__8001__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__8001 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8001__2.call(this, array, k);
      case 3:
        return G__8001__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8001
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__8002 = null;
  var G__8002__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__8002__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__8002 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8002__2.call(this, array, n);
      case 3:
        return G__8002__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8002
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8003 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8004 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__8005 = this;
  var this__8006 = this;
  return cljs.core.pr_str.call(null, this__8006)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8007 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8008 = this;
  return this__8008.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8009 = this;
  return cljs.core._nth.call(null, this__8009.ci, this__8009.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8010 = this;
  if(this__8010.i > 0) {
    return new cljs.core.RSeq(this__8010.ci, this__8010.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8011 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__8012 = this;
  return new cljs.core.RSeq(this__8012.ci, this__8012.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8013 = this;
  return this__8013.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8017__8018 = coll;
      if(G__8017__8018) {
        if(function() {
          var or__3943__auto____8019 = G__8017__8018.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3943__auto____8019) {
            return or__3943__auto____8019
          }else {
            return G__8017__8018.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__8017__8018.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8017__8018)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__8017__8018)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8024__8025 = coll;
      if(G__8024__8025) {
        if(function() {
          var or__3943__auto____8026 = G__8024__8025.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____8026) {
            return or__3943__auto____8026
          }else {
            return G__8024__8025.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8024__8025.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8024__8025)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8024__8025)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__8027 = cljs.core.seq.call(null, coll);
      if(s__8027 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__8027)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__8032__8033 = coll;
      if(G__8032__8033) {
        if(function() {
          var or__3943__auto____8034 = G__8032__8033.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____8034) {
            return or__3943__auto____8034
          }else {
            return G__8032__8033.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8032__8033.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8032__8033)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8032__8033)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__8035 = cljs.core.seq.call(null, coll);
      if(!(s__8035 == null)) {
        return cljs.core._rest.call(null, s__8035)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__8039__8040 = coll;
      if(G__8039__8040) {
        if(function() {
          var or__3943__auto____8041 = G__8039__8040.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3943__auto____8041) {
            return or__3943__auto____8041
          }else {
            return G__8039__8040.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__8039__8040.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8039__8040)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__8039__8040)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__8043 = cljs.core.next.call(null, s);
    if(!(sn__8043 == null)) {
      var G__8044 = sn__8043;
      s = G__8044;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__8045__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__8046 = conj.call(null, coll, x);
          var G__8047 = cljs.core.first.call(null, xs);
          var G__8048 = cljs.core.next.call(null, xs);
          coll = G__8046;
          x = G__8047;
          xs = G__8048;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__8045 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8045__delegate.call(this, coll, x, xs)
    };
    G__8045.cljs$lang$maxFixedArity = 2;
    G__8045.cljs$lang$applyTo = function(arglist__8049) {
      var coll = cljs.core.first(arglist__8049);
      var x = cljs.core.first(cljs.core.next(arglist__8049));
      var xs = cljs.core.rest(cljs.core.next(arglist__8049));
      return G__8045__delegate(coll, x, xs)
    };
    G__8045.cljs$lang$arity$variadic = G__8045__delegate;
    return G__8045
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
void 0;
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__8052 = cljs.core.seq.call(null, coll);
  var acc__8053 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__8052)) {
      return acc__8053 + cljs.core._count.call(null, s__8052)
    }else {
      var G__8054 = cljs.core.next.call(null, s__8052);
      var G__8055 = acc__8053 + 1;
      s__8052 = G__8054;
      acc__8053 = G__8055;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
void 0;
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__8062__8063 = coll;
        if(G__8062__8063) {
          if(function() {
            var or__3943__auto____8064 = G__8062__8063.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto____8064) {
              return or__3943__auto____8064
            }else {
              return G__8062__8063.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8062__8063.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8062__8063)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8062__8063)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__8065__8066 = coll;
        if(G__8065__8066) {
          if(function() {
            var or__3943__auto____8067 = G__8065__8066.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto____8067) {
              return or__3943__auto____8067
            }else {
              return G__8065__8066.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__8065__8066.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8065__8066)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8065__8066)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__8070__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__8069 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__8071 = ret__8069;
          var G__8072 = cljs.core.first.call(null, kvs);
          var G__8073 = cljs.core.second.call(null, kvs);
          var G__8074 = cljs.core.nnext.call(null, kvs);
          coll = G__8071;
          k = G__8072;
          v = G__8073;
          kvs = G__8074;
          continue
        }else {
          return ret__8069
        }
        break
      }
    };
    var G__8070 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8070__delegate.call(this, coll, k, v, kvs)
    };
    G__8070.cljs$lang$maxFixedArity = 3;
    G__8070.cljs$lang$applyTo = function(arglist__8075) {
      var coll = cljs.core.first(arglist__8075);
      var k = cljs.core.first(cljs.core.next(arglist__8075));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8075)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8075)));
      return G__8070__delegate(coll, k, v, kvs)
    };
    G__8070.cljs$lang$arity$variadic = G__8070__delegate;
    return G__8070
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__8078__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8077 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8079 = ret__8077;
          var G__8080 = cljs.core.first.call(null, ks);
          var G__8081 = cljs.core.next.call(null, ks);
          coll = G__8079;
          k = G__8080;
          ks = G__8081;
          continue
        }else {
          return ret__8077
        }
        break
      }
    };
    var G__8078 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8078__delegate.call(this, coll, k, ks)
    };
    G__8078.cljs$lang$maxFixedArity = 2;
    G__8078.cljs$lang$applyTo = function(arglist__8082) {
      var coll = cljs.core.first(arglist__8082);
      var k = cljs.core.first(cljs.core.next(arglist__8082));
      var ks = cljs.core.rest(cljs.core.next(arglist__8082));
      return G__8078__delegate(coll, k, ks)
    };
    G__8078.cljs$lang$arity$variadic = G__8078__delegate;
    return G__8078
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__8086__8087 = o;
    if(G__8086__8087) {
      if(function() {
        var or__3943__auto____8088 = G__8086__8087.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3943__auto____8088) {
          return or__3943__auto____8088
        }else {
          return G__8086__8087.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__8086__8087.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8086__8087)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__8086__8087)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__8091__delegate = function(coll, k, ks) {
      while(true) {
        var ret__8090 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__8092 = ret__8090;
          var G__8093 = cljs.core.first.call(null, ks);
          var G__8094 = cljs.core.next.call(null, ks);
          coll = G__8092;
          k = G__8093;
          ks = G__8094;
          continue
        }else {
          return ret__8090
        }
        break
      }
    };
    var G__8091 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8091__delegate.call(this, coll, k, ks)
    };
    G__8091.cljs$lang$maxFixedArity = 2;
    G__8091.cljs$lang$applyTo = function(arglist__8095) {
      var coll = cljs.core.first(arglist__8095);
      var k = cljs.core.first(cljs.core.next(arglist__8095));
      var ks = cljs.core.rest(cljs.core.next(arglist__8095));
      return G__8091__delegate(coll, k, ks)
    };
    G__8091.cljs$lang$arity$variadic = G__8091__delegate;
    return G__8091
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__8097 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__8097;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__8097
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__8099 = cljs.core.string_hash_cache[k];
  if(!(h__8099 == null)) {
    return h__8099
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3941__auto____8101 = goog.isString(o);
      if(and__3941__auto____8101) {
        return check_cache
      }else {
        return and__3941__auto____8101
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8105__8106 = x;
    if(G__8105__8106) {
      if(function() {
        var or__3943__auto____8107 = G__8105__8106.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3943__auto____8107) {
          return or__3943__auto____8107
        }else {
          return G__8105__8106.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__8105__8106.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8105__8106)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__8105__8106)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8111__8112 = x;
    if(G__8111__8112) {
      if(function() {
        var or__3943__auto____8113 = G__8111__8112.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3943__auto____8113) {
          return or__3943__auto____8113
        }else {
          return G__8111__8112.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__8111__8112.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8111__8112)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__8111__8112)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__8117__8118 = x;
  if(G__8117__8118) {
    if(function() {
      var or__3943__auto____8119 = G__8117__8118.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3943__auto____8119) {
        return or__3943__auto____8119
      }else {
        return G__8117__8118.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__8117__8118.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8117__8118)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__8117__8118)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__8123__8124 = x;
  if(G__8123__8124) {
    if(function() {
      var or__3943__auto____8125 = G__8123__8124.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3943__auto____8125) {
        return or__3943__auto____8125
      }else {
        return G__8123__8124.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__8123__8124.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8123__8124)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__8123__8124)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__8129__8130 = x;
  if(G__8129__8130) {
    if(function() {
      var or__3943__auto____8131 = G__8129__8130.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3943__auto____8131) {
        return or__3943__auto____8131
      }else {
        return G__8129__8130.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__8129__8130.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8129__8130)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__8129__8130)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__8135__8136 = x;
  if(G__8135__8136) {
    if(function() {
      var or__3943__auto____8137 = G__8135__8136.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3943__auto____8137) {
        return or__3943__auto____8137
      }else {
        return G__8135__8136.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__8135__8136.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8135__8136)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__8135__8136)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__8141__8142 = x;
  if(G__8141__8142) {
    if(function() {
      var or__3943__auto____8143 = G__8141__8142.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3943__auto____8143) {
        return or__3943__auto____8143
      }else {
        return G__8141__8142.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__8141__8142.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8141__8142)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8141__8142)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__8147__8148 = x;
    if(G__8147__8148) {
      if(function() {
        var or__3943__auto____8149 = G__8147__8148.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3943__auto____8149) {
          return or__3943__auto____8149
        }else {
          return G__8147__8148.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__8147__8148.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8147__8148)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__8147__8148)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__8153__8154 = x;
  if(G__8153__8154) {
    if(function() {
      var or__3943__auto____8155 = G__8153__8154.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3943__auto____8155) {
        return or__3943__auto____8155
      }else {
        return G__8153__8154.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__8153__8154.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8153__8154)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__8153__8154)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__8159__8160 = x;
  if(G__8159__8160) {
    if(cljs.core.truth_(function() {
      var or__3943__auto____8161 = null;
      if(cljs.core.truth_(or__3943__auto____8161)) {
        return or__3943__auto____8161
      }else {
        return G__8159__8160.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__8159__8160.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8159__8160)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__8159__8160)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__8162__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__8162 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8162__delegate.call(this, keyvals)
    };
    G__8162.cljs$lang$maxFixedArity = 0;
    G__8162.cljs$lang$applyTo = function(arglist__8163) {
      var keyvals = cljs.core.seq(arglist__8163);
      return G__8162__delegate(keyvals)
    };
    G__8162.cljs$lang$arity$variadic = G__8162__delegate;
    return G__8162
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(falsecljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__8165 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__8165.push(key)
  });
  return keys__8165
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__8169 = i;
  var j__8170 = j;
  var len__8171 = len;
  while(true) {
    if(len__8171 === 0) {
      return to
    }else {
      to[j__8170] = from[i__8169];
      var G__8172 = i__8169 + 1;
      var G__8173 = j__8170 + 1;
      var G__8174 = len__8171 - 1;
      i__8169 = G__8172;
      j__8170 = G__8173;
      len__8171 = G__8174;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__8178 = i + (len - 1);
  var j__8179 = j + (len - 1);
  var len__8180 = len;
  while(true) {
    if(len__8180 === 0) {
      return to
    }else {
      to[j__8179] = from[i__8178];
      var G__8181 = i__8178 - 1;
      var G__8182 = j__8179 - 1;
      var G__8183 = len__8180 - 1;
      i__8178 = G__8181;
      j__8179 = G__8182;
      len__8180 = G__8183;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__8187__8188 = s;
    if(G__8187__8188) {
      if(function() {
        var or__3943__auto____8189 = G__8187__8188.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3943__auto____8189) {
          return or__3943__auto____8189
        }else {
          return G__8187__8188.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__8187__8188.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8187__8188)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8187__8188)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__8193__8194 = s;
  if(G__8193__8194) {
    if(function() {
      var or__3943__auto____8195 = G__8193__8194.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3943__auto____8195) {
        return or__3943__auto____8195
      }else {
        return G__8193__8194.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__8193__8194.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8193__8194)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__8193__8194)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3941__auto____8198 = goog.isString(x);
  if(and__3941__auto____8198) {
    return!function() {
      var or__3943__auto____8199 = x.charAt(0) === "\ufdd0";
      if(or__3943__auto____8199) {
        return or__3943__auto____8199
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3941__auto____8198
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3941__auto____8201 = goog.isString(x);
  if(and__3941__auto____8201) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3941__auto____8201
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3941__auto____8203 = goog.isString(x);
  if(and__3941__auto____8203) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3941__auto____8203
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3943__auto____8208 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3943__auto____8208) {
    return or__3943__auto____8208
  }else {
    var G__8209__8210 = f;
    if(G__8209__8210) {
      if(function() {
        var or__3943__auto____8211 = G__8209__8210.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3943__auto____8211) {
          return or__3943__auto____8211
        }else {
          return G__8209__8210.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__8209__8210.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8209__8210)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__8209__8210)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3941__auto____8213 = cljs.core.number_QMARK_.call(null, n);
  if(and__3941__auto____8213) {
    return n == n.toFixed()
  }else {
    return and__3941__auto____8213
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3941__auto____8216 = coll;
    if(cljs.core.truth_(and__3941__auto____8216)) {
      var and__3941__auto____8217 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3941__auto____8217) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3941__auto____8217
      }
    }else {
      return and__3941__auto____8216
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__8226__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__8222 = cljs.core.set([y, x]);
        var xs__8223 = more;
        while(true) {
          var x__8224 = cljs.core.first.call(null, xs__8223);
          var etc__8225 = cljs.core.next.call(null, xs__8223);
          if(cljs.core.truth_(xs__8223)) {
            if(cljs.core.contains_QMARK_.call(null, s__8222, x__8224)) {
              return false
            }else {
              var G__8227 = cljs.core.conj.call(null, s__8222, x__8224);
              var G__8228 = etc__8225;
              s__8222 = G__8227;
              xs__8223 = G__8228;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__8226 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8226__delegate.call(this, x, y, more)
    };
    G__8226.cljs$lang$maxFixedArity = 2;
    G__8226.cljs$lang$applyTo = function(arglist__8229) {
      var x = cljs.core.first(arglist__8229);
      var y = cljs.core.first(cljs.core.next(arglist__8229));
      var more = cljs.core.rest(cljs.core.next(arglist__8229));
      return G__8226__delegate(x, y, more)
    };
    G__8226.cljs$lang$arity$variadic = G__8226__delegate;
    return G__8226
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__8233__8234 = x;
            if(G__8233__8234) {
              if(cljs.core.truth_(function() {
                var or__3943__auto____8235 = null;
                if(cljs.core.truth_(or__3943__auto____8235)) {
                  return or__3943__auto____8235
                }else {
                  return G__8233__8234.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__8233__8234.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8233__8234)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__8233__8234)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__8240 = cljs.core.count.call(null, xs);
    var yl__8241 = cljs.core.count.call(null, ys);
    if(xl__8240 < yl__8241) {
      return-1
    }else {
      if(xl__8240 > yl__8241) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__8240, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__8242 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3941__auto____8243 = d__8242 === 0;
        if(and__3941__auto____8243) {
          return n + 1 < len
        }else {
          return and__3941__auto____8243
        }
      }()) {
        var G__8244 = xs;
        var G__8245 = ys;
        var G__8246 = len;
        var G__8247 = n + 1;
        xs = G__8244;
        ys = G__8245;
        len = G__8246;
        n = G__8247;
        continue
      }else {
        return d__8242
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__8249 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__8249)) {
        return r__8249
      }else {
        if(cljs.core.truth_(r__8249)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
void 0;
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__8251 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__8251, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__8251)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto____8257 = cljs.core.seq.call(null, coll);
    if(temp__4090__auto____8257) {
      var s__8258 = temp__4090__auto____8257;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__8258), cljs.core.next.call(null, s__8258))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__8259 = val;
    var coll__8260 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__8260) {
        var nval__8261 = f.call(null, val__8259, cljs.core.first.call(null, coll__8260));
        if(cljs.core.reduced_QMARK_.call(null, nval__8261)) {
          return cljs.core.deref.call(null, nval__8261)
        }else {
          var G__8262 = nval__8261;
          var G__8263 = cljs.core.next.call(null, coll__8260);
          val__8259 = G__8262;
          coll__8260 = G__8263;
          continue
        }
      }else {
        return val__8259
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
void 0;
cljs.core.shuffle = function shuffle(coll) {
  var a__8265 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__8265);
  return cljs.core.vec.call(null, a__8265)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__8272__8273 = coll;
      if(G__8272__8273) {
        if(function() {
          var or__3943__auto____8274 = G__8272__8273.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto____8274) {
            return or__3943__auto____8274
          }else {
            return G__8272__8273.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8272__8273.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8272__8273)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8272__8273)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__8275__8276 = coll;
      if(G__8275__8276) {
        if(function() {
          var or__3943__auto____8277 = G__8275__8276.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto____8277) {
            return or__3943__auto____8277
          }else {
            return G__8275__8276.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__8275__8276.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8275__8276)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__8275__8276)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__8278 = this;
  return this__8278.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__8279__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__8279 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8279__delegate.call(this, x, y, more)
    };
    G__8279.cljs$lang$maxFixedArity = 2;
    G__8279.cljs$lang$applyTo = function(arglist__8280) {
      var x = cljs.core.first(arglist__8280);
      var y = cljs.core.first(cljs.core.next(arglist__8280));
      var more = cljs.core.rest(cljs.core.next(arglist__8280));
      return G__8279__delegate(x, y, more)
    };
    G__8279.cljs$lang$arity$variadic = G__8279__delegate;
    return G__8279
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__8281__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__8281 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8281__delegate.call(this, x, y, more)
    };
    G__8281.cljs$lang$maxFixedArity = 2;
    G__8281.cljs$lang$applyTo = function(arglist__8282) {
      var x = cljs.core.first(arglist__8282);
      var y = cljs.core.first(cljs.core.next(arglist__8282));
      var more = cljs.core.rest(cljs.core.next(arglist__8282));
      return G__8281__delegate(x, y, more)
    };
    G__8281.cljs$lang$arity$variadic = G__8281__delegate;
    return G__8281
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__8283__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__8283 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8283__delegate.call(this, x, y, more)
    };
    G__8283.cljs$lang$maxFixedArity = 2;
    G__8283.cljs$lang$applyTo = function(arglist__8284) {
      var x = cljs.core.first(arglist__8284);
      var y = cljs.core.first(cljs.core.next(arglist__8284));
      var more = cljs.core.rest(cljs.core.next(arglist__8284));
      return G__8283__delegate(x, y, more)
    };
    G__8283.cljs$lang$arity$variadic = G__8283__delegate;
    return G__8283
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__8285__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__8285 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8285__delegate.call(this, x, y, more)
    };
    G__8285.cljs$lang$maxFixedArity = 2;
    G__8285.cljs$lang$applyTo = function(arglist__8286) {
      var x = cljs.core.first(arglist__8286);
      var y = cljs.core.first(cljs.core.next(arglist__8286));
      var more = cljs.core.rest(cljs.core.next(arglist__8286));
      return G__8285__delegate(x, y, more)
    };
    G__8285.cljs$lang$arity$variadic = G__8285__delegate;
    return G__8285
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__8287__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__8288 = y;
            var G__8289 = cljs.core.first.call(null, more);
            var G__8290 = cljs.core.next.call(null, more);
            x = G__8288;
            y = G__8289;
            more = G__8290;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8287 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8287__delegate.call(this, x, y, more)
    };
    G__8287.cljs$lang$maxFixedArity = 2;
    G__8287.cljs$lang$applyTo = function(arglist__8291) {
      var x = cljs.core.first(arglist__8291);
      var y = cljs.core.first(cljs.core.next(arglist__8291));
      var more = cljs.core.rest(cljs.core.next(arglist__8291));
      return G__8287__delegate(x, y, more)
    };
    G__8287.cljs$lang$arity$variadic = G__8287__delegate;
    return G__8287
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__8292__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8293 = y;
            var G__8294 = cljs.core.first.call(null, more);
            var G__8295 = cljs.core.next.call(null, more);
            x = G__8293;
            y = G__8294;
            more = G__8295;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8292 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8292__delegate.call(this, x, y, more)
    };
    G__8292.cljs$lang$maxFixedArity = 2;
    G__8292.cljs$lang$applyTo = function(arglist__8296) {
      var x = cljs.core.first(arglist__8296);
      var y = cljs.core.first(cljs.core.next(arglist__8296));
      var more = cljs.core.rest(cljs.core.next(arglist__8296));
      return G__8292__delegate(x, y, more)
    };
    G__8292.cljs$lang$arity$variadic = G__8292__delegate;
    return G__8292
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__8297__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__8298 = y;
            var G__8299 = cljs.core.first.call(null, more);
            var G__8300 = cljs.core.next.call(null, more);
            x = G__8298;
            y = G__8299;
            more = G__8300;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8297 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8297__delegate.call(this, x, y, more)
    };
    G__8297.cljs$lang$maxFixedArity = 2;
    G__8297.cljs$lang$applyTo = function(arglist__8301) {
      var x = cljs.core.first(arglist__8301);
      var y = cljs.core.first(cljs.core.next(arglist__8301));
      var more = cljs.core.rest(cljs.core.next(arglist__8301));
      return G__8297__delegate(x, y, more)
    };
    G__8297.cljs$lang$arity$variadic = G__8297__delegate;
    return G__8297
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__8302__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__8303 = y;
            var G__8304 = cljs.core.first.call(null, more);
            var G__8305 = cljs.core.next.call(null, more);
            x = G__8303;
            y = G__8304;
            more = G__8305;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8302 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8302__delegate.call(this, x, y, more)
    };
    G__8302.cljs$lang$maxFixedArity = 2;
    G__8302.cljs$lang$applyTo = function(arglist__8306) {
      var x = cljs.core.first(arglist__8306);
      var y = cljs.core.first(cljs.core.next(arglist__8306));
      var more = cljs.core.rest(cljs.core.next(arglist__8306));
      return G__8302__delegate(x, y, more)
    };
    G__8302.cljs$lang$arity$variadic = G__8302__delegate;
    return G__8302
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__8307__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__8307 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8307__delegate.call(this, x, y, more)
    };
    G__8307.cljs$lang$maxFixedArity = 2;
    G__8307.cljs$lang$applyTo = function(arglist__8308) {
      var x = cljs.core.first(arglist__8308);
      var y = cljs.core.first(cljs.core.next(arglist__8308));
      var more = cljs.core.rest(cljs.core.next(arglist__8308));
      return G__8307__delegate(x, y, more)
    };
    G__8307.cljs$lang$arity$variadic = G__8307__delegate;
    return G__8307
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__8309__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__8309 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8309__delegate.call(this, x, y, more)
    };
    G__8309.cljs$lang$maxFixedArity = 2;
    G__8309.cljs$lang$applyTo = function(arglist__8310) {
      var x = cljs.core.first(arglist__8310);
      var y = cljs.core.first(cljs.core.next(arglist__8310));
      var more = cljs.core.rest(cljs.core.next(arglist__8310));
      return G__8309__delegate(x, y, more)
    };
    G__8309.cljs$lang$arity$variadic = G__8309__delegate;
    return G__8309
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__8312 = n % d;
  return cljs.core.fix.call(null, (n - rem__8312) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__8314 = cljs.core.quot.call(null, n, d);
  return n - d * q__8314
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__8317 = v - (v >> 1 & 1431655765);
  var v__8318 = (v__8317 & 858993459) + (v__8317 >> 2 & 858993459);
  return(v__8318 + (v__8318 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__8319__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8320 = y;
            var G__8321 = cljs.core.first.call(null, more);
            var G__8322 = cljs.core.next.call(null, more);
            x = G__8320;
            y = G__8321;
            more = G__8322;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8319 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8319__delegate.call(this, x, y, more)
    };
    G__8319.cljs$lang$maxFixedArity = 2;
    G__8319.cljs$lang$applyTo = function(arglist__8323) {
      var x = cljs.core.first(arglist__8323);
      var y = cljs.core.first(cljs.core.next(arglist__8323));
      var more = cljs.core.rest(cljs.core.next(arglist__8323));
      return G__8319__delegate(x, y, more)
    };
    G__8319.cljs$lang$arity$variadic = G__8319__delegate;
    return G__8319
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__8327 = n;
  var xs__8328 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3941__auto____8329 = xs__8328;
      if(and__3941__auto____8329) {
        return n__8327 > 0
      }else {
        return and__3941__auto____8329
      }
    }())) {
      var G__8330 = n__8327 - 1;
      var G__8331 = cljs.core.next.call(null, xs__8328);
      n__8327 = G__8330;
      xs__8328 = G__8331;
      continue
    }else {
      return xs__8328
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__8332__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8333 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__8334 = cljs.core.next.call(null, more);
            sb = G__8333;
            more = G__8334;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__8332 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8332__delegate.call(this, x, ys)
    };
    G__8332.cljs$lang$maxFixedArity = 1;
    G__8332.cljs$lang$applyTo = function(arglist__8335) {
      var x = cljs.core.first(arglist__8335);
      var ys = cljs.core.rest(arglist__8335);
      return G__8332__delegate(x, ys)
    };
    G__8332.cljs$lang$arity$variadic = G__8332__delegate;
    return G__8332
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__8336__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__8337 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__8338 = cljs.core.next.call(null, more);
            sb = G__8337;
            more = G__8338;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__8336 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__8336__delegate.call(this, x, ys)
    };
    G__8336.cljs$lang$maxFixedArity = 1;
    G__8336.cljs$lang$applyTo = function(arglist__8339) {
      var x = cljs.core.first(arglist__8339);
      var ys = cljs.core.rest(arglist__8339);
      return G__8336__delegate(x, ys)
    };
    G__8336.cljs$lang$arity$variadic = G__8336__delegate;
    return G__8336
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__8342 = cljs.core.seq.call(null, x);
    var ys__8343 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__8342 == null) {
        return ys__8343 == null
      }else {
        if(ys__8343 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__8342), cljs.core.first.call(null, ys__8343))) {
            var G__8344 = cljs.core.next.call(null, xs__8342);
            var G__8345 = cljs.core.next.call(null, ys__8343);
            xs__8342 = G__8344;
            ys__8343 = G__8345;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__8346_SHARP_, p2__8347_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__8346_SHARP_, cljs.core.hash.call(null, p2__8347_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
void 0;
void 0;
cljs.core.hash_imap = function hash_imap(m) {
  var h__8351 = 0;
  var s__8352 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__8352) {
      var e__8353 = cljs.core.first.call(null, s__8352);
      var G__8354 = (h__8351 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__8353)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__8353)))) % 4503599627370496;
      var G__8355 = cljs.core.next.call(null, s__8352);
      h__8351 = G__8354;
      s__8352 = G__8355;
      continue
    }else {
      return h__8351
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__8359 = 0;
  var s__8360 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__8360) {
      var e__8361 = cljs.core.first.call(null, s__8360);
      var G__8362 = (h__8359 + cljs.core.hash.call(null, e__8361)) % 4503599627370496;
      var G__8363 = cljs.core.next.call(null, s__8360);
      h__8359 = G__8362;
      s__8360 = G__8363;
      continue
    }else {
      return h__8359
    }
    break
  }
};
void 0;
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__8384__8385 = cljs.core.seq.call(null, fn_map);
  if(G__8384__8385) {
    var G__8387__8389 = cljs.core.first.call(null, G__8384__8385);
    var vec__8388__8390 = G__8387__8389;
    var key_name__8391 = cljs.core.nth.call(null, vec__8388__8390, 0, null);
    var f__8392 = cljs.core.nth.call(null, vec__8388__8390, 1, null);
    var G__8384__8393 = G__8384__8385;
    var G__8387__8394 = G__8387__8389;
    var G__8384__8395 = G__8384__8393;
    while(true) {
      var vec__8396__8397 = G__8387__8394;
      var key_name__8398 = cljs.core.nth.call(null, vec__8396__8397, 0, null);
      var f__8399 = cljs.core.nth.call(null, vec__8396__8397, 1, null);
      var G__8384__8400 = G__8384__8395;
      var str_name__8401 = cljs.core.name.call(null, key_name__8398);
      obj[str_name__8401] = f__8399;
      var temp__4092__auto____8402 = cljs.core.next.call(null, G__8384__8400);
      if(temp__4092__auto____8402) {
        var G__8384__8403 = temp__4092__auto____8402;
        var G__8404 = cljs.core.first.call(null, G__8384__8403);
        var G__8405 = G__8384__8403;
        G__8387__8394 = G__8404;
        G__8384__8395 = G__8405;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8406 = this;
  var h__2213__auto____8407 = this__8406.__hash;
  if(!(h__2213__auto____8407 == null)) {
    return h__2213__auto____8407
  }else {
    var h__2213__auto____8408 = cljs.core.hash_coll.call(null, coll);
    this__8406.__hash = h__2213__auto____8408;
    return h__2213__auto____8408
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8409 = this;
  if(this__8409.count === 1) {
    return null
  }else {
    return this__8409.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8410 = this;
  return new cljs.core.List(this__8410.meta, o, coll, this__8410.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__8411 = this;
  var this__8412 = this;
  return cljs.core.pr_str.call(null, this__8412)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8413 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8414 = this;
  return this__8414.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8415 = this;
  return this__8415.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8416 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8417 = this;
  return this__8417.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8418 = this;
  if(this__8418.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__8418.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8419 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8420 = this;
  return new cljs.core.List(meta, this__8420.first, this__8420.rest, this__8420.count, this__8420.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8421 = this;
  return this__8421.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8422 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8423 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8424 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8425 = this;
  return new cljs.core.List(this__8425.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__8426 = this;
  var this__8427 = this;
  return cljs.core.pr_str.call(null, this__8427)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8428 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__8429 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__8430 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__8431 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8432 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8433 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8434 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8435 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8436 = this;
  return this__8436.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8437 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__8441__8442 = coll;
  if(G__8441__8442) {
    if(function() {
      var or__3943__auto____8443 = G__8441__8442.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3943__auto____8443) {
        return or__3943__auto____8443
      }else {
        return G__8441__8442.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__8441__8442.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8441__8442)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__8441__8442)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__8444__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__8444 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8444__delegate.call(this, x, y, z, items)
    };
    G__8444.cljs$lang$maxFixedArity = 3;
    G__8444.cljs$lang$applyTo = function(arglist__8445) {
      var x = cljs.core.first(arglist__8445);
      var y = cljs.core.first(cljs.core.next(arglist__8445));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8445)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8445)));
      return G__8444__delegate(x, y, z, items)
    };
    G__8444.cljs$lang$arity$variadic = G__8444__delegate;
    return G__8444
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8446 = this;
  var h__2213__auto____8447 = this__8446.__hash;
  if(!(h__2213__auto____8447 == null)) {
    return h__2213__auto____8447
  }else {
    var h__2213__auto____8448 = cljs.core.hash_coll.call(null, coll);
    this__8446.__hash = h__2213__auto____8448;
    return h__2213__auto____8448
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8449 = this;
  if(this__8449.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__8449.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8450 = this;
  return new cljs.core.Cons(null, o, coll, this__8450.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__8451 = this;
  var this__8452 = this;
  return cljs.core.pr_str.call(null, this__8452)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8453 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8454 = this;
  return this__8454.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8455 = this;
  if(this__8455.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8455.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8456 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8457 = this;
  return new cljs.core.Cons(meta, this__8457.first, this__8457.rest, this__8457.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8458 = this;
  return this__8458.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8459 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8459.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3943__auto____8464 = coll == null;
    if(or__3943__auto____8464) {
      return or__3943__auto____8464
    }else {
      var G__8465__8466 = coll;
      if(G__8465__8466) {
        if(function() {
          var or__3943__auto____8467 = G__8465__8466.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____8467) {
            return or__3943__auto____8467
          }else {
            return G__8465__8466.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__8465__8466.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8465__8466)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__8465__8466)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__8471__8472 = x;
  if(G__8471__8472) {
    if(function() {
      var or__3943__auto____8473 = G__8471__8472.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3943__auto____8473) {
        return or__3943__auto____8473
      }else {
        return G__8471__8472.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__8471__8472.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8471__8472)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__8471__8472)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__8474 = null;
  var G__8474__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__8474__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__8474 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8474__2.call(this, string, f);
      case 3:
        return G__8474__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8474
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__8475 = null;
  var G__8475__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__8475__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__8475 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8475__2.call(this, string, k);
      case 3:
        return G__8475__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8475
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__8476 = null;
  var G__8476__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__8476__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__8476 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8476__2.call(this, string, n);
      case 3:
        return G__8476__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8476
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function(this_sym8479, coll) {
  var this__8480 = this;
  var this_sym8479__8481 = this;
  var ___8482 = this_sym8479__8481;
  if(coll == null) {
    return null
  }else {
    var strobj__8483 = coll.strobj;
    if(strobj__8483 == null) {
      return cljs.core._lookup.call(null, coll, this__8480.k, null)
    }else {
      return strobj__8483[this__8480.k]
    }
  }
};
cljs.core.Keyword.prototype.apply = function(this_sym8477, args8478) {
  var this__8484 = this;
  return this_sym8477.call.apply(this_sym8477, [this_sym8477].concat(args8478.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__8493 = null;
  var G__8493__2 = function(this_sym8487, coll) {
    var this_sym8487__8489 = this;
    var this__8490 = this_sym8487__8489;
    return cljs.core._lookup.call(null, coll, this__8490.toString(), null)
  };
  var G__8493__3 = function(this_sym8488, coll, not_found) {
    var this_sym8488__8491 = this;
    var this__8492 = this_sym8488__8491;
    return cljs.core._lookup.call(null, coll, this__8492.toString(), not_found)
  };
  G__8493 = function(this_sym8488, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8493__2.call(this, this_sym8488, coll);
      case 3:
        return G__8493__3.call(this, this_sym8488, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8493
}();
String.prototype.apply = function(this_sym8485, args8486) {
  return this_sym8485.call.apply(this_sym8485, [this_sym8485].concat(args8486.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__8495 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__8495
  }else {
    lazy_seq.x = x__8495.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8496 = this;
  var h__2213__auto____8497 = this__8496.__hash;
  if(!(h__2213__auto____8497 == null)) {
    return h__2213__auto____8497
  }else {
    var h__2213__auto____8498 = cljs.core.hash_coll.call(null, coll);
    this__8496.__hash = h__2213__auto____8498;
    return h__2213__auto____8498
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__8499 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8500 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__8501 = this;
  var this__8502 = this;
  return cljs.core.pr_str.call(null, this__8502)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8503 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8504 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8505 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8506 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__8507 = this;
  return new cljs.core.LazySeq(meta, this__8507.realized, this__8507.x, this__8507.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8508 = this;
  return this__8508.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__8509 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__8509.meta)
};
cljs.core.LazySeq;
void 0;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8510 = this;
  return this__8510.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__8511 = this;
  var ___8512 = this;
  this__8511.buf[this__8511.end] = o;
  return this__8511.end = this__8511.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__8513 = this;
  var ___8514 = this;
  var ret__8515 = new cljs.core.ArrayChunk(this__8513.buf, 0, this__8513.end);
  this__8513.buf = null;
  return ret__8515
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8516 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__8516.arr[this__8516.off], this__8516.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8517 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__8517.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__8518 = this;
  if(this__8518.off === this__8518.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__8518.arr, this__8518.off + 1, this__8518.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__8519 = this;
  return this__8519.arr[this__8519.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__8520 = this;
  if(function() {
    var and__3941__auto____8521 = i >= 0;
    if(and__3941__auto____8521) {
      return i < this__8520.end - this__8520.off
    }else {
      return and__3941__auto____8521
    }
  }()) {
    return this__8520.arr[this__8520.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8522 = this;
  return this__8522.end - this__8522.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__8523 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__8524 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__8525 = this;
  return cljs.core._nth.call(null, this__8525.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__8526 = this;
  if(cljs.core._count.call(null, this__8526.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__8526.chunk), this__8526.more, this__8526.meta)
  }else {
    if(this__8526.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__8526.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__8527 = this;
  if(this__8527.more == null) {
    return null
  }else {
    return this__8527.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8528 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__8529 = this;
  return new cljs.core.ChunkedCons(this__8529.chunk, this__8529.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__8530 = this;
  return this__8530.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__8531 = this;
  return this__8531.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__8532 = this;
  if(this__8532.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__8532.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__8536__8537 = s;
    if(G__8536__8537) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____8538 = null;
        if(cljs.core.truth_(or__3943__auto____8538)) {
          return or__3943__auto____8538
        }else {
          return G__8536__8537.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__8536__8537.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8536__8537)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__8536__8537)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__8541 = [];
  var s__8542 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__8542)) {
      ary__8541.push(cljs.core.first.call(null, s__8542));
      var G__8543 = cljs.core.next.call(null, s__8542);
      s__8542 = G__8543;
      continue
    }else {
      return ary__8541
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__8547 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__8548 = 0;
  var xs__8549 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__8549) {
      ret__8547[i__8548] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__8549));
      var G__8550 = i__8548 + 1;
      var G__8551 = cljs.core.next.call(null, xs__8549);
      i__8548 = G__8550;
      xs__8549 = G__8551;
      continue
    }else {
    }
    break
  }
  return ret__8547
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__8559 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8560 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8561 = 0;
      var s__8562 = s__8560;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto____8563 = s__8562;
          if(and__3941__auto____8563) {
            return i__8561 < size
          }else {
            return and__3941__auto____8563
          }
        }())) {
          a__8559[i__8561] = cljs.core.first.call(null, s__8562);
          var G__8566 = i__8561 + 1;
          var G__8567 = cljs.core.next.call(null, s__8562);
          i__8561 = G__8566;
          s__8562 = G__8567;
          continue
        }else {
          return a__8559
        }
        break
      }
    }else {
      var n__2552__auto____8564 = size;
      var i__8565 = 0;
      while(true) {
        if(i__8565 < n__2552__auto____8564) {
          a__8559[i__8565] = init_val_or_seq;
          var G__8568 = i__8565 + 1;
          i__8565 = G__8568;
          continue
        }else {
        }
        break
      }
      return a__8559
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__8576 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8577 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8578 = 0;
      var s__8579 = s__8577;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto____8580 = s__8579;
          if(and__3941__auto____8580) {
            return i__8578 < size
          }else {
            return and__3941__auto____8580
          }
        }())) {
          a__8576[i__8578] = cljs.core.first.call(null, s__8579);
          var G__8583 = i__8578 + 1;
          var G__8584 = cljs.core.next.call(null, s__8579);
          i__8578 = G__8583;
          s__8579 = G__8584;
          continue
        }else {
          return a__8576
        }
        break
      }
    }else {
      var n__2552__auto____8581 = size;
      var i__8582 = 0;
      while(true) {
        if(i__8582 < n__2552__auto____8581) {
          a__8576[i__8582] = init_val_or_seq;
          var G__8585 = i__8582 + 1;
          i__8582 = G__8585;
          continue
        }else {
        }
        break
      }
      return a__8576
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__8593 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__8594 = cljs.core.seq.call(null, init_val_or_seq);
      var i__8595 = 0;
      var s__8596 = s__8594;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto____8597 = s__8596;
          if(and__3941__auto____8597) {
            return i__8595 < size
          }else {
            return and__3941__auto____8597
          }
        }())) {
          a__8593[i__8595] = cljs.core.first.call(null, s__8596);
          var G__8600 = i__8595 + 1;
          var G__8601 = cljs.core.next.call(null, s__8596);
          i__8595 = G__8600;
          s__8596 = G__8601;
          continue
        }else {
          return a__8593
        }
        break
      }
    }else {
      var n__2552__auto____8598 = size;
      var i__8599 = 0;
      while(true) {
        if(i__8599 < n__2552__auto____8598) {
          a__8593[i__8599] = init_val_or_seq;
          var G__8602 = i__8599 + 1;
          i__8599 = G__8602;
          continue
        }else {
        }
        break
      }
      return a__8593
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__8607 = s;
    var i__8608 = n;
    var sum__8609 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto____8610 = i__8608 > 0;
        if(and__3941__auto____8610) {
          return cljs.core.seq.call(null, s__8607)
        }else {
          return and__3941__auto____8610
        }
      }())) {
        var G__8611 = cljs.core.next.call(null, s__8607);
        var G__8612 = i__8608 - 1;
        var G__8613 = sum__8609 + 1;
        s__8607 = G__8611;
        i__8608 = G__8612;
        sum__8609 = G__8613;
        continue
      }else {
        return sum__8609
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8618 = cljs.core.seq.call(null, x);
      if(s__8618) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8618)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__8618), concat.call(null, cljs.core.chunk_rest.call(null, s__8618), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__8618), concat.call(null, cljs.core.rest.call(null, s__8618), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__8622__delegate = function(x, y, zs) {
      var cat__8621 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__8620 = cljs.core.seq.call(null, xys);
          if(xys__8620) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__8620)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__8620), cat.call(null, cljs.core.chunk_rest.call(null, xys__8620), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__8620), cat.call(null, cljs.core.rest.call(null, xys__8620), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__8621.call(null, concat.call(null, x, y), zs)
    };
    var G__8622 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8622__delegate.call(this, x, y, zs)
    };
    G__8622.cljs$lang$maxFixedArity = 2;
    G__8622.cljs$lang$applyTo = function(arglist__8623) {
      var x = cljs.core.first(arglist__8623);
      var y = cljs.core.first(cljs.core.next(arglist__8623));
      var zs = cljs.core.rest(cljs.core.next(arglist__8623));
      return G__8622__delegate(x, y, zs)
    };
    G__8622.cljs$lang$arity$variadic = G__8622__delegate;
    return G__8622
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__8624__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__8624 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8624__delegate.call(this, a, b, c, d, more)
    };
    G__8624.cljs$lang$maxFixedArity = 4;
    G__8624.cljs$lang$applyTo = function(arglist__8625) {
      var a = cljs.core.first(arglist__8625);
      var b = cljs.core.first(cljs.core.next(arglist__8625));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8625)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8625))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8625))));
      return G__8624__delegate(a, b, c, d, more)
    };
    G__8624.cljs$lang$arity$variadic = G__8624__delegate;
    return G__8624
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
void 0;
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__8667 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__8668 = cljs.core._first.call(null, args__8667);
    var args__8669 = cljs.core._rest.call(null, args__8667);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__8668)
      }else {
        return f.call(null, a__8668)
      }
    }else {
      var b__8670 = cljs.core._first.call(null, args__8669);
      var args__8671 = cljs.core._rest.call(null, args__8669);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__8668, b__8670)
        }else {
          return f.call(null, a__8668, b__8670)
        }
      }else {
        var c__8672 = cljs.core._first.call(null, args__8671);
        var args__8673 = cljs.core._rest.call(null, args__8671);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__8668, b__8670, c__8672)
          }else {
            return f.call(null, a__8668, b__8670, c__8672)
          }
        }else {
          var d__8674 = cljs.core._first.call(null, args__8673);
          var args__8675 = cljs.core._rest.call(null, args__8673);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__8668, b__8670, c__8672, d__8674)
            }else {
              return f.call(null, a__8668, b__8670, c__8672, d__8674)
            }
          }else {
            var e__8676 = cljs.core._first.call(null, args__8675);
            var args__8677 = cljs.core._rest.call(null, args__8675);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__8668, b__8670, c__8672, d__8674, e__8676)
              }else {
                return f.call(null, a__8668, b__8670, c__8672, d__8674, e__8676)
              }
            }else {
              var f__8678 = cljs.core._first.call(null, args__8677);
              var args__8679 = cljs.core._rest.call(null, args__8677);
              if(argc === 6) {
                if(f__8678.cljs$lang$arity$6) {
                  return f__8678.cljs$lang$arity$6(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678)
                }else {
                  return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678)
                }
              }else {
                var g__8680 = cljs.core._first.call(null, args__8679);
                var args__8681 = cljs.core._rest.call(null, args__8679);
                if(argc === 7) {
                  if(f__8678.cljs$lang$arity$7) {
                    return f__8678.cljs$lang$arity$7(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680)
                  }else {
                    return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680)
                  }
                }else {
                  var h__8682 = cljs.core._first.call(null, args__8681);
                  var args__8683 = cljs.core._rest.call(null, args__8681);
                  if(argc === 8) {
                    if(f__8678.cljs$lang$arity$8) {
                      return f__8678.cljs$lang$arity$8(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682)
                    }else {
                      return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682)
                    }
                  }else {
                    var i__8684 = cljs.core._first.call(null, args__8683);
                    var args__8685 = cljs.core._rest.call(null, args__8683);
                    if(argc === 9) {
                      if(f__8678.cljs$lang$arity$9) {
                        return f__8678.cljs$lang$arity$9(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684)
                      }else {
                        return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684)
                      }
                    }else {
                      var j__8686 = cljs.core._first.call(null, args__8685);
                      var args__8687 = cljs.core._rest.call(null, args__8685);
                      if(argc === 10) {
                        if(f__8678.cljs$lang$arity$10) {
                          return f__8678.cljs$lang$arity$10(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686)
                        }else {
                          return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686)
                        }
                      }else {
                        var k__8688 = cljs.core._first.call(null, args__8687);
                        var args__8689 = cljs.core._rest.call(null, args__8687);
                        if(argc === 11) {
                          if(f__8678.cljs$lang$arity$11) {
                            return f__8678.cljs$lang$arity$11(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688)
                          }else {
                            return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688)
                          }
                        }else {
                          var l__8690 = cljs.core._first.call(null, args__8689);
                          var args__8691 = cljs.core._rest.call(null, args__8689);
                          if(argc === 12) {
                            if(f__8678.cljs$lang$arity$12) {
                              return f__8678.cljs$lang$arity$12(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690)
                            }else {
                              return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690)
                            }
                          }else {
                            var m__8692 = cljs.core._first.call(null, args__8691);
                            var args__8693 = cljs.core._rest.call(null, args__8691);
                            if(argc === 13) {
                              if(f__8678.cljs$lang$arity$13) {
                                return f__8678.cljs$lang$arity$13(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692)
                              }else {
                                return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692)
                              }
                            }else {
                              var n__8694 = cljs.core._first.call(null, args__8693);
                              var args__8695 = cljs.core._rest.call(null, args__8693);
                              if(argc === 14) {
                                if(f__8678.cljs$lang$arity$14) {
                                  return f__8678.cljs$lang$arity$14(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694)
                                }else {
                                  return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694)
                                }
                              }else {
                                var o__8696 = cljs.core._first.call(null, args__8695);
                                var args__8697 = cljs.core._rest.call(null, args__8695);
                                if(argc === 15) {
                                  if(f__8678.cljs$lang$arity$15) {
                                    return f__8678.cljs$lang$arity$15(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694, o__8696)
                                  }else {
                                    return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694, o__8696)
                                  }
                                }else {
                                  var p__8698 = cljs.core._first.call(null, args__8697);
                                  var args__8699 = cljs.core._rest.call(null, args__8697);
                                  if(argc === 16) {
                                    if(f__8678.cljs$lang$arity$16) {
                                      return f__8678.cljs$lang$arity$16(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694, o__8696, p__8698)
                                    }else {
                                      return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694, o__8696, p__8698)
                                    }
                                  }else {
                                    var q__8700 = cljs.core._first.call(null, args__8699);
                                    var args__8701 = cljs.core._rest.call(null, args__8699);
                                    if(argc === 17) {
                                      if(f__8678.cljs$lang$arity$17) {
                                        return f__8678.cljs$lang$arity$17(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694, o__8696, p__8698, q__8700)
                                      }else {
                                        return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694, o__8696, p__8698, q__8700)
                                      }
                                    }else {
                                      var r__8702 = cljs.core._first.call(null, args__8701);
                                      var args__8703 = cljs.core._rest.call(null, args__8701);
                                      if(argc === 18) {
                                        if(f__8678.cljs$lang$arity$18) {
                                          return f__8678.cljs$lang$arity$18(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694, o__8696, p__8698, q__8700, r__8702)
                                        }else {
                                          return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694, o__8696, p__8698, q__8700, r__8702)
                                        }
                                      }else {
                                        var s__8704 = cljs.core._first.call(null, args__8703);
                                        var args__8705 = cljs.core._rest.call(null, args__8703);
                                        if(argc === 19) {
                                          if(f__8678.cljs$lang$arity$19) {
                                            return f__8678.cljs$lang$arity$19(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694, o__8696, p__8698, q__8700, r__8702, s__8704)
                                          }else {
                                            return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694, o__8696, p__8698, q__8700, r__8702, s__8704)
                                          }
                                        }else {
                                          var t__8706 = cljs.core._first.call(null, args__8705);
                                          var args__8707 = cljs.core._rest.call(null, args__8705);
                                          if(argc === 20) {
                                            if(f__8678.cljs$lang$arity$20) {
                                              return f__8678.cljs$lang$arity$20(a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694, o__8696, p__8698, q__8700, r__8702, s__8704, t__8706)
                                            }else {
                                              return f__8678.call(null, a__8668, b__8670, c__8672, d__8674, e__8676, f__8678, g__8680, h__8682, i__8684, j__8686, k__8688, l__8690, m__8692, n__8694, o__8696, p__8698, q__8700, r__8702, s__8704, t__8706)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
void 0;
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__8722 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8723 = cljs.core.bounded_count.call(null, args, fixed_arity__8722 + 1);
      if(bc__8723 <= fixed_arity__8722) {
        return cljs.core.apply_to.call(null, f, bc__8723, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__8724 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__8725 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8726 = cljs.core.bounded_count.call(null, arglist__8724, fixed_arity__8725 + 1);
      if(bc__8726 <= fixed_arity__8725) {
        return cljs.core.apply_to.call(null, f, bc__8726, arglist__8724)
      }else {
        return f.cljs$lang$applyTo(arglist__8724)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8724))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__8727 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__8728 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8729 = cljs.core.bounded_count.call(null, arglist__8727, fixed_arity__8728 + 1);
      if(bc__8729 <= fixed_arity__8728) {
        return cljs.core.apply_to.call(null, f, bc__8729, arglist__8727)
      }else {
        return f.cljs$lang$applyTo(arglist__8727)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8727))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__8730 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__8731 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__8732 = cljs.core.bounded_count.call(null, arglist__8730, fixed_arity__8731 + 1);
      if(bc__8732 <= fixed_arity__8731) {
        return cljs.core.apply_to.call(null, f, bc__8732, arglist__8730)
      }else {
        return f.cljs$lang$applyTo(arglist__8730)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__8730))
    }
  };
  var apply__6 = function() {
    var G__8736__delegate = function(f, a, b, c, d, args) {
      var arglist__8733 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__8734 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__8735 = cljs.core.bounded_count.call(null, arglist__8733, fixed_arity__8734 + 1);
        if(bc__8735 <= fixed_arity__8734) {
          return cljs.core.apply_to.call(null, f, bc__8735, arglist__8733)
        }else {
          return f.cljs$lang$applyTo(arglist__8733)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__8733))
      }
    };
    var G__8736 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__8736__delegate.call(this, f, a, b, c, d, args)
    };
    G__8736.cljs$lang$maxFixedArity = 5;
    G__8736.cljs$lang$applyTo = function(arglist__8737) {
      var f = cljs.core.first(arglist__8737);
      var a = cljs.core.first(cljs.core.next(arglist__8737));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8737)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8737))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8737)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8737)))));
      return G__8736__delegate(f, a, b, c, d, args)
    };
    G__8736.cljs$lang$arity$variadic = G__8736__delegate;
    return G__8736
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__8738) {
    var obj = cljs.core.first(arglist__8738);
    var f = cljs.core.first(cljs.core.next(arglist__8738));
    var args = cljs.core.rest(cljs.core.next(arglist__8738));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__8739__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__8739 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8739__delegate.call(this, x, y, more)
    };
    G__8739.cljs$lang$maxFixedArity = 2;
    G__8739.cljs$lang$applyTo = function(arglist__8740) {
      var x = cljs.core.first(arglist__8740);
      var y = cljs.core.first(cljs.core.next(arglist__8740));
      var more = cljs.core.rest(cljs.core.next(arglist__8740));
      return G__8739__delegate(x, y, more)
    };
    G__8739.cljs$lang$arity$variadic = G__8739__delegate;
    return G__8739
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__8741 = pred;
        var G__8742 = cljs.core.next.call(null, coll);
        pred = G__8741;
        coll = G__8742;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3943__auto____8744 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3943__auto____8744)) {
        return or__3943__auto____8744
      }else {
        var G__8745 = pred;
        var G__8746 = cljs.core.next.call(null, coll);
        pred = G__8745;
        coll = G__8746;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__8747 = null;
    var G__8747__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__8747__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__8747__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__8747__3 = function() {
      var G__8748__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__8748 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__8748__delegate.call(this, x, y, zs)
      };
      G__8748.cljs$lang$maxFixedArity = 2;
      G__8748.cljs$lang$applyTo = function(arglist__8749) {
        var x = cljs.core.first(arglist__8749);
        var y = cljs.core.first(cljs.core.next(arglist__8749));
        var zs = cljs.core.rest(cljs.core.next(arglist__8749));
        return G__8748__delegate(x, y, zs)
      };
      G__8748.cljs$lang$arity$variadic = G__8748__delegate;
      return G__8748
    }();
    G__8747 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__8747__0.call(this);
        case 1:
          return G__8747__1.call(this, x);
        case 2:
          return G__8747__2.call(this, x, y);
        default:
          return G__8747__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__8747.cljs$lang$maxFixedArity = 2;
    G__8747.cljs$lang$applyTo = G__8747__3.cljs$lang$applyTo;
    return G__8747
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__8750__delegate = function(args) {
      return x
    };
    var G__8750 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__8750__delegate.call(this, args)
    };
    G__8750.cljs$lang$maxFixedArity = 0;
    G__8750.cljs$lang$applyTo = function(arglist__8751) {
      var args = cljs.core.seq(arglist__8751);
      return G__8750__delegate(args)
    };
    G__8750.cljs$lang$arity$variadic = G__8750__delegate;
    return G__8750
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__8758 = null;
      var G__8758__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__8758__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__8758__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__8758__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__8758__4 = function() {
        var G__8759__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__8759 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8759__delegate.call(this, x, y, z, args)
        };
        G__8759.cljs$lang$maxFixedArity = 3;
        G__8759.cljs$lang$applyTo = function(arglist__8760) {
          var x = cljs.core.first(arglist__8760);
          var y = cljs.core.first(cljs.core.next(arglist__8760));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8760)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8760)));
          return G__8759__delegate(x, y, z, args)
        };
        G__8759.cljs$lang$arity$variadic = G__8759__delegate;
        return G__8759
      }();
      G__8758 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8758__0.call(this);
          case 1:
            return G__8758__1.call(this, x);
          case 2:
            return G__8758__2.call(this, x, y);
          case 3:
            return G__8758__3.call(this, x, y, z);
          default:
            return G__8758__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8758.cljs$lang$maxFixedArity = 3;
      G__8758.cljs$lang$applyTo = G__8758__4.cljs$lang$applyTo;
      return G__8758
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__8761 = null;
      var G__8761__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__8761__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__8761__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__8761__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__8761__4 = function() {
        var G__8762__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__8762 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8762__delegate.call(this, x, y, z, args)
        };
        G__8762.cljs$lang$maxFixedArity = 3;
        G__8762.cljs$lang$applyTo = function(arglist__8763) {
          var x = cljs.core.first(arglist__8763);
          var y = cljs.core.first(cljs.core.next(arglist__8763));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8763)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8763)));
          return G__8762__delegate(x, y, z, args)
        };
        G__8762.cljs$lang$arity$variadic = G__8762__delegate;
        return G__8762
      }();
      G__8761 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8761__0.call(this);
          case 1:
            return G__8761__1.call(this, x);
          case 2:
            return G__8761__2.call(this, x, y);
          case 3:
            return G__8761__3.call(this, x, y, z);
          default:
            return G__8761__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8761.cljs$lang$maxFixedArity = 3;
      G__8761.cljs$lang$applyTo = G__8761__4.cljs$lang$applyTo;
      return G__8761
    }()
  };
  var comp__4 = function() {
    var G__8764__delegate = function(f1, f2, f3, fs) {
      var fs__8755 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__8765__delegate = function(args) {
          var ret__8756 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__8755), args);
          var fs__8757 = cljs.core.next.call(null, fs__8755);
          while(true) {
            if(fs__8757) {
              var G__8766 = cljs.core.first.call(null, fs__8757).call(null, ret__8756);
              var G__8767 = cljs.core.next.call(null, fs__8757);
              ret__8756 = G__8766;
              fs__8757 = G__8767;
              continue
            }else {
              return ret__8756
            }
            break
          }
        };
        var G__8765 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8765__delegate.call(this, args)
        };
        G__8765.cljs$lang$maxFixedArity = 0;
        G__8765.cljs$lang$applyTo = function(arglist__8768) {
          var args = cljs.core.seq(arglist__8768);
          return G__8765__delegate(args)
        };
        G__8765.cljs$lang$arity$variadic = G__8765__delegate;
        return G__8765
      }()
    };
    var G__8764 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8764__delegate.call(this, f1, f2, f3, fs)
    };
    G__8764.cljs$lang$maxFixedArity = 3;
    G__8764.cljs$lang$applyTo = function(arglist__8769) {
      var f1 = cljs.core.first(arglist__8769);
      var f2 = cljs.core.first(cljs.core.next(arglist__8769));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8769)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8769)));
      return G__8764__delegate(f1, f2, f3, fs)
    };
    G__8764.cljs$lang$arity$variadic = G__8764__delegate;
    return G__8764
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__8770__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__8770 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8770__delegate.call(this, args)
      };
      G__8770.cljs$lang$maxFixedArity = 0;
      G__8770.cljs$lang$applyTo = function(arglist__8771) {
        var args = cljs.core.seq(arglist__8771);
        return G__8770__delegate(args)
      };
      G__8770.cljs$lang$arity$variadic = G__8770__delegate;
      return G__8770
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__8772__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__8772 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8772__delegate.call(this, args)
      };
      G__8772.cljs$lang$maxFixedArity = 0;
      G__8772.cljs$lang$applyTo = function(arglist__8773) {
        var args = cljs.core.seq(arglist__8773);
        return G__8772__delegate(args)
      };
      G__8772.cljs$lang$arity$variadic = G__8772__delegate;
      return G__8772
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__8774__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__8774 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__8774__delegate.call(this, args)
      };
      G__8774.cljs$lang$maxFixedArity = 0;
      G__8774.cljs$lang$applyTo = function(arglist__8775) {
        var args = cljs.core.seq(arglist__8775);
        return G__8774__delegate(args)
      };
      G__8774.cljs$lang$arity$variadic = G__8774__delegate;
      return G__8774
    }()
  };
  var partial__5 = function() {
    var G__8776__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__8777__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__8777 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__8777__delegate.call(this, args)
        };
        G__8777.cljs$lang$maxFixedArity = 0;
        G__8777.cljs$lang$applyTo = function(arglist__8778) {
          var args = cljs.core.seq(arglist__8778);
          return G__8777__delegate(args)
        };
        G__8777.cljs$lang$arity$variadic = G__8777__delegate;
        return G__8777
      }()
    };
    var G__8776 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__8776__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__8776.cljs$lang$maxFixedArity = 4;
    G__8776.cljs$lang$applyTo = function(arglist__8779) {
      var f = cljs.core.first(arglist__8779);
      var arg1 = cljs.core.first(cljs.core.next(arglist__8779));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8779)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8779))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__8779))));
      return G__8776__delegate(f, arg1, arg2, arg3, more)
    };
    G__8776.cljs$lang$arity$variadic = G__8776__delegate;
    return G__8776
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__8780 = null;
      var G__8780__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__8780__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__8780__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__8780__4 = function() {
        var G__8781__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__8781 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8781__delegate.call(this, a, b, c, ds)
        };
        G__8781.cljs$lang$maxFixedArity = 3;
        G__8781.cljs$lang$applyTo = function(arglist__8782) {
          var a = cljs.core.first(arglist__8782);
          var b = cljs.core.first(cljs.core.next(arglist__8782));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8782)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8782)));
          return G__8781__delegate(a, b, c, ds)
        };
        G__8781.cljs$lang$arity$variadic = G__8781__delegate;
        return G__8781
      }();
      G__8780 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__8780__1.call(this, a);
          case 2:
            return G__8780__2.call(this, a, b);
          case 3:
            return G__8780__3.call(this, a, b, c);
          default:
            return G__8780__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8780.cljs$lang$maxFixedArity = 3;
      G__8780.cljs$lang$applyTo = G__8780__4.cljs$lang$applyTo;
      return G__8780
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__8783 = null;
      var G__8783__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8783__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__8783__4 = function() {
        var G__8784__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__8784 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8784__delegate.call(this, a, b, c, ds)
        };
        G__8784.cljs$lang$maxFixedArity = 3;
        G__8784.cljs$lang$applyTo = function(arglist__8785) {
          var a = cljs.core.first(arglist__8785);
          var b = cljs.core.first(cljs.core.next(arglist__8785));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8785)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8785)));
          return G__8784__delegate(a, b, c, ds)
        };
        G__8784.cljs$lang$arity$variadic = G__8784__delegate;
        return G__8784
      }();
      G__8783 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8783__2.call(this, a, b);
          case 3:
            return G__8783__3.call(this, a, b, c);
          default:
            return G__8783__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8783.cljs$lang$maxFixedArity = 3;
      G__8783.cljs$lang$applyTo = G__8783__4.cljs$lang$applyTo;
      return G__8783
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__8786 = null;
      var G__8786__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__8786__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__8786__4 = function() {
        var G__8787__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__8787 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__8787__delegate.call(this, a, b, c, ds)
        };
        G__8787.cljs$lang$maxFixedArity = 3;
        G__8787.cljs$lang$applyTo = function(arglist__8788) {
          var a = cljs.core.first(arglist__8788);
          var b = cljs.core.first(cljs.core.next(arglist__8788));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__8788)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__8788)));
          return G__8787__delegate(a, b, c, ds)
        };
        G__8787.cljs$lang$arity$variadic = G__8787__delegate;
        return G__8787
      }();
      G__8786 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__8786__2.call(this, a, b);
          case 3:
            return G__8786__3.call(this, a, b, c);
          default:
            return G__8786__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__8786.cljs$lang$maxFixedArity = 3;
      G__8786.cljs$lang$applyTo = G__8786__4.cljs$lang$applyTo;
      return G__8786
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__8804 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____8812 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____8812) {
        var s__8813 = temp__4092__auto____8812;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8813)) {
          var c__8814 = cljs.core.chunk_first.call(null, s__8813);
          var size__8815 = cljs.core.count.call(null, c__8814);
          var b__8816 = cljs.core.chunk_buffer.call(null, size__8815);
          var n__2552__auto____8817 = size__8815;
          var i__8818 = 0;
          while(true) {
            if(i__8818 < n__2552__auto____8817) {
              cljs.core.chunk_append.call(null, b__8816, f.call(null, idx + i__8818, cljs.core._nth.call(null, c__8814, i__8818)));
              var G__8819 = i__8818 + 1;
              i__8818 = G__8819;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8816), mapi.call(null, idx + size__8815, cljs.core.chunk_rest.call(null, s__8813)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__8813)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__8813)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__8804.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____8829 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____8829) {
      var s__8830 = temp__4092__auto____8829;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__8830)) {
        var c__8831 = cljs.core.chunk_first.call(null, s__8830);
        var size__8832 = cljs.core.count.call(null, c__8831);
        var b__8833 = cljs.core.chunk_buffer.call(null, size__8832);
        var n__2552__auto____8834 = size__8832;
        var i__8835 = 0;
        while(true) {
          if(i__8835 < n__2552__auto____8834) {
            var x__8836 = f.call(null, cljs.core._nth.call(null, c__8831, i__8835));
            if(x__8836 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__8833, x__8836)
            }
            var G__8838 = i__8835 + 1;
            i__8835 = G__8838;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8833), keep.call(null, f, cljs.core.chunk_rest.call(null, s__8830)))
      }else {
        var x__8837 = f.call(null, cljs.core.first.call(null, s__8830));
        if(x__8837 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__8830))
        }else {
          return cljs.core.cons.call(null, x__8837, keep.call(null, f, cljs.core.rest.call(null, s__8830)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__8864 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____8874 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____8874) {
        var s__8875 = temp__4092__auto____8874;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__8875)) {
          var c__8876 = cljs.core.chunk_first.call(null, s__8875);
          var size__8877 = cljs.core.count.call(null, c__8876);
          var b__8878 = cljs.core.chunk_buffer.call(null, size__8877);
          var n__2552__auto____8879 = size__8877;
          var i__8880 = 0;
          while(true) {
            if(i__8880 < n__2552__auto____8879) {
              var x__8881 = f.call(null, idx + i__8880, cljs.core._nth.call(null, c__8876, i__8880));
              if(x__8881 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__8878, x__8881)
              }
              var G__8883 = i__8880 + 1;
              i__8880 = G__8883;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8878), keepi.call(null, idx + size__8877, cljs.core.chunk_rest.call(null, s__8875)))
        }else {
          var x__8882 = f.call(null, idx, cljs.core.first.call(null, s__8875));
          if(x__8882 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8875))
          }else {
            return cljs.core.cons.call(null, x__8882, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__8875)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__8864.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8969 = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8969)) {
            return p.call(null, y)
          }else {
            return and__3941__auto____8969
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8970 = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8970)) {
            var and__3941__auto____8971 = p.call(null, y);
            if(cljs.core.truth_(and__3941__auto____8971)) {
              return p.call(null, z)
            }else {
              return and__3941__auto____8971
            }
          }else {
            return and__3941__auto____8970
          }
        }())
      };
      var ep1__4 = function() {
        var G__9040__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto____8972 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto____8972)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3941__auto____8972
            }
          }())
        };
        var G__9040 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9040__delegate.call(this, x, y, z, args)
        };
        G__9040.cljs$lang$maxFixedArity = 3;
        G__9040.cljs$lang$applyTo = function(arglist__9041) {
          var x = cljs.core.first(arglist__9041);
          var y = cljs.core.first(cljs.core.next(arglist__9041));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9041)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9041)));
          return G__9040__delegate(x, y, z, args)
        };
        G__9040.cljs$lang$arity$variadic = G__9040__delegate;
        return G__9040
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8984 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8984)) {
            return p2.call(null, x)
          }else {
            return and__3941__auto____8984
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8985 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8985)) {
            var and__3941__auto____8986 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____8986)) {
              var and__3941__auto____8987 = p2.call(null, x);
              if(cljs.core.truth_(and__3941__auto____8987)) {
                return p2.call(null, y)
              }else {
                return and__3941__auto____8987
              }
            }else {
              return and__3941__auto____8986
            }
          }else {
            return and__3941__auto____8985
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____8988 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____8988)) {
            var and__3941__auto____8989 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____8989)) {
              var and__3941__auto____8990 = p1.call(null, z);
              if(cljs.core.truth_(and__3941__auto____8990)) {
                var and__3941__auto____8991 = p2.call(null, x);
                if(cljs.core.truth_(and__3941__auto____8991)) {
                  var and__3941__auto____8992 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____8992)) {
                    return p2.call(null, z)
                  }else {
                    return and__3941__auto____8992
                  }
                }else {
                  return and__3941__auto____8991
                }
              }else {
                return and__3941__auto____8990
              }
            }else {
              return and__3941__auto____8989
            }
          }else {
            return and__3941__auto____8988
          }
        }())
      };
      var ep2__4 = function() {
        var G__9042__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto____8993 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto____8993)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8839_SHARP_) {
                var and__3941__auto____8994 = p1.call(null, p1__8839_SHARP_);
                if(cljs.core.truth_(and__3941__auto____8994)) {
                  return p2.call(null, p1__8839_SHARP_)
                }else {
                  return and__3941__auto____8994
                }
              }, args)
            }else {
              return and__3941__auto____8993
            }
          }())
        };
        var G__9042 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9042__delegate.call(this, x, y, z, args)
        };
        G__9042.cljs$lang$maxFixedArity = 3;
        G__9042.cljs$lang$applyTo = function(arglist__9043) {
          var x = cljs.core.first(arglist__9043);
          var y = cljs.core.first(cljs.core.next(arglist__9043));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9043)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9043)));
          return G__9042__delegate(x, y, z, args)
        };
        G__9042.cljs$lang$arity$variadic = G__9042__delegate;
        return G__9042
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____9013 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____9013)) {
            var and__3941__auto____9014 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____9014)) {
              return p3.call(null, x)
            }else {
              return and__3941__auto____9014
            }
          }else {
            return and__3941__auto____9013
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____9015 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____9015)) {
            var and__3941__auto____9016 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____9016)) {
              var and__3941__auto____9017 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____9017)) {
                var and__3941__auto____9018 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____9018)) {
                  var and__3941__auto____9019 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____9019)) {
                    return p3.call(null, y)
                  }else {
                    return and__3941__auto____9019
                  }
                }else {
                  return and__3941__auto____9018
                }
              }else {
                return and__3941__auto____9017
              }
            }else {
              return and__3941__auto____9016
            }
          }else {
            return and__3941__auto____9015
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto____9020 = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto____9020)) {
            var and__3941__auto____9021 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____9021)) {
              var and__3941__auto____9022 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____9022)) {
                var and__3941__auto____9023 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____9023)) {
                  var and__3941__auto____9024 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____9024)) {
                    var and__3941__auto____9025 = p3.call(null, y);
                    if(cljs.core.truth_(and__3941__auto____9025)) {
                      var and__3941__auto____9026 = p1.call(null, z);
                      if(cljs.core.truth_(and__3941__auto____9026)) {
                        var and__3941__auto____9027 = p2.call(null, z);
                        if(cljs.core.truth_(and__3941__auto____9027)) {
                          return p3.call(null, z)
                        }else {
                          return and__3941__auto____9027
                        }
                      }else {
                        return and__3941__auto____9026
                      }
                    }else {
                      return and__3941__auto____9025
                    }
                  }else {
                    return and__3941__auto____9024
                  }
                }else {
                  return and__3941__auto____9023
                }
              }else {
                return and__3941__auto____9022
              }
            }else {
              return and__3941__auto____9021
            }
          }else {
            return and__3941__auto____9020
          }
        }())
      };
      var ep3__4 = function() {
        var G__9044__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto____9028 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto____9028)) {
              return cljs.core.every_QMARK_.call(null, function(p1__8840_SHARP_) {
                var and__3941__auto____9029 = p1.call(null, p1__8840_SHARP_);
                if(cljs.core.truth_(and__3941__auto____9029)) {
                  var and__3941__auto____9030 = p2.call(null, p1__8840_SHARP_);
                  if(cljs.core.truth_(and__3941__auto____9030)) {
                    return p3.call(null, p1__8840_SHARP_)
                  }else {
                    return and__3941__auto____9030
                  }
                }else {
                  return and__3941__auto____9029
                }
              }, args)
            }else {
              return and__3941__auto____9028
            }
          }())
        };
        var G__9044 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9044__delegate.call(this, x, y, z, args)
        };
        G__9044.cljs$lang$maxFixedArity = 3;
        G__9044.cljs$lang$applyTo = function(arglist__9045) {
          var x = cljs.core.first(arglist__9045);
          var y = cljs.core.first(cljs.core.next(arglist__9045));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9045)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9045)));
          return G__9044__delegate(x, y, z, args)
        };
        G__9044.cljs$lang$arity$variadic = G__9044__delegate;
        return G__9044
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__9046__delegate = function(p1, p2, p3, ps) {
      var ps__9031 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__8841_SHARP_) {
            return p1__8841_SHARP_.call(null, x)
          }, ps__9031)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__8842_SHARP_) {
            var and__3941__auto____9036 = p1__8842_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto____9036)) {
              return p1__8842_SHARP_.call(null, y)
            }else {
              return and__3941__auto____9036
            }
          }, ps__9031)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__8843_SHARP_) {
            var and__3941__auto____9037 = p1__8843_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto____9037)) {
              var and__3941__auto____9038 = p1__8843_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3941__auto____9038)) {
                return p1__8843_SHARP_.call(null, z)
              }else {
                return and__3941__auto____9038
              }
            }else {
              return and__3941__auto____9037
            }
          }, ps__9031)
        };
        var epn__4 = function() {
          var G__9047__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3941__auto____9039 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3941__auto____9039)) {
                return cljs.core.every_QMARK_.call(null, function(p1__8844_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__8844_SHARP_, args)
                }, ps__9031)
              }else {
                return and__3941__auto____9039
              }
            }())
          };
          var G__9047 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9047__delegate.call(this, x, y, z, args)
          };
          G__9047.cljs$lang$maxFixedArity = 3;
          G__9047.cljs$lang$applyTo = function(arglist__9048) {
            var x = cljs.core.first(arglist__9048);
            var y = cljs.core.first(cljs.core.next(arglist__9048));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9048)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9048)));
            return G__9047__delegate(x, y, z, args)
          };
          G__9047.cljs$lang$arity$variadic = G__9047__delegate;
          return G__9047
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__9046 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9046__delegate.call(this, p1, p2, p3, ps)
    };
    G__9046.cljs$lang$maxFixedArity = 3;
    G__9046.cljs$lang$applyTo = function(arglist__9049) {
      var p1 = cljs.core.first(arglist__9049);
      var p2 = cljs.core.first(cljs.core.next(arglist__9049));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9049)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9049)));
      return G__9046__delegate(p1, p2, p3, ps)
    };
    G__9046.cljs$lang$arity$variadic = G__9046__delegate;
    return G__9046
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3943__auto____9130 = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9130)) {
          return or__3943__auto____9130
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3943__auto____9131 = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9131)) {
          return or__3943__auto____9131
        }else {
          var or__3943__auto____9132 = p.call(null, y);
          if(cljs.core.truth_(or__3943__auto____9132)) {
            return or__3943__auto____9132
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__9201__delegate = function(x, y, z, args) {
          var or__3943__auto____9133 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto____9133)) {
            return or__3943__auto____9133
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__9201 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9201__delegate.call(this, x, y, z, args)
        };
        G__9201.cljs$lang$maxFixedArity = 3;
        G__9201.cljs$lang$applyTo = function(arglist__9202) {
          var x = cljs.core.first(arglist__9202);
          var y = cljs.core.first(cljs.core.next(arglist__9202));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9202)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9202)));
          return G__9201__delegate(x, y, z, args)
        };
        G__9201.cljs$lang$arity$variadic = G__9201__delegate;
        return G__9201
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3943__auto____9145 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9145)) {
          return or__3943__auto____9145
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3943__auto____9146 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9146)) {
          return or__3943__auto____9146
        }else {
          var or__3943__auto____9147 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____9147)) {
            return or__3943__auto____9147
          }else {
            var or__3943__auto____9148 = p2.call(null, x);
            if(cljs.core.truth_(or__3943__auto____9148)) {
              return or__3943__auto____9148
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3943__auto____9149 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9149)) {
          return or__3943__auto____9149
        }else {
          var or__3943__auto____9150 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____9150)) {
            return or__3943__auto____9150
          }else {
            var or__3943__auto____9151 = p1.call(null, z);
            if(cljs.core.truth_(or__3943__auto____9151)) {
              return or__3943__auto____9151
            }else {
              var or__3943__auto____9152 = p2.call(null, x);
              if(cljs.core.truth_(or__3943__auto____9152)) {
                return or__3943__auto____9152
              }else {
                var or__3943__auto____9153 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____9153)) {
                  return or__3943__auto____9153
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__9203__delegate = function(x, y, z, args) {
          var or__3943__auto____9154 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto____9154)) {
            return or__3943__auto____9154
          }else {
            return cljs.core.some.call(null, function(p1__8884_SHARP_) {
              var or__3943__auto____9155 = p1.call(null, p1__8884_SHARP_);
              if(cljs.core.truth_(or__3943__auto____9155)) {
                return or__3943__auto____9155
              }else {
                return p2.call(null, p1__8884_SHARP_)
              }
            }, args)
          }
        };
        var G__9203 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9203__delegate.call(this, x, y, z, args)
        };
        G__9203.cljs$lang$maxFixedArity = 3;
        G__9203.cljs$lang$applyTo = function(arglist__9204) {
          var x = cljs.core.first(arglist__9204);
          var y = cljs.core.first(cljs.core.next(arglist__9204));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9204)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9204)));
          return G__9203__delegate(x, y, z, args)
        };
        G__9203.cljs$lang$arity$variadic = G__9203__delegate;
        return G__9203
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3943__auto____9174 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9174)) {
          return or__3943__auto____9174
        }else {
          var or__3943__auto____9175 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____9175)) {
            return or__3943__auto____9175
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3943__auto____9176 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9176)) {
          return or__3943__auto____9176
        }else {
          var or__3943__auto____9177 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____9177)) {
            return or__3943__auto____9177
          }else {
            var or__3943__auto____9178 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____9178)) {
              return or__3943__auto____9178
            }else {
              var or__3943__auto____9179 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____9179)) {
                return or__3943__auto____9179
              }else {
                var or__3943__auto____9180 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____9180)) {
                  return or__3943__auto____9180
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3943__auto____9181 = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto____9181)) {
          return or__3943__auto____9181
        }else {
          var or__3943__auto____9182 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____9182)) {
            return or__3943__auto____9182
          }else {
            var or__3943__auto____9183 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____9183)) {
              return or__3943__auto____9183
            }else {
              var or__3943__auto____9184 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____9184)) {
                return or__3943__auto____9184
              }else {
                var or__3943__auto____9185 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____9185)) {
                  return or__3943__auto____9185
                }else {
                  var or__3943__auto____9186 = p3.call(null, y);
                  if(cljs.core.truth_(or__3943__auto____9186)) {
                    return or__3943__auto____9186
                  }else {
                    var or__3943__auto____9187 = p1.call(null, z);
                    if(cljs.core.truth_(or__3943__auto____9187)) {
                      return or__3943__auto____9187
                    }else {
                      var or__3943__auto____9188 = p2.call(null, z);
                      if(cljs.core.truth_(or__3943__auto____9188)) {
                        return or__3943__auto____9188
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__9205__delegate = function(x, y, z, args) {
          var or__3943__auto____9189 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto____9189)) {
            return or__3943__auto____9189
          }else {
            return cljs.core.some.call(null, function(p1__8885_SHARP_) {
              var or__3943__auto____9190 = p1.call(null, p1__8885_SHARP_);
              if(cljs.core.truth_(or__3943__auto____9190)) {
                return or__3943__auto____9190
              }else {
                var or__3943__auto____9191 = p2.call(null, p1__8885_SHARP_);
                if(cljs.core.truth_(or__3943__auto____9191)) {
                  return or__3943__auto____9191
                }else {
                  return p3.call(null, p1__8885_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__9205 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9205__delegate.call(this, x, y, z, args)
        };
        G__9205.cljs$lang$maxFixedArity = 3;
        G__9205.cljs$lang$applyTo = function(arglist__9206) {
          var x = cljs.core.first(arglist__9206);
          var y = cljs.core.first(cljs.core.next(arglist__9206));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9206)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9206)));
          return G__9205__delegate(x, y, z, args)
        };
        G__9205.cljs$lang$arity$variadic = G__9205__delegate;
        return G__9205
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__9207__delegate = function(p1, p2, p3, ps) {
      var ps__9192 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__8886_SHARP_) {
            return p1__8886_SHARP_.call(null, x)
          }, ps__9192)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__8887_SHARP_) {
            var or__3943__auto____9197 = p1__8887_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto____9197)) {
              return or__3943__auto____9197
            }else {
              return p1__8887_SHARP_.call(null, y)
            }
          }, ps__9192)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__8888_SHARP_) {
            var or__3943__auto____9198 = p1__8888_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto____9198)) {
              return or__3943__auto____9198
            }else {
              var or__3943__auto____9199 = p1__8888_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3943__auto____9199)) {
                return or__3943__auto____9199
              }else {
                return p1__8888_SHARP_.call(null, z)
              }
            }
          }, ps__9192)
        };
        var spn__4 = function() {
          var G__9208__delegate = function(x, y, z, args) {
            var or__3943__auto____9200 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3943__auto____9200)) {
              return or__3943__auto____9200
            }else {
              return cljs.core.some.call(null, function(p1__8889_SHARP_) {
                return cljs.core.some.call(null, p1__8889_SHARP_, args)
              }, ps__9192)
            }
          };
          var G__9208 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__9208__delegate.call(this, x, y, z, args)
          };
          G__9208.cljs$lang$maxFixedArity = 3;
          G__9208.cljs$lang$applyTo = function(arglist__9209) {
            var x = cljs.core.first(arglist__9209);
            var y = cljs.core.first(cljs.core.next(arglist__9209));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9209)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9209)));
            return G__9208__delegate(x, y, z, args)
          };
          G__9208.cljs$lang$arity$variadic = G__9208__delegate;
          return G__9208
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__9207 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9207__delegate.call(this, p1, p2, p3, ps)
    };
    G__9207.cljs$lang$maxFixedArity = 3;
    G__9207.cljs$lang$applyTo = function(arglist__9210) {
      var p1 = cljs.core.first(arglist__9210);
      var p2 = cljs.core.first(cljs.core.next(arglist__9210));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9210)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9210)));
      return G__9207__delegate(p1, p2, p3, ps)
    };
    G__9207.cljs$lang$arity$variadic = G__9207__delegate;
    return G__9207
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____9229 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____9229) {
        var s__9230 = temp__4092__auto____9229;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9230)) {
          var c__9231 = cljs.core.chunk_first.call(null, s__9230);
          var size__9232 = cljs.core.count.call(null, c__9231);
          var b__9233 = cljs.core.chunk_buffer.call(null, size__9232);
          var n__2552__auto____9234 = size__9232;
          var i__9235 = 0;
          while(true) {
            if(i__9235 < n__2552__auto____9234) {
              cljs.core.chunk_append.call(null, b__9233, f.call(null, cljs.core._nth.call(null, c__9231, i__9235)));
              var G__9247 = i__9235 + 1;
              i__9235 = G__9247;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9233), map.call(null, f, cljs.core.chunk_rest.call(null, s__9230)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__9230)), map.call(null, f, cljs.core.rest.call(null, s__9230)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9236 = cljs.core.seq.call(null, c1);
      var s2__9237 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto____9238 = s1__9236;
        if(and__3941__auto____9238) {
          return s2__9237
        }else {
          return and__3941__auto____9238
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9236), cljs.core.first.call(null, s2__9237)), map.call(null, f, cljs.core.rest.call(null, s1__9236), cljs.core.rest.call(null, s2__9237)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9239 = cljs.core.seq.call(null, c1);
      var s2__9240 = cljs.core.seq.call(null, c2);
      var s3__9241 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3941__auto____9242 = s1__9239;
        if(and__3941__auto____9242) {
          var and__3941__auto____9243 = s2__9240;
          if(and__3941__auto____9243) {
            return s3__9241
          }else {
            return and__3941__auto____9243
          }
        }else {
          return and__3941__auto____9242
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__9239), cljs.core.first.call(null, s2__9240), cljs.core.first.call(null, s3__9241)), map.call(null, f, cljs.core.rest.call(null, s1__9239), cljs.core.rest.call(null, s2__9240), cljs.core.rest.call(null, s3__9241)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__9248__delegate = function(f, c1, c2, c3, colls) {
      var step__9246 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__9245 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9245)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__9245), step.call(null, map.call(null, cljs.core.rest, ss__9245)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__9050_SHARP_) {
        return cljs.core.apply.call(null, f, p1__9050_SHARP_)
      }, step__9246.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__9248 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9248__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9248.cljs$lang$maxFixedArity = 4;
    G__9248.cljs$lang$applyTo = function(arglist__9249) {
      var f = cljs.core.first(arglist__9249);
      var c1 = cljs.core.first(cljs.core.next(arglist__9249));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9249)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9249))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9249))));
      return G__9248__delegate(f, c1, c2, c3, colls)
    };
    G__9248.cljs$lang$arity$variadic = G__9248__delegate;
    return G__9248
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__4092__auto____9252 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____9252) {
        var s__9253 = temp__4092__auto____9252;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__9253), take.call(null, n - 1, cljs.core.rest.call(null, s__9253)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__9259 = function(n, coll) {
    while(true) {
      var s__9257 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3941__auto____9258 = n > 0;
        if(and__3941__auto____9258) {
          return s__9257
        }else {
          return and__3941__auto____9258
        }
      }())) {
        var G__9260 = n - 1;
        var G__9261 = cljs.core.rest.call(null, s__9257);
        n = G__9260;
        coll = G__9261;
        continue
      }else {
        return s__9257
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9259.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__9264 = cljs.core.seq.call(null, coll);
  var lead__9265 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__9265) {
      var G__9266 = cljs.core.next.call(null, s__9264);
      var G__9267 = cljs.core.next.call(null, lead__9265);
      s__9264 = G__9266;
      lead__9265 = G__9267;
      continue
    }else {
      return s__9264
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__9273 = function(pred, coll) {
    while(true) {
      var s__9271 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3941__auto____9272 = s__9271;
        if(and__3941__auto____9272) {
          return pred.call(null, cljs.core.first.call(null, s__9271))
        }else {
          return and__3941__auto____9272
        }
      }())) {
        var G__9274 = pred;
        var G__9275 = cljs.core.rest.call(null, s__9271);
        pred = G__9274;
        coll = G__9275;
        continue
      }else {
        return s__9271
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__9273.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____9278 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____9278) {
      var s__9279 = temp__4092__auto____9278;
      return cljs.core.concat.call(null, s__9279, cycle.call(null, s__9279))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__9284 = cljs.core.seq.call(null, c1);
      var s2__9285 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto____9286 = s1__9284;
        if(and__3941__auto____9286) {
          return s2__9285
        }else {
          return and__3941__auto____9286
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__9284), cljs.core.cons.call(null, cljs.core.first.call(null, s2__9285), interleave.call(null, cljs.core.rest.call(null, s1__9284), cljs.core.rest.call(null, s2__9285))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__9288__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__9287 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__9287)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__9287), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__9287)))
        }else {
          return null
        }
      }, null)
    };
    var G__9288 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9288__delegate.call(this, c1, c2, colls)
    };
    G__9288.cljs$lang$maxFixedArity = 2;
    G__9288.cljs$lang$applyTo = function(arglist__9289) {
      var c1 = cljs.core.first(arglist__9289);
      var c2 = cljs.core.first(cljs.core.next(arglist__9289));
      var colls = cljs.core.rest(cljs.core.next(arglist__9289));
      return G__9288__delegate(c1, c2, colls)
    };
    G__9288.cljs$lang$arity$variadic = G__9288__delegate;
    return G__9288
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__9299 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto____9297 = cljs.core.seq.call(null, coll);
      if(temp__4090__auto____9297) {
        var coll__9298 = temp__4090__auto____9297;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__9298), cat.call(null, cljs.core.rest.call(null, coll__9298), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__9299.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__9300__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__9300 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9300__delegate.call(this, f, coll, colls)
    };
    G__9300.cljs$lang$maxFixedArity = 2;
    G__9300.cljs$lang$applyTo = function(arglist__9301) {
      var f = cljs.core.first(arglist__9301);
      var coll = cljs.core.first(cljs.core.next(arglist__9301));
      var colls = cljs.core.rest(cljs.core.next(arglist__9301));
      return G__9300__delegate(f, coll, colls)
    };
    G__9300.cljs$lang$arity$variadic = G__9300__delegate;
    return G__9300
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____9311 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____9311) {
      var s__9312 = temp__4092__auto____9311;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9312)) {
        var c__9313 = cljs.core.chunk_first.call(null, s__9312);
        var size__9314 = cljs.core.count.call(null, c__9313);
        var b__9315 = cljs.core.chunk_buffer.call(null, size__9314);
        var n__2552__auto____9316 = size__9314;
        var i__9317 = 0;
        while(true) {
          if(i__9317 < n__2552__auto____9316) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__9313, i__9317)))) {
              cljs.core.chunk_append.call(null, b__9315, cljs.core._nth.call(null, c__9313, i__9317))
            }else {
            }
            var G__9320 = i__9317 + 1;
            i__9317 = G__9320;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9315), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__9312)))
      }else {
        var f__9318 = cljs.core.first.call(null, s__9312);
        var r__9319 = cljs.core.rest.call(null, s__9312);
        if(cljs.core.truth_(pred.call(null, f__9318))) {
          return cljs.core.cons.call(null, f__9318, filter.call(null, pred, r__9319))
        }else {
          return filter.call(null, pred, r__9319)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__9323 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__9323.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__9321_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__9321_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__9327__9328 = to;
    if(G__9327__9328) {
      if(function() {
        var or__3943__auto____9329 = G__9327__9328.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3943__auto____9329) {
          return or__3943__auto____9329
        }else {
          return G__9327__9328.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__9327__9328.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9327__9328)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__9327__9328)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__9330__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__9330 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9330__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__9330.cljs$lang$maxFixedArity = 4;
    G__9330.cljs$lang$applyTo = function(arglist__9331) {
      var f = cljs.core.first(arglist__9331);
      var c1 = cljs.core.first(cljs.core.next(arglist__9331));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9331)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9331))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9331))));
      return G__9330__delegate(f, c1, c2, c3, colls)
    };
    G__9330.cljs$lang$arity$variadic = G__9330__delegate;
    return G__9330
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____9338 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____9338) {
        var s__9339 = temp__4092__auto____9338;
        var p__9340 = cljs.core.take.call(null, n, s__9339);
        if(n === cljs.core.count.call(null, p__9340)) {
          return cljs.core.cons.call(null, p__9340, partition.call(null, n, step, cljs.core.drop.call(null, step, s__9339)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____9341 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____9341) {
        var s__9342 = temp__4092__auto____9341;
        var p__9343 = cljs.core.take.call(null, n, s__9342);
        if(n === cljs.core.count.call(null, p__9343)) {
          return cljs.core.cons.call(null, p__9343, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__9342)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__9343, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__9348 = cljs.core.lookup_sentinel;
    var m__9349 = m;
    var ks__9350 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__9350) {
        var m__9351 = cljs.core._lookup.call(null, m__9349, cljs.core.first.call(null, ks__9350), sentinel__9348);
        if(sentinel__9348 === m__9351) {
          return not_found
        }else {
          var G__9352 = sentinel__9348;
          var G__9353 = m__9351;
          var G__9354 = cljs.core.next.call(null, ks__9350);
          sentinel__9348 = G__9352;
          m__9349 = G__9353;
          ks__9350 = G__9354;
          continue
        }
      }else {
        return m__9349
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__9355, v) {
  var vec__9360__9361 = p__9355;
  var k__9362 = cljs.core.nth.call(null, vec__9360__9361, 0, null);
  var ks__9363 = cljs.core.nthnext.call(null, vec__9360__9361, 1);
  if(cljs.core.truth_(ks__9363)) {
    return cljs.core.assoc.call(null, m, k__9362, assoc_in.call(null, cljs.core._lookup.call(null, m, k__9362, null), ks__9363, v))
  }else {
    return cljs.core.assoc.call(null, m, k__9362, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__9364, f, args) {
    var vec__9369__9370 = p__9364;
    var k__9371 = cljs.core.nth.call(null, vec__9369__9370, 0, null);
    var ks__9372 = cljs.core.nthnext.call(null, vec__9369__9370, 1);
    if(cljs.core.truth_(ks__9372)) {
      return cljs.core.assoc.call(null, m, k__9371, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__9371, null), ks__9372, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__9371, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__9371, null), args))
    }
  };
  var update_in = function(m, p__9364, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__9364, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__9373) {
    var m = cljs.core.first(arglist__9373);
    var p__9364 = cljs.core.first(cljs.core.next(arglist__9373));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9373)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9373)));
    return update_in__delegate(m, p__9364, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9376 = this;
  var h__2213__auto____9377 = this__9376.__hash;
  if(!(h__2213__auto____9377 == null)) {
    return h__2213__auto____9377
  }else {
    var h__2213__auto____9378 = cljs.core.hash_coll.call(null, coll);
    this__9376.__hash = h__2213__auto____9378;
    return h__2213__auto____9378
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9379 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9380 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9381 = this;
  var new_array__9382 = this__9381.array.slice();
  new_array__9382[k] = v;
  return new cljs.core.Vector(this__9381.meta, new_array__9382, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__9413 = null;
  var G__9413__2 = function(this_sym9383, k) {
    var this__9385 = this;
    var this_sym9383__9386 = this;
    var coll__9387 = this_sym9383__9386;
    return coll__9387.cljs$core$ILookup$_lookup$arity$2(coll__9387, k)
  };
  var G__9413__3 = function(this_sym9384, k, not_found) {
    var this__9385 = this;
    var this_sym9384__9388 = this;
    var coll__9389 = this_sym9384__9388;
    return coll__9389.cljs$core$ILookup$_lookup$arity$3(coll__9389, k, not_found)
  };
  G__9413 = function(this_sym9384, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9413__2.call(this, this_sym9384, k);
      case 3:
        return G__9413__3.call(this, this_sym9384, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9413
}();
cljs.core.Vector.prototype.apply = function(this_sym9374, args9375) {
  var this__9390 = this;
  return this_sym9374.call.apply(this_sym9374, [this_sym9374].concat(args9375.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9391 = this;
  var new_array__9392 = this__9391.array.slice();
  new_array__9392.push(o);
  return new cljs.core.Vector(this__9391.meta, new_array__9392, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__9393 = this;
  var this__9394 = this;
  return cljs.core.pr_str.call(null, this__9394)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9395 = this;
  return cljs.core.ci_reduce.call(null, this__9395.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9396 = this;
  return cljs.core.ci_reduce.call(null, this__9396.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9397 = this;
  if(this__9397.array.length > 0) {
    var vector_seq__9398 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__9397.array.length) {
          return cljs.core.cons.call(null, this__9397.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__9398.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9399 = this;
  return this__9399.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9400 = this;
  var count__9401 = this__9400.array.length;
  if(count__9401 > 0) {
    return this__9400.array[count__9401 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9402 = this;
  if(this__9402.array.length > 0) {
    var new_array__9403 = this__9402.array.slice();
    new_array__9403.pop();
    return new cljs.core.Vector(this__9402.meta, new_array__9403, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9404 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9405 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9406 = this;
  return new cljs.core.Vector(meta, this__9406.array, this__9406.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9407 = this;
  return this__9407.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9408 = this;
  if(function() {
    var and__3941__auto____9409 = 0 <= n;
    if(and__3941__auto____9409) {
      return n < this__9408.array.length
    }else {
      return and__3941__auto____9409
    }
  }()) {
    return this__9408.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9410 = this;
  if(function() {
    var and__3941__auto____9411 = 0 <= n;
    if(and__3941__auto____9411) {
      return n < this__9410.array.length
    }else {
      return and__3941__auto____9411
    }
  }()) {
    return this__9410.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9412 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9412.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2331__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__9415 = pv.cnt;
  if(cnt__9415 < 32) {
    return 0
  }else {
    return cnt__9415 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__9421 = level;
  var ret__9422 = node;
  while(true) {
    if(ll__9421 === 0) {
      return ret__9422
    }else {
      var embed__9423 = ret__9422;
      var r__9424 = cljs.core.pv_fresh_node.call(null, edit);
      var ___9425 = cljs.core.pv_aset.call(null, r__9424, 0, embed__9423);
      var G__9426 = ll__9421 - 5;
      var G__9427 = r__9424;
      ll__9421 = G__9426;
      ret__9422 = G__9427;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__9433 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__9434 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__9433, subidx__9434, tailnode);
    return ret__9433
  }else {
    var child__9435 = cljs.core.pv_aget.call(null, parent, subidx__9434);
    if(!(child__9435 == null)) {
      var node_to_insert__9436 = push_tail.call(null, pv, level - 5, child__9435, tailnode);
      cljs.core.pv_aset.call(null, ret__9433, subidx__9434, node_to_insert__9436);
      return ret__9433
    }else {
      var node_to_insert__9437 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__9433, subidx__9434, node_to_insert__9437);
      return ret__9433
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3941__auto____9441 = 0 <= i;
    if(and__3941__auto____9441) {
      return i < pv.cnt
    }else {
      return and__3941__auto____9441
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__9442 = pv.root;
      var level__9443 = pv.shift;
      while(true) {
        if(level__9443 > 0) {
          var G__9444 = cljs.core.pv_aget.call(null, node__9442, i >>> level__9443 & 31);
          var G__9445 = level__9443 - 5;
          node__9442 = G__9444;
          level__9443 = G__9445;
          continue
        }else {
          return node__9442.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__9448 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__9448, i & 31, val);
    return ret__9448
  }else {
    var subidx__9449 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__9448, subidx__9449, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9449), i, val));
    return ret__9448
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__9455 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9456 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__9455));
    if(function() {
      var and__3941__auto____9457 = new_child__9456 == null;
      if(and__3941__auto____9457) {
        return subidx__9455 === 0
      }else {
        return and__3941__auto____9457
      }
    }()) {
      return null
    }else {
      var ret__9458 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__9458, subidx__9455, new_child__9456);
      return ret__9458
    }
  }else {
    if(subidx__9455 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__9459 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__9459, subidx__9455, null);
        return ret__9459
      }else {
        return null
      }
    }
  }
};
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9462 = this;
  return new cljs.core.TransientVector(this__9462.cnt, this__9462.shift, cljs.core.tv_editable_root.call(null, this__9462.root), cljs.core.tv_editable_tail.call(null, this__9462.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9463 = this;
  var h__2213__auto____9464 = this__9463.__hash;
  if(!(h__2213__auto____9464 == null)) {
    return h__2213__auto____9464
  }else {
    var h__2213__auto____9465 = cljs.core.hash_coll.call(null, coll);
    this__9463.__hash = h__2213__auto____9465;
    return h__2213__auto____9465
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9466 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9467 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9468 = this;
  if(function() {
    var and__3941__auto____9469 = 0 <= k;
    if(and__3941__auto____9469) {
      return k < this__9468.cnt
    }else {
      return and__3941__auto____9469
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__9470 = this__9468.tail.slice();
      new_tail__9470[k & 31] = v;
      return new cljs.core.PersistentVector(this__9468.meta, this__9468.cnt, this__9468.shift, this__9468.root, new_tail__9470, null)
    }else {
      return new cljs.core.PersistentVector(this__9468.meta, this__9468.cnt, this__9468.shift, cljs.core.do_assoc.call(null, coll, this__9468.shift, this__9468.root, k, v), this__9468.tail, null)
    }
  }else {
    if(k === this__9468.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__9468.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9518 = null;
  var G__9518__2 = function(this_sym9471, k) {
    var this__9473 = this;
    var this_sym9471__9474 = this;
    var coll__9475 = this_sym9471__9474;
    return coll__9475.cljs$core$ILookup$_lookup$arity$2(coll__9475, k)
  };
  var G__9518__3 = function(this_sym9472, k, not_found) {
    var this__9473 = this;
    var this_sym9472__9476 = this;
    var coll__9477 = this_sym9472__9476;
    return coll__9477.cljs$core$ILookup$_lookup$arity$3(coll__9477, k, not_found)
  };
  G__9518 = function(this_sym9472, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9518__2.call(this, this_sym9472, k);
      case 3:
        return G__9518__3.call(this, this_sym9472, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9518
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym9460, args9461) {
  var this__9478 = this;
  return this_sym9460.call.apply(this_sym9460, [this_sym9460].concat(args9461.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__9479 = this;
  var step_init__9480 = [0, init];
  var i__9481 = 0;
  while(true) {
    if(i__9481 < this__9479.cnt) {
      var arr__9482 = cljs.core.array_for.call(null, v, i__9481);
      var len__9483 = arr__9482.length;
      var init__9487 = function() {
        var j__9484 = 0;
        var init__9485 = step_init__9480[1];
        while(true) {
          if(j__9484 < len__9483) {
            var init__9486 = f.call(null, init__9485, j__9484 + i__9481, arr__9482[j__9484]);
            if(cljs.core.reduced_QMARK_.call(null, init__9486)) {
              return init__9486
            }else {
              var G__9519 = j__9484 + 1;
              var G__9520 = init__9486;
              j__9484 = G__9519;
              init__9485 = G__9520;
              continue
            }
          }else {
            step_init__9480[0] = len__9483;
            step_init__9480[1] = init__9485;
            return init__9485
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9487)) {
        return cljs.core.deref.call(null, init__9487)
      }else {
        var G__9521 = i__9481 + step_init__9480[0];
        i__9481 = G__9521;
        continue
      }
    }else {
      return step_init__9480[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9488 = this;
  if(this__9488.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__9489 = this__9488.tail.slice();
    new_tail__9489.push(o);
    return new cljs.core.PersistentVector(this__9488.meta, this__9488.cnt + 1, this__9488.shift, this__9488.root, new_tail__9489, null)
  }else {
    var root_overflow_QMARK___9490 = this__9488.cnt >>> 5 > 1 << this__9488.shift;
    var new_shift__9491 = root_overflow_QMARK___9490 ? this__9488.shift + 5 : this__9488.shift;
    var new_root__9493 = root_overflow_QMARK___9490 ? function() {
      var n_r__9492 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__9492, 0, this__9488.root);
      cljs.core.pv_aset.call(null, n_r__9492, 1, cljs.core.new_path.call(null, null, this__9488.shift, new cljs.core.VectorNode(null, this__9488.tail)));
      return n_r__9492
    }() : cljs.core.push_tail.call(null, coll, this__9488.shift, this__9488.root, new cljs.core.VectorNode(null, this__9488.tail));
    return new cljs.core.PersistentVector(this__9488.meta, this__9488.cnt + 1, new_shift__9491, new_root__9493, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__9494 = this;
  if(this__9494.cnt > 0) {
    return new cljs.core.RSeq(coll, this__9494.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__9495 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__9496 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__9497 = this;
  var this__9498 = this;
  return cljs.core.pr_str.call(null, this__9498)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__9499 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__9500 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9501 = this;
  if(this__9501.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9502 = this;
  return this__9502.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9503 = this;
  if(this__9503.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__9503.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9504 = this;
  if(this__9504.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__9504.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9504.meta)
    }else {
      if(1 < this__9504.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__9504.meta, this__9504.cnt - 1, this__9504.shift, this__9504.root, this__9504.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__9505 = cljs.core.array_for.call(null, coll, this__9504.cnt - 2);
          var nr__9506 = cljs.core.pop_tail.call(null, coll, this__9504.shift, this__9504.root);
          var new_root__9507 = nr__9506 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__9506;
          var cnt_1__9508 = this__9504.cnt - 1;
          if(function() {
            var and__3941__auto____9509 = 5 < this__9504.shift;
            if(and__3941__auto____9509) {
              return cljs.core.pv_aget.call(null, new_root__9507, 1) == null
            }else {
              return and__3941__auto____9509
            }
          }()) {
            return new cljs.core.PersistentVector(this__9504.meta, cnt_1__9508, this__9504.shift - 5, cljs.core.pv_aget.call(null, new_root__9507, 0), new_tail__9505, null)
          }else {
            return new cljs.core.PersistentVector(this__9504.meta, cnt_1__9508, this__9504.shift, new_root__9507, new_tail__9505, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9510 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9511 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9512 = this;
  return new cljs.core.PersistentVector(meta, this__9512.cnt, this__9512.shift, this__9512.root, this__9512.tail, this__9512.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9513 = this;
  return this__9513.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9514 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9515 = this;
  if(function() {
    var and__3941__auto____9516 = 0 <= n;
    if(and__3941__auto____9516) {
      return n < this__9515.cnt
    }else {
      return and__3941__auto____9516
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9517 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9517.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__9522 = xs.length;
  var xs__9523 = no_clone === true ? xs : xs.slice();
  if(l__9522 < 32) {
    return new cljs.core.PersistentVector(null, l__9522, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__9523, null)
  }else {
    var node__9524 = xs__9523.slice(0, 32);
    var v__9525 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__9524, null);
    var i__9526 = 32;
    var out__9527 = cljs.core._as_transient.call(null, v__9525);
    while(true) {
      if(i__9526 < l__9522) {
        var G__9528 = i__9526 + 1;
        var G__9529 = cljs.core.conj_BANG_.call(null, out__9527, xs__9523[i__9526]);
        i__9526 = G__9528;
        out__9527 = G__9529;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__9527)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__9530) {
    var args = cljs.core.seq(arglist__9530);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9531 = this;
  if(this__9531.off + 1 < this__9531.node.length) {
    var s__9532 = cljs.core.chunked_seq.call(null, this__9531.vec, this__9531.node, this__9531.i, this__9531.off + 1);
    if(s__9532 == null) {
      return null
    }else {
      return s__9532
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9533 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9534 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9535 = this;
  return this__9535.node[this__9535.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9536 = this;
  if(this__9536.off + 1 < this__9536.node.length) {
    var s__9537 = cljs.core.chunked_seq.call(null, this__9536.vec, this__9536.node, this__9536.i, this__9536.off + 1);
    if(s__9537 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__9537
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9538 = this;
  var l__9539 = this__9538.node.length;
  var s__9540 = this__9538.i + l__9539 < cljs.core._count.call(null, this__9538.vec) ? cljs.core.chunked_seq.call(null, this__9538.vec, this__9538.i + l__9539, 0) : null;
  if(s__9540 == null) {
    return null
  }else {
    return s__9540
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9541 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9542 = this;
  return cljs.core.chunked_seq.call(null, this__9542.vec, this__9542.node, this__9542.i, this__9542.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__9543 = this;
  return this__9543.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9544 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__9544.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9545 = this;
  return cljs.core.array_chunk.call(null, this__9545.node, this__9545.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9546 = this;
  var l__9547 = this__9546.node.length;
  var s__9548 = this__9546.i + l__9547 < cljs.core._count.call(null, this__9546.vec) ? cljs.core.chunked_seq.call(null, this__9546.vec, this__9546.i + l__9547, 0) : null;
  if(s__9548 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__9548
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9551 = this;
  var h__2213__auto____9552 = this__9551.__hash;
  if(!(h__2213__auto____9552 == null)) {
    return h__2213__auto____9552
  }else {
    var h__2213__auto____9553 = cljs.core.hash_coll.call(null, coll);
    this__9551.__hash = h__2213__auto____9553;
    return h__2213__auto____9553
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9554 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9555 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__9556 = this;
  var v_pos__9557 = this__9556.start + key;
  return new cljs.core.Subvec(this__9556.meta, cljs.core._assoc.call(null, this__9556.v, v_pos__9557, val), this__9556.start, this__9556.end > v_pos__9557 + 1 ? this__9556.end : v_pos__9557 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__9583 = null;
  var G__9583__2 = function(this_sym9558, k) {
    var this__9560 = this;
    var this_sym9558__9561 = this;
    var coll__9562 = this_sym9558__9561;
    return coll__9562.cljs$core$ILookup$_lookup$arity$2(coll__9562, k)
  };
  var G__9583__3 = function(this_sym9559, k, not_found) {
    var this__9560 = this;
    var this_sym9559__9563 = this;
    var coll__9564 = this_sym9559__9563;
    return coll__9564.cljs$core$ILookup$_lookup$arity$3(coll__9564, k, not_found)
  };
  G__9583 = function(this_sym9559, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9583__2.call(this, this_sym9559, k);
      case 3:
        return G__9583__3.call(this, this_sym9559, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9583
}();
cljs.core.Subvec.prototype.apply = function(this_sym9549, args9550) {
  var this__9565 = this;
  return this_sym9549.call.apply(this_sym9549, [this_sym9549].concat(args9550.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9566 = this;
  return new cljs.core.Subvec(this__9566.meta, cljs.core._assoc_n.call(null, this__9566.v, this__9566.end, o), this__9566.start, this__9566.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__9567 = this;
  var this__9568 = this;
  return cljs.core.pr_str.call(null, this__9568)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9569 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9570 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9571 = this;
  var subvec_seq__9572 = function subvec_seq(i) {
    if(i === this__9571.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__9571.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__9572.call(null, this__9571.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9573 = this;
  return this__9573.end - this__9573.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9574 = this;
  return cljs.core._nth.call(null, this__9574.v, this__9574.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9575 = this;
  if(this__9575.start === this__9575.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__9575.meta, this__9575.v, this__9575.start, this__9575.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__9576 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9577 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9578 = this;
  return new cljs.core.Subvec(meta, this__9578.v, this__9578.start, this__9578.end, this__9578.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9579 = this;
  return this__9579.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9580 = this;
  return cljs.core._nth.call(null, this__9580.v, this__9580.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9581 = this;
  return cljs.core._nth.call(null, this__9581.v, this__9581.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9582 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__9582.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__9585 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__9585, 0, tl.length);
  return ret__9585
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__9589 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__9590 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__9589, subidx__9590, level === 5 ? tail_node : function() {
    var child__9591 = cljs.core.pv_aget.call(null, ret__9589, subidx__9590);
    if(!(child__9591 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__9591, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__9589
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__9596 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__9597 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__9598 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__9596, subidx__9597));
    if(function() {
      var and__3941__auto____9599 = new_child__9598 == null;
      if(and__3941__auto____9599) {
        return subidx__9597 === 0
      }else {
        return and__3941__auto____9599
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__9596, subidx__9597, new_child__9598);
      return node__9596
    }
  }else {
    if(subidx__9597 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__9596, subidx__9597, null);
        return node__9596
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3941__auto____9604 = 0 <= i;
    if(and__3941__auto____9604) {
      return i < tv.cnt
    }else {
      return and__3941__auto____9604
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__9605 = tv.root;
      var node__9606 = root__9605;
      var level__9607 = tv.shift;
      while(true) {
        if(level__9607 > 0) {
          var G__9608 = cljs.core.tv_ensure_editable.call(null, root__9605.edit, cljs.core.pv_aget.call(null, node__9606, i >>> level__9607 & 31));
          var G__9609 = level__9607 - 5;
          node__9606 = G__9608;
          level__9607 = G__9609;
          continue
        }else {
          return node__9606.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9649 = null;
  var G__9649__2 = function(this_sym9612, k) {
    var this__9614 = this;
    var this_sym9612__9615 = this;
    var coll__9616 = this_sym9612__9615;
    return coll__9616.cljs$core$ILookup$_lookup$arity$2(coll__9616, k)
  };
  var G__9649__3 = function(this_sym9613, k, not_found) {
    var this__9614 = this;
    var this_sym9613__9617 = this;
    var coll__9618 = this_sym9613__9617;
    return coll__9618.cljs$core$ILookup$_lookup$arity$3(coll__9618, k, not_found)
  };
  G__9649 = function(this_sym9613, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9649__2.call(this, this_sym9613, k);
      case 3:
        return G__9649__3.call(this, this_sym9613, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9649
}();
cljs.core.TransientVector.prototype.apply = function(this_sym9610, args9611) {
  var this__9619 = this;
  return this_sym9610.call.apply(this_sym9610, [this_sym9610].concat(args9611.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9620 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9621 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__9622 = this;
  if(this__9622.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__9623 = this;
  if(function() {
    var and__3941__auto____9624 = 0 <= n;
    if(and__3941__auto____9624) {
      return n < this__9623.cnt
    }else {
      return and__3941__auto____9624
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9625 = this;
  if(this__9625.root.edit) {
    return this__9625.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__9626 = this;
  if(this__9626.root.edit) {
    if(function() {
      var and__3941__auto____9627 = 0 <= n;
      if(and__3941__auto____9627) {
        return n < this__9626.cnt
      }else {
        return and__3941__auto____9627
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__9626.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__9632 = function go(level, node) {
          var node__9630 = cljs.core.tv_ensure_editable.call(null, this__9626.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__9630, n & 31, val);
            return node__9630
          }else {
            var subidx__9631 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__9630, subidx__9631, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__9630, subidx__9631)));
            return node__9630
          }
        }.call(null, this__9626.shift, this__9626.root);
        this__9626.root = new_root__9632;
        return tcoll
      }
    }else {
      if(n === this__9626.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__9626.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__9633 = this;
  if(this__9633.root.edit) {
    if(this__9633.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__9633.cnt) {
        this__9633.cnt = 0;
        return tcoll
      }else {
        if((this__9633.cnt - 1 & 31) > 0) {
          this__9633.cnt = this__9633.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__9634 = cljs.core.editable_array_for.call(null, tcoll, this__9633.cnt - 2);
            var new_root__9636 = function() {
              var nr__9635 = cljs.core.tv_pop_tail.call(null, tcoll, this__9633.shift, this__9633.root);
              if(!(nr__9635 == null)) {
                return nr__9635
              }else {
                return new cljs.core.VectorNode(this__9633.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3941__auto____9637 = 5 < this__9633.shift;
              if(and__3941__auto____9637) {
                return cljs.core.pv_aget.call(null, new_root__9636, 1) == null
              }else {
                return and__3941__auto____9637
              }
            }()) {
              var new_root__9638 = cljs.core.tv_ensure_editable.call(null, this__9633.root.edit, cljs.core.pv_aget.call(null, new_root__9636, 0));
              this__9633.root = new_root__9638;
              this__9633.shift = this__9633.shift - 5;
              this__9633.cnt = this__9633.cnt - 1;
              this__9633.tail = new_tail__9634;
              return tcoll
            }else {
              this__9633.root = new_root__9636;
              this__9633.cnt = this__9633.cnt - 1;
              this__9633.tail = new_tail__9634;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9639 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9640 = this;
  if(this__9640.root.edit) {
    if(this__9640.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__9640.tail[this__9640.cnt & 31] = o;
      this__9640.cnt = this__9640.cnt + 1;
      return tcoll
    }else {
      var tail_node__9641 = new cljs.core.VectorNode(this__9640.root.edit, this__9640.tail);
      var new_tail__9642 = cljs.core.make_array.call(null, 32);
      new_tail__9642[0] = o;
      this__9640.tail = new_tail__9642;
      if(this__9640.cnt >>> 5 > 1 << this__9640.shift) {
        var new_root_array__9643 = cljs.core.make_array.call(null, 32);
        var new_shift__9644 = this__9640.shift + 5;
        new_root_array__9643[0] = this__9640.root;
        new_root_array__9643[1] = cljs.core.new_path.call(null, this__9640.root.edit, this__9640.shift, tail_node__9641);
        this__9640.root = new cljs.core.VectorNode(this__9640.root.edit, new_root_array__9643);
        this__9640.shift = new_shift__9644;
        this__9640.cnt = this__9640.cnt + 1;
        return tcoll
      }else {
        var new_root__9645 = cljs.core.tv_push_tail.call(null, tcoll, this__9640.shift, this__9640.root, tail_node__9641);
        this__9640.root = new_root__9645;
        this__9640.cnt = this__9640.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9646 = this;
  if(this__9646.root.edit) {
    this__9646.root.edit = null;
    var len__9647 = this__9646.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__9648 = cljs.core.make_array.call(null, len__9647);
    cljs.core.array_copy.call(null, this__9646.tail, 0, trimmed_tail__9648, 0, len__9647);
    return new cljs.core.PersistentVector(null, this__9646.cnt, this__9646.shift, this__9646.root, trimmed_tail__9648, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9650 = this;
  var h__2213__auto____9651 = this__9650.__hash;
  if(!(h__2213__auto____9651 == null)) {
    return h__2213__auto____9651
  }else {
    var h__2213__auto____9652 = cljs.core.hash_coll.call(null, coll);
    this__9650.__hash = h__2213__auto____9652;
    return h__2213__auto____9652
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9653 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__9654 = this;
  var this__9655 = this;
  return cljs.core.pr_str.call(null, this__9655)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9656 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9657 = this;
  return cljs.core._first.call(null, this__9657.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9658 = this;
  var temp__4090__auto____9659 = cljs.core.next.call(null, this__9658.front);
  if(temp__4090__auto____9659) {
    var f1__9660 = temp__4090__auto____9659;
    return new cljs.core.PersistentQueueSeq(this__9658.meta, f1__9660, this__9658.rear, null)
  }else {
    if(this__9658.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__9658.meta, this__9658.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9661 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9662 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__9662.front, this__9662.rear, this__9662.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9663 = this;
  return this__9663.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9664 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9664.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9665 = this;
  var h__2213__auto____9666 = this__9665.__hash;
  if(!(h__2213__auto____9666 == null)) {
    return h__2213__auto____9666
  }else {
    var h__2213__auto____9667 = cljs.core.hash_coll.call(null, coll);
    this__9665.__hash = h__2213__auto____9667;
    return h__2213__auto____9667
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9668 = this;
  if(cljs.core.truth_(this__9668.front)) {
    return new cljs.core.PersistentQueue(this__9668.meta, this__9668.count + 1, this__9668.front, cljs.core.conj.call(null, function() {
      var or__3943__auto____9669 = this__9668.rear;
      if(cljs.core.truth_(or__3943__auto____9669)) {
        return or__3943__auto____9669
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__9668.meta, this__9668.count + 1, cljs.core.conj.call(null, this__9668.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__9670 = this;
  var this__9671 = this;
  return cljs.core.pr_str.call(null, this__9671)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9672 = this;
  var rear__9673 = cljs.core.seq.call(null, this__9672.rear);
  if(cljs.core.truth_(function() {
    var or__3943__auto____9674 = this__9672.front;
    if(cljs.core.truth_(or__3943__auto____9674)) {
      return or__3943__auto____9674
    }else {
      return rear__9673
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__9672.front, cljs.core.seq.call(null, rear__9673), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9675 = this;
  return this__9675.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9676 = this;
  return cljs.core._first.call(null, this__9676.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9677 = this;
  if(cljs.core.truth_(this__9677.front)) {
    var temp__4090__auto____9678 = cljs.core.next.call(null, this__9677.front);
    if(temp__4090__auto____9678) {
      var f1__9679 = temp__4090__auto____9678;
      return new cljs.core.PersistentQueue(this__9677.meta, this__9677.count - 1, f1__9679, this__9677.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__9677.meta, this__9677.count - 1, cljs.core.seq.call(null, this__9677.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9680 = this;
  return cljs.core.first.call(null, this__9680.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9681 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9682 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9683 = this;
  return new cljs.core.PersistentQueue(meta, this__9683.count, this__9683.front, this__9683.rear, this__9683.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9684 = this;
  return this__9684.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9685 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__9686 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__9689 = array.length;
  var i__9690 = 0;
  while(true) {
    if(i__9690 < len__9689) {
      if(k === array[i__9690]) {
        return i__9690
      }else {
        var G__9691 = i__9690 + incr;
        i__9690 = G__9691;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__9694 = cljs.core.hash.call(null, a);
  var b__9695 = cljs.core.hash.call(null, b);
  if(a__9694 < b__9695) {
    return-1
  }else {
    if(a__9694 > b__9695) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__9703 = m.keys;
  var len__9704 = ks__9703.length;
  var so__9705 = m.strobj;
  var out__9706 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__9707 = 0;
  var out__9708 = cljs.core.transient$.call(null, out__9706);
  while(true) {
    if(i__9707 < len__9704) {
      var k__9709 = ks__9703[i__9707];
      var G__9710 = i__9707 + 1;
      var G__9711 = cljs.core.assoc_BANG_.call(null, out__9708, k__9709, so__9705[k__9709]);
      i__9707 = G__9710;
      out__9708 = G__9711;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__9708, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__9717 = {};
  var l__9718 = ks.length;
  var i__9719 = 0;
  while(true) {
    if(i__9719 < l__9718) {
      var k__9720 = ks[i__9719];
      new_obj__9717[k__9720] = obj[k__9720];
      var G__9721 = i__9719 + 1;
      i__9719 = G__9721;
      continue
    }else {
    }
    break
  }
  return new_obj__9717
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9724 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9725 = this;
  var h__2213__auto____9726 = this__9725.__hash;
  if(!(h__2213__auto____9726 == null)) {
    return h__2213__auto____9726
  }else {
    var h__2213__auto____9727 = cljs.core.hash_imap.call(null, coll);
    this__9725.__hash = h__2213__auto____9727;
    return h__2213__auto____9727
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9728 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9729 = this;
  if(function() {
    var and__3941__auto____9730 = goog.isString(k);
    if(and__3941__auto____9730) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9729.keys) == null)
    }else {
      return and__3941__auto____9730
    }
  }()) {
    return this__9729.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9731 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3943__auto____9732 = this__9731.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3943__auto____9732) {
        return or__3943__auto____9732
      }else {
        return this__9731.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__9731.keys) == null)) {
        var new_strobj__9733 = cljs.core.obj_clone.call(null, this__9731.strobj, this__9731.keys);
        new_strobj__9733[k] = v;
        return new cljs.core.ObjMap(this__9731.meta, this__9731.keys, new_strobj__9733, this__9731.update_count + 1, null)
      }else {
        var new_strobj__9734 = cljs.core.obj_clone.call(null, this__9731.strobj, this__9731.keys);
        var new_keys__9735 = this__9731.keys.slice();
        new_strobj__9734[k] = v;
        new_keys__9735.push(k);
        return new cljs.core.ObjMap(this__9731.meta, new_keys__9735, new_strobj__9734, this__9731.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9736 = this;
  if(function() {
    var and__3941__auto____9737 = goog.isString(k);
    if(and__3941__auto____9737) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9736.keys) == null)
    }else {
      return and__3941__auto____9737
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9759 = null;
  var G__9759__2 = function(this_sym9738, k) {
    var this__9740 = this;
    var this_sym9738__9741 = this;
    var coll__9742 = this_sym9738__9741;
    return coll__9742.cljs$core$ILookup$_lookup$arity$2(coll__9742, k)
  };
  var G__9759__3 = function(this_sym9739, k, not_found) {
    var this__9740 = this;
    var this_sym9739__9743 = this;
    var coll__9744 = this_sym9739__9743;
    return coll__9744.cljs$core$ILookup$_lookup$arity$3(coll__9744, k, not_found)
  };
  G__9759 = function(this_sym9739, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9759__2.call(this, this_sym9739, k);
      case 3:
        return G__9759__3.call(this, this_sym9739, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9759
}();
cljs.core.ObjMap.prototype.apply = function(this_sym9722, args9723) {
  var this__9745 = this;
  return this_sym9722.call.apply(this_sym9722, [this_sym9722].concat(args9723.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9746 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__9747 = this;
  var this__9748 = this;
  return cljs.core.pr_str.call(null, this__9748)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9749 = this;
  if(this__9749.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__9712_SHARP_) {
      return cljs.core.vector.call(null, p1__9712_SHARP_, this__9749.strobj[p1__9712_SHARP_])
    }, this__9749.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9750 = this;
  return this__9750.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9751 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9752 = this;
  return new cljs.core.ObjMap(meta, this__9752.keys, this__9752.strobj, this__9752.update_count, this__9752.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9753 = this;
  return this__9753.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9754 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__9754.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9755 = this;
  if(function() {
    var and__3941__auto____9756 = goog.isString(k);
    if(and__3941__auto____9756) {
      return!(cljs.core.scan_array.call(null, 1, k, this__9755.keys) == null)
    }else {
      return and__3941__auto____9756
    }
  }()) {
    var new_keys__9757 = this__9755.keys.slice();
    var new_strobj__9758 = cljs.core.obj_clone.call(null, this__9755.strobj, this__9755.keys);
    new_keys__9757.splice(cljs.core.scan_array.call(null, 1, k, new_keys__9757), 1);
    cljs.core.js_delete.call(null, new_strobj__9758, k);
    return new cljs.core.ObjMap(this__9755.meta, new_keys__9757, new_strobj__9758, this__9755.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9763 = this;
  var h__2213__auto____9764 = this__9763.__hash;
  if(!(h__2213__auto____9764 == null)) {
    return h__2213__auto____9764
  }else {
    var h__2213__auto____9765 = cljs.core.hash_imap.call(null, coll);
    this__9763.__hash = h__2213__auto____9765;
    return h__2213__auto____9765
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9766 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9767 = this;
  var bucket__9768 = this__9767.hashobj[cljs.core.hash.call(null, k)];
  var i__9769 = cljs.core.truth_(bucket__9768) ? cljs.core.scan_array.call(null, 2, k, bucket__9768) : null;
  if(cljs.core.truth_(i__9769)) {
    return bucket__9768[i__9769 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9770 = this;
  var h__9771 = cljs.core.hash.call(null, k);
  var bucket__9772 = this__9770.hashobj[h__9771];
  if(cljs.core.truth_(bucket__9772)) {
    var new_bucket__9773 = bucket__9772.slice();
    var new_hashobj__9774 = goog.object.clone(this__9770.hashobj);
    new_hashobj__9774[h__9771] = new_bucket__9773;
    var temp__4090__auto____9775 = cljs.core.scan_array.call(null, 2, k, new_bucket__9773);
    if(cljs.core.truth_(temp__4090__auto____9775)) {
      var i__9776 = temp__4090__auto____9775;
      new_bucket__9773[i__9776 + 1] = v;
      return new cljs.core.HashMap(this__9770.meta, this__9770.count, new_hashobj__9774, null)
    }else {
      new_bucket__9773.push(k, v);
      return new cljs.core.HashMap(this__9770.meta, this__9770.count + 1, new_hashobj__9774, null)
    }
  }else {
    var new_hashobj__9777 = goog.object.clone(this__9770.hashobj);
    new_hashobj__9777[h__9771] = [k, v];
    return new cljs.core.HashMap(this__9770.meta, this__9770.count + 1, new_hashobj__9777, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9778 = this;
  var bucket__9779 = this__9778.hashobj[cljs.core.hash.call(null, k)];
  var i__9780 = cljs.core.truth_(bucket__9779) ? cljs.core.scan_array.call(null, 2, k, bucket__9779) : null;
  if(cljs.core.truth_(i__9780)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__9805 = null;
  var G__9805__2 = function(this_sym9781, k) {
    var this__9783 = this;
    var this_sym9781__9784 = this;
    var coll__9785 = this_sym9781__9784;
    return coll__9785.cljs$core$ILookup$_lookup$arity$2(coll__9785, k)
  };
  var G__9805__3 = function(this_sym9782, k, not_found) {
    var this__9783 = this;
    var this_sym9782__9786 = this;
    var coll__9787 = this_sym9782__9786;
    return coll__9787.cljs$core$ILookup$_lookup$arity$3(coll__9787, k, not_found)
  };
  G__9805 = function(this_sym9782, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9805__2.call(this, this_sym9782, k);
      case 3:
        return G__9805__3.call(this, this_sym9782, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9805
}();
cljs.core.HashMap.prototype.apply = function(this_sym9761, args9762) {
  var this__9788 = this;
  return this_sym9761.call.apply(this_sym9761, [this_sym9761].concat(args9762.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9789 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__9790 = this;
  var this__9791 = this;
  return cljs.core.pr_str.call(null, this__9791)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9792 = this;
  if(this__9792.count > 0) {
    var hashes__9793 = cljs.core.js_keys.call(null, this__9792.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__9760_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__9792.hashobj[p1__9760_SHARP_]))
    }, hashes__9793)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9794 = this;
  return this__9794.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9795 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9796 = this;
  return new cljs.core.HashMap(meta, this__9796.count, this__9796.hashobj, this__9796.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9797 = this;
  return this__9797.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9798 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__9798.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9799 = this;
  var h__9800 = cljs.core.hash.call(null, k);
  var bucket__9801 = this__9799.hashobj[h__9800];
  var i__9802 = cljs.core.truth_(bucket__9801) ? cljs.core.scan_array.call(null, 2, k, bucket__9801) : null;
  if(cljs.core.not.call(null, i__9802)) {
    return coll
  }else {
    var new_hashobj__9803 = goog.object.clone(this__9799.hashobj);
    if(3 > bucket__9801.length) {
      cljs.core.js_delete.call(null, new_hashobj__9803, h__9800)
    }else {
      var new_bucket__9804 = bucket__9801.slice();
      new_bucket__9804.splice(i__9802, 2);
      new_hashobj__9803[h__9800] = new_bucket__9804
    }
    return new cljs.core.HashMap(this__9799.meta, this__9799.count - 1, new_hashobj__9803, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__9806 = ks.length;
  var i__9807 = 0;
  var out__9808 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__9807 < len__9806) {
      var G__9809 = i__9807 + 1;
      var G__9810 = cljs.core.assoc.call(null, out__9808, ks[i__9807], vs[i__9807]);
      i__9807 = G__9809;
      out__9808 = G__9810;
      continue
    }else {
      return out__9808
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__9814 = m.arr;
  var len__9815 = arr__9814.length;
  var i__9816 = 0;
  while(true) {
    if(len__9815 <= i__9816) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__9814[i__9816], k)) {
        return i__9816
      }else {
        if("\ufdd0'else") {
          var G__9817 = i__9816 + 2;
          i__9816 = G__9817;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
void 0;
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__9820 = this;
  return new cljs.core.TransientArrayMap({}, this__9820.arr.length, this__9820.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9821 = this;
  var h__2213__auto____9822 = this__9821.__hash;
  if(!(h__2213__auto____9822 == null)) {
    return h__2213__auto____9822
  }else {
    var h__2213__auto____9823 = cljs.core.hash_imap.call(null, coll);
    this__9821.__hash = h__2213__auto____9823;
    return h__2213__auto____9823
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__9824 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__9825 = this;
  var idx__9826 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9826 === -1) {
    return not_found
  }else {
    return this__9825.arr[idx__9826 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__9827 = this;
  var idx__9828 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9828 === -1) {
    if(this__9827.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__9827.meta, this__9827.cnt + 1, function() {
        var G__9829__9830 = this__9827.arr.slice();
        G__9829__9830.push(k);
        G__9829__9830.push(v);
        return G__9829__9830
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__9827.arr[idx__9828 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__9827.meta, this__9827.cnt, function() {
          var G__9831__9832 = this__9827.arr.slice();
          G__9831__9832[idx__9828 + 1] = v;
          return G__9831__9832
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__9833 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9865 = null;
  var G__9865__2 = function(this_sym9834, k) {
    var this__9836 = this;
    var this_sym9834__9837 = this;
    var coll__9838 = this_sym9834__9837;
    return coll__9838.cljs$core$ILookup$_lookup$arity$2(coll__9838, k)
  };
  var G__9865__3 = function(this_sym9835, k, not_found) {
    var this__9836 = this;
    var this_sym9835__9839 = this;
    var coll__9840 = this_sym9835__9839;
    return coll__9840.cljs$core$ILookup$_lookup$arity$3(coll__9840, k, not_found)
  };
  G__9865 = function(this_sym9835, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9865__2.call(this, this_sym9835, k);
      case 3:
        return G__9865__3.call(this, this_sym9835, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9865
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym9818, args9819) {
  var this__9841 = this;
  return this_sym9818.call.apply(this_sym9818, [this_sym9818].concat(args9819.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__9842 = this;
  var len__9843 = this__9842.arr.length;
  var i__9844 = 0;
  var init__9845 = init;
  while(true) {
    if(i__9844 < len__9843) {
      var init__9846 = f.call(null, init__9845, this__9842.arr[i__9844], this__9842.arr[i__9844 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__9846)) {
        return cljs.core.deref.call(null, init__9846)
      }else {
        var G__9866 = i__9844 + 2;
        var G__9867 = init__9846;
        i__9844 = G__9866;
        init__9845 = G__9867;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__9847 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__9848 = this;
  var this__9849 = this;
  return cljs.core.pr_str.call(null, this__9849)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9850 = this;
  if(this__9850.cnt > 0) {
    var len__9851 = this__9850.arr.length;
    var array_map_seq__9852 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__9851) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__9850.arr[i], this__9850.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__9852.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9853 = this;
  return this__9853.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9854 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9855 = this;
  return new cljs.core.PersistentArrayMap(meta, this__9855.cnt, this__9855.arr, this__9855.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9856 = this;
  return this__9856.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9857 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__9857.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__9858 = this;
  var idx__9859 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__9859 >= 0) {
    var len__9860 = this__9858.arr.length;
    var new_len__9861 = len__9860 - 2;
    if(new_len__9861 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__9862 = cljs.core.make_array.call(null, new_len__9861);
      var s__9863 = 0;
      var d__9864 = 0;
      while(true) {
        if(s__9863 >= len__9860) {
          return new cljs.core.PersistentArrayMap(this__9858.meta, this__9858.cnt - 1, new_arr__9862, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__9858.arr[s__9863])) {
            var G__9868 = s__9863 + 2;
            var G__9869 = d__9864;
            s__9863 = G__9868;
            d__9864 = G__9869;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__9862[d__9864] = this__9858.arr[s__9863];
              new_arr__9862[d__9864 + 1] = this__9858.arr[s__9863 + 1];
              var G__9870 = s__9863 + 2;
              var G__9871 = d__9864 + 2;
              s__9863 = G__9870;
              d__9864 = G__9871;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__9872 = cljs.core.count.call(null, ks);
  var i__9873 = 0;
  var out__9874 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__9873 < len__9872) {
      var G__9875 = i__9873 + 1;
      var G__9876 = cljs.core.assoc_BANG_.call(null, out__9874, ks[i__9873], vs[i__9873]);
      i__9873 = G__9875;
      out__9874 = G__9876;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__9874)
    }
    break
  }
};
void 0;
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__9877 = this;
  if(cljs.core.truth_(this__9877.editable_QMARK_)) {
    var idx__9878 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9878 >= 0) {
      this__9877.arr[idx__9878] = this__9877.arr[this__9877.len - 2];
      this__9877.arr[idx__9878 + 1] = this__9877.arr[this__9877.len - 1];
      var G__9879__9880 = this__9877.arr;
      G__9879__9880.pop();
      G__9879__9880.pop();
      G__9879__9880;
      this__9877.len = this__9877.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__9881 = this;
  if(cljs.core.truth_(this__9881.editable_QMARK_)) {
    var idx__9882 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__9882 === -1) {
      if(this__9881.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__9881.len = this__9881.len + 2;
        this__9881.arr.push(key);
        this__9881.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__9881.len, this__9881.arr), key, val)
      }
    }else {
      if(val === this__9881.arr[idx__9882 + 1]) {
        return tcoll
      }else {
        this__9881.arr[idx__9882 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__9883 = this;
  if(cljs.core.truth_(this__9883.editable_QMARK_)) {
    if(function() {
      var G__9884__9885 = o;
      if(G__9884__9885) {
        if(function() {
          var or__3943__auto____9886 = G__9884__9885.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto____9886) {
            return or__3943__auto____9886
          }else {
            return G__9884__9885.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__9884__9885.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9884__9885)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__9884__9885)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__9887 = cljs.core.seq.call(null, o);
      var tcoll__9888 = tcoll;
      while(true) {
        var temp__4090__auto____9889 = cljs.core.first.call(null, es__9887);
        if(cljs.core.truth_(temp__4090__auto____9889)) {
          var e__9890 = temp__4090__auto____9889;
          var G__9896 = cljs.core.next.call(null, es__9887);
          var G__9897 = tcoll__9888.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__9888, cljs.core.key.call(null, e__9890), cljs.core.val.call(null, e__9890));
          es__9887 = G__9896;
          tcoll__9888 = G__9897;
          continue
        }else {
          return tcoll__9888
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__9891 = this;
  if(cljs.core.truth_(this__9891.editable_QMARK_)) {
    this__9891.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__9891.len, 2), this__9891.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__9892 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__9893 = this;
  if(cljs.core.truth_(this__9893.editable_QMARK_)) {
    var idx__9894 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__9894 === -1) {
      return not_found
    }else {
      return this__9893.arr[idx__9894 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__9895 = this;
  if(cljs.core.truth_(this__9895.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__9895.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
void 0;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__9900 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__9901 = 0;
  while(true) {
    if(i__9901 < len) {
      var G__9902 = cljs.core.assoc_BANG_.call(null, out__9900, arr[i__9901], arr[i__9901 + 1]);
      var G__9903 = i__9901 + 2;
      out__9900 = G__9902;
      i__9901 = G__9903;
      continue
    }else {
      return out__9900
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2331__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
void 0;
void 0;
void 0;
void 0;
void 0;
void 0;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__9908__9909 = arr.slice();
    G__9908__9909[i] = a;
    return G__9908__9909
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__9910__9911 = arr.slice();
    G__9910__9911[i] = a;
    G__9910__9911[j] = b;
    return G__9910__9911
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__9913 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__9913, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__9913, 2 * i, new_arr__9913.length - 2 * i);
  return new_arr__9913
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__9916 = inode.ensure_editable(edit);
    editable__9916.arr[i] = a;
    return editable__9916
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__9917 = inode.ensure_editable(edit);
    editable__9917.arr[i] = a;
    editable__9917.arr[j] = b;
    return editable__9917
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__9924 = arr.length;
  var i__9925 = 0;
  var init__9926 = init;
  while(true) {
    if(i__9925 < len__9924) {
      var init__9929 = function() {
        var k__9927 = arr[i__9925];
        if(!(k__9927 == null)) {
          return f.call(null, init__9926, k__9927, arr[i__9925 + 1])
        }else {
          var node__9928 = arr[i__9925 + 1];
          if(!(node__9928 == null)) {
            return node__9928.kv_reduce(f, init__9926)
          }else {
            return init__9926
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__9929)) {
        return cljs.core.deref.call(null, init__9929)
      }else {
        var G__9930 = i__9925 + 2;
        var G__9931 = init__9929;
        i__9925 = G__9930;
        init__9926 = G__9931;
        continue
      }
    }else {
      return init__9926
    }
    break
  }
};
void 0;
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__9932 = this;
  var inode__9933 = this;
  if(this__9932.bitmap === bit) {
    return null
  }else {
    var editable__9934 = inode__9933.ensure_editable(e);
    var earr__9935 = editable__9934.arr;
    var len__9936 = earr__9935.length;
    editable__9934.bitmap = bit ^ editable__9934.bitmap;
    cljs.core.array_copy.call(null, earr__9935, 2 * (i + 1), earr__9935, 2 * i, len__9936 - 2 * (i + 1));
    earr__9935[len__9936 - 2] = null;
    earr__9935[len__9936 - 1] = null;
    return editable__9934
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__9937 = this;
  var inode__9938 = this;
  var bit__9939 = 1 << (hash >>> shift & 31);
  var idx__9940 = cljs.core.bitmap_indexed_node_index.call(null, this__9937.bitmap, bit__9939);
  if((this__9937.bitmap & bit__9939) === 0) {
    var n__9941 = cljs.core.bit_count.call(null, this__9937.bitmap);
    if(2 * n__9941 < this__9937.arr.length) {
      var editable__9942 = inode__9938.ensure_editable(edit);
      var earr__9943 = editable__9942.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__9943, 2 * idx__9940, earr__9943, 2 * (idx__9940 + 1), 2 * (n__9941 - idx__9940));
      earr__9943[2 * idx__9940] = key;
      earr__9943[2 * idx__9940 + 1] = val;
      editable__9942.bitmap = editable__9942.bitmap | bit__9939;
      return editable__9942
    }else {
      if(n__9941 >= 16) {
        var nodes__9944 = cljs.core.make_array.call(null, 32);
        var jdx__9945 = hash >>> shift & 31;
        nodes__9944[jdx__9945] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__9946 = 0;
        var j__9947 = 0;
        while(true) {
          if(i__9946 < 32) {
            if((this__9937.bitmap >>> i__9946 & 1) === 0) {
              var G__10000 = i__9946 + 1;
              var G__10001 = j__9947;
              i__9946 = G__10000;
              j__9947 = G__10001;
              continue
            }else {
              nodes__9944[i__9946] = !(this__9937.arr[j__9947] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__9937.arr[j__9947]), this__9937.arr[j__9947], this__9937.arr[j__9947 + 1], added_leaf_QMARK_) : this__9937.arr[j__9947 + 1];
              var G__10002 = i__9946 + 1;
              var G__10003 = j__9947 + 2;
              i__9946 = G__10002;
              j__9947 = G__10003;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__9941 + 1, nodes__9944)
      }else {
        if("\ufdd0'else") {
          var new_arr__9948 = cljs.core.make_array.call(null, 2 * (n__9941 + 4));
          cljs.core.array_copy.call(null, this__9937.arr, 0, new_arr__9948, 0, 2 * idx__9940);
          new_arr__9948[2 * idx__9940] = key;
          new_arr__9948[2 * idx__9940 + 1] = val;
          cljs.core.array_copy.call(null, this__9937.arr, 2 * idx__9940, new_arr__9948, 2 * (idx__9940 + 1), 2 * (n__9941 - idx__9940));
          added_leaf_QMARK_.val = true;
          var editable__9949 = inode__9938.ensure_editable(edit);
          editable__9949.arr = new_arr__9948;
          editable__9949.bitmap = editable__9949.bitmap | bit__9939;
          return editable__9949
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__9950 = this__9937.arr[2 * idx__9940];
    var val_or_node__9951 = this__9937.arr[2 * idx__9940 + 1];
    if(key_or_nil__9950 == null) {
      var n__9952 = val_or_node__9951.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9952 === val_or_node__9951) {
        return inode__9938
      }else {
        return cljs.core.edit_and_set.call(null, inode__9938, edit, 2 * idx__9940 + 1, n__9952)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9950)) {
        if(val === val_or_node__9951) {
          return inode__9938
        }else {
          return cljs.core.edit_and_set.call(null, inode__9938, edit, 2 * idx__9940 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__9938, edit, 2 * idx__9940, null, 2 * idx__9940 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__9950, val_or_node__9951, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__9953 = this;
  var inode__9954 = this;
  return cljs.core.create_inode_seq.call(null, this__9953.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__9955 = this;
  var inode__9956 = this;
  var bit__9957 = 1 << (hash >>> shift & 31);
  if((this__9955.bitmap & bit__9957) === 0) {
    return inode__9956
  }else {
    var idx__9958 = cljs.core.bitmap_indexed_node_index.call(null, this__9955.bitmap, bit__9957);
    var key_or_nil__9959 = this__9955.arr[2 * idx__9958];
    var val_or_node__9960 = this__9955.arr[2 * idx__9958 + 1];
    if(key_or_nil__9959 == null) {
      var n__9961 = val_or_node__9960.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__9961 === val_or_node__9960) {
        return inode__9956
      }else {
        if(!(n__9961 == null)) {
          return cljs.core.edit_and_set.call(null, inode__9956, edit, 2 * idx__9958 + 1, n__9961)
        }else {
          if(this__9955.bitmap === bit__9957) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__9956.edit_and_remove_pair(edit, bit__9957, idx__9958)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9959)) {
        removed_leaf_QMARK_[0] = true;
        return inode__9956.edit_and_remove_pair(edit, bit__9957, idx__9958)
      }else {
        if("\ufdd0'else") {
          return inode__9956
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__9962 = this;
  var inode__9963 = this;
  if(e === this__9962.edit) {
    return inode__9963
  }else {
    var n__9964 = cljs.core.bit_count.call(null, this__9962.bitmap);
    var new_arr__9965 = cljs.core.make_array.call(null, n__9964 < 0 ? 4 : 2 * (n__9964 + 1));
    cljs.core.array_copy.call(null, this__9962.arr, 0, new_arr__9965, 0, 2 * n__9964);
    return new cljs.core.BitmapIndexedNode(e, this__9962.bitmap, new_arr__9965)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__9966 = this;
  var inode__9967 = this;
  return cljs.core.inode_kv_reduce.call(null, this__9966.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__9968 = this;
  var inode__9969 = this;
  var bit__9970 = 1 << (hash >>> shift & 31);
  if((this__9968.bitmap & bit__9970) === 0) {
    return not_found
  }else {
    var idx__9971 = cljs.core.bitmap_indexed_node_index.call(null, this__9968.bitmap, bit__9970);
    var key_or_nil__9972 = this__9968.arr[2 * idx__9971];
    var val_or_node__9973 = this__9968.arr[2 * idx__9971 + 1];
    if(key_or_nil__9972 == null) {
      return val_or_node__9973.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9972)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__9972, val_or_node__9973], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__9974 = this;
  var inode__9975 = this;
  var bit__9976 = 1 << (hash >>> shift & 31);
  if((this__9974.bitmap & bit__9976) === 0) {
    return inode__9975
  }else {
    var idx__9977 = cljs.core.bitmap_indexed_node_index.call(null, this__9974.bitmap, bit__9976);
    var key_or_nil__9978 = this__9974.arr[2 * idx__9977];
    var val_or_node__9979 = this__9974.arr[2 * idx__9977 + 1];
    if(key_or_nil__9978 == null) {
      var n__9980 = val_or_node__9979.inode_without(shift + 5, hash, key);
      if(n__9980 === val_or_node__9979) {
        return inode__9975
      }else {
        if(!(n__9980 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__9974.bitmap, cljs.core.clone_and_set.call(null, this__9974.arr, 2 * idx__9977 + 1, n__9980))
        }else {
          if(this__9974.bitmap === bit__9976) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__9974.bitmap ^ bit__9976, cljs.core.remove_pair.call(null, this__9974.arr, idx__9977))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9978)) {
        return new cljs.core.BitmapIndexedNode(null, this__9974.bitmap ^ bit__9976, cljs.core.remove_pair.call(null, this__9974.arr, idx__9977))
      }else {
        if("\ufdd0'else") {
          return inode__9975
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__9981 = this;
  var inode__9982 = this;
  var bit__9983 = 1 << (hash >>> shift & 31);
  var idx__9984 = cljs.core.bitmap_indexed_node_index.call(null, this__9981.bitmap, bit__9983);
  if((this__9981.bitmap & bit__9983) === 0) {
    var n__9985 = cljs.core.bit_count.call(null, this__9981.bitmap);
    if(n__9985 >= 16) {
      var nodes__9986 = cljs.core.make_array.call(null, 32);
      var jdx__9987 = hash >>> shift & 31;
      nodes__9986[jdx__9987] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__9988 = 0;
      var j__9989 = 0;
      while(true) {
        if(i__9988 < 32) {
          if((this__9981.bitmap >>> i__9988 & 1) === 0) {
            var G__10004 = i__9988 + 1;
            var G__10005 = j__9989;
            i__9988 = G__10004;
            j__9989 = G__10005;
            continue
          }else {
            nodes__9986[i__9988] = !(this__9981.arr[j__9989] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__9981.arr[j__9989]), this__9981.arr[j__9989], this__9981.arr[j__9989 + 1], added_leaf_QMARK_) : this__9981.arr[j__9989 + 1];
            var G__10006 = i__9988 + 1;
            var G__10007 = j__9989 + 2;
            i__9988 = G__10006;
            j__9989 = G__10007;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__9985 + 1, nodes__9986)
    }else {
      var new_arr__9990 = cljs.core.make_array.call(null, 2 * (n__9985 + 1));
      cljs.core.array_copy.call(null, this__9981.arr, 0, new_arr__9990, 0, 2 * idx__9984);
      new_arr__9990[2 * idx__9984] = key;
      new_arr__9990[2 * idx__9984 + 1] = val;
      cljs.core.array_copy.call(null, this__9981.arr, 2 * idx__9984, new_arr__9990, 2 * (idx__9984 + 1), 2 * (n__9985 - idx__9984));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__9981.bitmap | bit__9983, new_arr__9990)
    }
  }else {
    var key_or_nil__9991 = this__9981.arr[2 * idx__9984];
    var val_or_node__9992 = this__9981.arr[2 * idx__9984 + 1];
    if(key_or_nil__9991 == null) {
      var n__9993 = val_or_node__9992.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__9993 === val_or_node__9992) {
        return inode__9982
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__9981.bitmap, cljs.core.clone_and_set.call(null, this__9981.arr, 2 * idx__9984 + 1, n__9993))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9991)) {
        if(val === val_or_node__9992) {
          return inode__9982
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__9981.bitmap, cljs.core.clone_and_set.call(null, this__9981.arr, 2 * idx__9984 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__9981.bitmap, cljs.core.clone_and_set.call(null, this__9981.arr, 2 * idx__9984, null, 2 * idx__9984 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__9991, val_or_node__9992, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__9994 = this;
  var inode__9995 = this;
  var bit__9996 = 1 << (hash >>> shift & 31);
  if((this__9994.bitmap & bit__9996) === 0) {
    return not_found
  }else {
    var idx__9997 = cljs.core.bitmap_indexed_node_index.call(null, this__9994.bitmap, bit__9996);
    var key_or_nil__9998 = this__9994.arr[2 * idx__9997];
    var val_or_node__9999 = this__9994.arr[2 * idx__9997 + 1];
    if(key_or_nil__9998 == null) {
      return val_or_node__9999.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__9998)) {
        return val_or_node__9999
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__10015 = array_node.arr;
  var len__10016 = 2 * (array_node.cnt - 1);
  var new_arr__10017 = cljs.core.make_array.call(null, len__10016);
  var i__10018 = 0;
  var j__10019 = 1;
  var bitmap__10020 = 0;
  while(true) {
    if(i__10018 < len__10016) {
      if(function() {
        var and__3941__auto____10021 = !(i__10018 === idx);
        if(and__3941__auto____10021) {
          return!(arr__10015[i__10018] == null)
        }else {
          return and__3941__auto____10021
        }
      }()) {
        new_arr__10017[j__10019] = arr__10015[i__10018];
        var G__10022 = i__10018 + 1;
        var G__10023 = j__10019 + 2;
        var G__10024 = bitmap__10020 | 1 << i__10018;
        i__10018 = G__10022;
        j__10019 = G__10023;
        bitmap__10020 = G__10024;
        continue
      }else {
        var G__10025 = i__10018 + 1;
        var G__10026 = j__10019;
        var G__10027 = bitmap__10020;
        i__10018 = G__10025;
        j__10019 = G__10026;
        bitmap__10020 = G__10027;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__10020, new_arr__10017)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10028 = this;
  var inode__10029 = this;
  var idx__10030 = hash >>> shift & 31;
  var node__10031 = this__10028.arr[idx__10030];
  if(node__10031 == null) {
    var editable__10032 = cljs.core.edit_and_set.call(null, inode__10029, edit, idx__10030, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__10032.cnt = editable__10032.cnt + 1;
    return editable__10032
  }else {
    var n__10033 = node__10031.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10033 === node__10031) {
      return inode__10029
    }else {
      return cljs.core.edit_and_set.call(null, inode__10029, edit, idx__10030, n__10033)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__10034 = this;
  var inode__10035 = this;
  return cljs.core.create_array_node_seq.call(null, this__10034.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10036 = this;
  var inode__10037 = this;
  var idx__10038 = hash >>> shift & 31;
  var node__10039 = this__10036.arr[idx__10038];
  if(node__10039 == null) {
    return inode__10037
  }else {
    var n__10040 = node__10039.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__10040 === node__10039) {
      return inode__10037
    }else {
      if(n__10040 == null) {
        if(this__10036.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10037, edit, idx__10038)
        }else {
          var editable__10041 = cljs.core.edit_and_set.call(null, inode__10037, edit, idx__10038, n__10040);
          editable__10041.cnt = editable__10041.cnt - 1;
          return editable__10041
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__10037, edit, idx__10038, n__10040)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__10042 = this;
  var inode__10043 = this;
  if(e === this__10042.edit) {
    return inode__10043
  }else {
    return new cljs.core.ArrayNode(e, this__10042.cnt, this__10042.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__10044 = this;
  var inode__10045 = this;
  var len__10046 = this__10044.arr.length;
  var i__10047 = 0;
  var init__10048 = init;
  while(true) {
    if(i__10047 < len__10046) {
      var node__10049 = this__10044.arr[i__10047];
      if(!(node__10049 == null)) {
        var init__10050 = node__10049.kv_reduce(f, init__10048);
        if(cljs.core.reduced_QMARK_.call(null, init__10050)) {
          return cljs.core.deref.call(null, init__10050)
        }else {
          var G__10069 = i__10047 + 1;
          var G__10070 = init__10050;
          i__10047 = G__10069;
          init__10048 = G__10070;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__10048
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10051 = this;
  var inode__10052 = this;
  var idx__10053 = hash >>> shift & 31;
  var node__10054 = this__10051.arr[idx__10053];
  if(!(node__10054 == null)) {
    return node__10054.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__10055 = this;
  var inode__10056 = this;
  var idx__10057 = hash >>> shift & 31;
  var node__10058 = this__10055.arr[idx__10057];
  if(!(node__10058 == null)) {
    var n__10059 = node__10058.inode_without(shift + 5, hash, key);
    if(n__10059 === node__10058) {
      return inode__10056
    }else {
      if(n__10059 == null) {
        if(this__10055.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__10056, null, idx__10057)
        }else {
          return new cljs.core.ArrayNode(null, this__10055.cnt - 1, cljs.core.clone_and_set.call(null, this__10055.arr, idx__10057, n__10059))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__10055.cnt, cljs.core.clone_and_set.call(null, this__10055.arr, idx__10057, n__10059))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__10056
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10060 = this;
  var inode__10061 = this;
  var idx__10062 = hash >>> shift & 31;
  var node__10063 = this__10060.arr[idx__10062];
  if(node__10063 == null) {
    return new cljs.core.ArrayNode(null, this__10060.cnt + 1, cljs.core.clone_and_set.call(null, this__10060.arr, idx__10062, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__10064 = node__10063.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__10064 === node__10063) {
      return inode__10061
    }else {
      return new cljs.core.ArrayNode(null, this__10060.cnt, cljs.core.clone_and_set.call(null, this__10060.arr, idx__10062, n__10064))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10065 = this;
  var inode__10066 = this;
  var idx__10067 = hash >>> shift & 31;
  var node__10068 = this__10065.arr[idx__10067];
  if(!(node__10068 == null)) {
    return node__10068.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__10073 = 2 * cnt;
  var i__10074 = 0;
  while(true) {
    if(i__10074 < lim__10073) {
      if(cljs.core.key_test.call(null, key, arr[i__10074])) {
        return i__10074
      }else {
        var G__10075 = i__10074 + 2;
        i__10074 = G__10075;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10076 = this;
  var inode__10077 = this;
  if(hash === this__10076.collision_hash) {
    var idx__10078 = cljs.core.hash_collision_node_find_index.call(null, this__10076.arr, this__10076.cnt, key);
    if(idx__10078 === -1) {
      if(this__10076.arr.length > 2 * this__10076.cnt) {
        var editable__10079 = cljs.core.edit_and_set.call(null, inode__10077, edit, 2 * this__10076.cnt, key, 2 * this__10076.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__10079.cnt = editable__10079.cnt + 1;
        return editable__10079
      }else {
        var len__10080 = this__10076.arr.length;
        var new_arr__10081 = cljs.core.make_array.call(null, len__10080 + 2);
        cljs.core.array_copy.call(null, this__10076.arr, 0, new_arr__10081, 0, len__10080);
        new_arr__10081[len__10080] = key;
        new_arr__10081[len__10080 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__10077.ensure_editable_array(edit, this__10076.cnt + 1, new_arr__10081)
      }
    }else {
      if(this__10076.arr[idx__10078 + 1] === val) {
        return inode__10077
      }else {
        return cljs.core.edit_and_set.call(null, inode__10077, edit, idx__10078 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__10076.collision_hash >>> shift & 31), [null, inode__10077, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__10082 = this;
  var inode__10083 = this;
  return cljs.core.create_inode_seq.call(null, this__10082.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10084 = this;
  var inode__10085 = this;
  var idx__10086 = cljs.core.hash_collision_node_find_index.call(null, this__10084.arr, this__10084.cnt, key);
  if(idx__10086 === -1) {
    return inode__10085
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__10084.cnt === 1) {
      return null
    }else {
      var editable__10087 = inode__10085.ensure_editable(edit);
      var earr__10088 = editable__10087.arr;
      earr__10088[idx__10086] = earr__10088[2 * this__10084.cnt - 2];
      earr__10088[idx__10086 + 1] = earr__10088[2 * this__10084.cnt - 1];
      earr__10088[2 * this__10084.cnt - 1] = null;
      earr__10088[2 * this__10084.cnt - 2] = null;
      editable__10087.cnt = editable__10087.cnt - 1;
      return editable__10087
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__10089 = this;
  var inode__10090 = this;
  if(e === this__10089.edit) {
    return inode__10090
  }else {
    var new_arr__10091 = cljs.core.make_array.call(null, 2 * (this__10089.cnt + 1));
    cljs.core.array_copy.call(null, this__10089.arr, 0, new_arr__10091, 0, 2 * this__10089.cnt);
    return new cljs.core.HashCollisionNode(e, this__10089.collision_hash, this__10089.cnt, new_arr__10091)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__10092 = this;
  var inode__10093 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10092.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10094 = this;
  var inode__10095 = this;
  var idx__10096 = cljs.core.hash_collision_node_find_index.call(null, this__10094.arr, this__10094.cnt, key);
  if(idx__10096 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10094.arr[idx__10096])) {
      return cljs.core.PersistentVector.fromArray([this__10094.arr[idx__10096], this__10094.arr[idx__10096 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__10097 = this;
  var inode__10098 = this;
  var idx__10099 = cljs.core.hash_collision_node_find_index.call(null, this__10097.arr, this__10097.cnt, key);
  if(idx__10099 === -1) {
    return inode__10098
  }else {
    if(this__10097.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__10097.collision_hash, this__10097.cnt - 1, cljs.core.remove_pair.call(null, this__10097.arr, cljs.core.quot.call(null, idx__10099, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10100 = this;
  var inode__10101 = this;
  if(hash === this__10100.collision_hash) {
    var idx__10102 = cljs.core.hash_collision_node_find_index.call(null, this__10100.arr, this__10100.cnt, key);
    if(idx__10102 === -1) {
      var len__10103 = this__10100.arr.length;
      var new_arr__10104 = cljs.core.make_array.call(null, len__10103 + 2);
      cljs.core.array_copy.call(null, this__10100.arr, 0, new_arr__10104, 0, len__10103);
      new_arr__10104[len__10103] = key;
      new_arr__10104[len__10103 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__10100.collision_hash, this__10100.cnt + 1, new_arr__10104)
    }else {
      if(cljs.core._EQ_.call(null, this__10100.arr[idx__10102], val)) {
        return inode__10101
      }else {
        return new cljs.core.HashCollisionNode(null, this__10100.collision_hash, this__10100.cnt, cljs.core.clone_and_set.call(null, this__10100.arr, idx__10102 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__10100.collision_hash >>> shift & 31), [null, inode__10101])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10105 = this;
  var inode__10106 = this;
  var idx__10107 = cljs.core.hash_collision_node_find_index.call(null, this__10105.arr, this__10105.cnt, key);
  if(idx__10107 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__10105.arr[idx__10107])) {
      return this__10105.arr[idx__10107 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__10108 = this;
  var inode__10109 = this;
  if(e === this__10108.edit) {
    this__10108.arr = array;
    this__10108.cnt = count;
    return inode__10109
  }else {
    return new cljs.core.HashCollisionNode(this__10108.edit, this__10108.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10114 = cljs.core.hash.call(null, key1);
    if(key1hash__10114 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10114, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10115 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__10114, key1, val1, added_leaf_QMARK___10115).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___10115)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__10116 = cljs.core.hash.call(null, key1);
    if(key1hash__10116 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__10116, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___10117 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__10116, key1, val1, added_leaf_QMARK___10117).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___10117)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10118 = this;
  var h__2213__auto____10119 = this__10118.__hash;
  if(!(h__2213__auto____10119 == null)) {
    return h__2213__auto____10119
  }else {
    var h__2213__auto____10120 = cljs.core.hash_coll.call(null, coll);
    this__10118.__hash = h__2213__auto____10120;
    return h__2213__auto____10120
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10121 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__10122 = this;
  var this__10123 = this;
  return cljs.core.pr_str.call(null, this__10123)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10124 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10125 = this;
  if(this__10125.s == null) {
    return cljs.core.PersistentVector.fromArray([this__10125.nodes[this__10125.i], this__10125.nodes[this__10125.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__10125.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10126 = this;
  if(this__10126.s == null) {
    return cljs.core.create_inode_seq.call(null, this__10126.nodes, this__10126.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__10126.nodes, this__10126.i, cljs.core.next.call(null, this__10126.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10127 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10128 = this;
  return new cljs.core.NodeSeq(meta, this__10128.nodes, this__10128.i, this__10128.s, this__10128.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10129 = this;
  return this__10129.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10130 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10130.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__10137 = nodes.length;
      var j__10138 = i;
      while(true) {
        if(j__10138 < len__10137) {
          if(!(nodes[j__10138] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__10138, null, null)
          }else {
            var temp__4090__auto____10139 = nodes[j__10138 + 1];
            if(cljs.core.truth_(temp__4090__auto____10139)) {
              var node__10140 = temp__4090__auto____10139;
              var temp__4090__auto____10141 = node__10140.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____10141)) {
                var node_seq__10142 = temp__4090__auto____10141;
                return new cljs.core.NodeSeq(null, nodes, j__10138 + 2, node_seq__10142, null)
              }else {
                var G__10143 = j__10138 + 2;
                j__10138 = G__10143;
                continue
              }
            }else {
              var G__10144 = j__10138 + 2;
              j__10138 = G__10144;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10145 = this;
  var h__2213__auto____10146 = this__10145.__hash;
  if(!(h__2213__auto____10146 == null)) {
    return h__2213__auto____10146
  }else {
    var h__2213__auto____10147 = cljs.core.hash_coll.call(null, coll);
    this__10145.__hash = h__2213__auto____10147;
    return h__2213__auto____10147
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10148 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__10149 = this;
  var this__10150 = this;
  return cljs.core.pr_str.call(null, this__10150)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10151 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10152 = this;
  return cljs.core.first.call(null, this__10152.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10153 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__10153.nodes, this__10153.i, cljs.core.next.call(null, this__10153.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10154 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10155 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__10155.nodes, this__10155.i, this__10155.s, this__10155.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10156 = this;
  return this__10156.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10157 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10157.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__10164 = nodes.length;
      var j__10165 = i;
      while(true) {
        if(j__10165 < len__10164) {
          var temp__4090__auto____10166 = nodes[j__10165];
          if(cljs.core.truth_(temp__4090__auto____10166)) {
            var nj__10167 = temp__4090__auto____10166;
            var temp__4090__auto____10168 = nj__10167.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____10168)) {
              var ns__10169 = temp__4090__auto____10168;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__10165 + 1, ns__10169, null)
            }else {
              var G__10170 = j__10165 + 1;
              j__10165 = G__10170;
              continue
            }
          }else {
            var G__10171 = j__10165 + 1;
            j__10165 = G__10171;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
void 0;
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10174 = this;
  return new cljs.core.TransientHashMap({}, this__10174.root, this__10174.cnt, this__10174.has_nil_QMARK_, this__10174.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10175 = this;
  var h__2213__auto____10176 = this__10175.__hash;
  if(!(h__2213__auto____10176 == null)) {
    return h__2213__auto____10176
  }else {
    var h__2213__auto____10177 = cljs.core.hash_imap.call(null, coll);
    this__10175.__hash = h__2213__auto____10177;
    return h__2213__auto____10177
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10178 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10179 = this;
  if(k == null) {
    if(this__10179.has_nil_QMARK_) {
      return this__10179.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10179.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__10179.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10180 = this;
  if(k == null) {
    if(function() {
      var and__3941__auto____10181 = this__10180.has_nil_QMARK_;
      if(and__3941__auto____10181) {
        return v === this__10180.nil_val
      }else {
        return and__3941__auto____10181
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10180.meta, this__10180.has_nil_QMARK_ ? this__10180.cnt : this__10180.cnt + 1, this__10180.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___10182 = new cljs.core.Box(false);
    var new_root__10183 = (this__10180.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10180.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10182);
    if(new_root__10183 === this__10180.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__10180.meta, added_leaf_QMARK___10182.val ? this__10180.cnt + 1 : this__10180.cnt, new_root__10183, this__10180.has_nil_QMARK_, this__10180.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10184 = this;
  if(k == null) {
    return this__10184.has_nil_QMARK_
  }else {
    if(this__10184.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__10184.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10207 = null;
  var G__10207__2 = function(this_sym10185, k) {
    var this__10187 = this;
    var this_sym10185__10188 = this;
    var coll__10189 = this_sym10185__10188;
    return coll__10189.cljs$core$ILookup$_lookup$arity$2(coll__10189, k)
  };
  var G__10207__3 = function(this_sym10186, k, not_found) {
    var this__10187 = this;
    var this_sym10186__10190 = this;
    var coll__10191 = this_sym10186__10190;
    return coll__10191.cljs$core$ILookup$_lookup$arity$3(coll__10191, k, not_found)
  };
  G__10207 = function(this_sym10186, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10207__2.call(this, this_sym10186, k);
      case 3:
        return G__10207__3.call(this, this_sym10186, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10207
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym10172, args10173) {
  var this__10192 = this;
  return this_sym10172.call.apply(this_sym10172, [this_sym10172].concat(args10173.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10193 = this;
  var init__10194 = this__10193.has_nil_QMARK_ ? f.call(null, init, null, this__10193.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__10194)) {
    return cljs.core.deref.call(null, init__10194)
  }else {
    if(!(this__10193.root == null)) {
      return this__10193.root.kv_reduce(f, init__10194)
    }else {
      if("\ufdd0'else") {
        return init__10194
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10195 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__10196 = this;
  var this__10197 = this;
  return cljs.core.pr_str.call(null, this__10197)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10198 = this;
  if(this__10198.cnt > 0) {
    var s__10199 = !(this__10198.root == null) ? this__10198.root.inode_seq() : null;
    if(this__10198.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__10198.nil_val], true), s__10199)
    }else {
      return s__10199
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10200 = this;
  return this__10200.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10201 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10202 = this;
  return new cljs.core.PersistentHashMap(meta, this__10202.cnt, this__10202.root, this__10202.has_nil_QMARK_, this__10202.nil_val, this__10202.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10203 = this;
  return this__10203.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10204 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__10204.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10205 = this;
  if(k == null) {
    if(this__10205.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__10205.meta, this__10205.cnt - 1, this__10205.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__10205.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__10206 = this__10205.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__10206 === this__10205.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__10205.meta, this__10205.cnt - 1, new_root__10206, this__10205.has_nil_QMARK_, this__10205.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__10208 = ks.length;
  var i__10209 = 0;
  var out__10210 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__10209 < len__10208) {
      var G__10211 = i__10209 + 1;
      var G__10212 = cljs.core.assoc_BANG_.call(null, out__10210, ks[i__10209], vs[i__10209]);
      i__10209 = G__10211;
      out__10210 = G__10212;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10210)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10213 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10214 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__10215 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10216 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10217 = this;
  if(k == null) {
    if(this__10217.has_nil_QMARK_) {
      return this__10217.nil_val
    }else {
      return null
    }
  }else {
    if(this__10217.root == null) {
      return null
    }else {
      return this__10217.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10218 = this;
  if(k == null) {
    if(this__10218.has_nil_QMARK_) {
      return this__10218.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__10218.root == null) {
      return not_found
    }else {
      return this__10218.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10219 = this;
  if(this__10219.edit) {
    return this__10219.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__10220 = this;
  var tcoll__10221 = this;
  if(this__10220.edit) {
    if(function() {
      var G__10222__10223 = o;
      if(G__10222__10223) {
        if(function() {
          var or__3943__auto____10224 = G__10222__10223.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto____10224) {
            return or__3943__auto____10224
          }else {
            return G__10222__10223.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10222__10223.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10222__10223)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10222__10223)
      }
    }()) {
      return tcoll__10221.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10225 = cljs.core.seq.call(null, o);
      var tcoll__10226 = tcoll__10221;
      while(true) {
        var temp__4090__auto____10227 = cljs.core.first.call(null, es__10225);
        if(cljs.core.truth_(temp__4090__auto____10227)) {
          var e__10228 = temp__4090__auto____10227;
          var G__10239 = cljs.core.next.call(null, es__10225);
          var G__10240 = tcoll__10226.assoc_BANG_(cljs.core.key.call(null, e__10228), cljs.core.val.call(null, e__10228));
          es__10225 = G__10239;
          tcoll__10226 = G__10240;
          continue
        }else {
          return tcoll__10226
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__10229 = this;
  var tcoll__10230 = this;
  if(this__10229.edit) {
    if(k == null) {
      if(this__10229.nil_val === v) {
      }else {
        this__10229.nil_val = v
      }
      if(this__10229.has_nil_QMARK_) {
      }else {
        this__10229.count = this__10229.count + 1;
        this__10229.has_nil_QMARK_ = true
      }
      return tcoll__10230
    }else {
      var added_leaf_QMARK___10231 = new cljs.core.Box(false);
      var node__10232 = (this__10229.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__10229.root).inode_assoc_BANG_(this__10229.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___10231);
      if(node__10232 === this__10229.root) {
      }else {
        this__10229.root = node__10232
      }
      if(added_leaf_QMARK___10231.val) {
        this__10229.count = this__10229.count + 1
      }else {
      }
      return tcoll__10230
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__10233 = this;
  var tcoll__10234 = this;
  if(this__10233.edit) {
    if(k == null) {
      if(this__10233.has_nil_QMARK_) {
        this__10233.has_nil_QMARK_ = false;
        this__10233.nil_val = null;
        this__10233.count = this__10233.count - 1;
        return tcoll__10234
      }else {
        return tcoll__10234
      }
    }else {
      if(this__10233.root == null) {
        return tcoll__10234
      }else {
        var removed_leaf_QMARK___10235 = new cljs.core.Box(false);
        var node__10236 = this__10233.root.inode_without_BANG_(this__10233.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___10235);
        if(node__10236 === this__10233.root) {
        }else {
          this__10233.root = node__10236
        }
        if(cljs.core.truth_(removed_leaf_QMARK___10235[0])) {
          this__10233.count = this__10233.count - 1
        }else {
        }
        return tcoll__10234
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__10237 = this;
  var tcoll__10238 = this;
  if(this__10237.edit) {
    this__10237.edit = null;
    return new cljs.core.PersistentHashMap(null, this__10237.count, this__10237.root, this__10237.has_nil_QMARK_, this__10237.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__10243 = node;
  var stack__10244 = stack;
  while(true) {
    if(!(t__10243 == null)) {
      var G__10245 = ascending_QMARK_ ? t__10243.left : t__10243.right;
      var G__10246 = cljs.core.conj.call(null, stack__10244, t__10243);
      t__10243 = G__10245;
      stack__10244 = G__10246;
      continue
    }else {
      return stack__10244
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10247 = this;
  var h__2213__auto____10248 = this__10247.__hash;
  if(!(h__2213__auto____10248 == null)) {
    return h__2213__auto____10248
  }else {
    var h__2213__auto____10249 = cljs.core.hash_coll.call(null, coll);
    this__10247.__hash = h__2213__auto____10249;
    return h__2213__auto____10249
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10250 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__10251 = this;
  var this__10252 = this;
  return cljs.core.pr_str.call(null, this__10252)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__10253 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10254 = this;
  if(this__10254.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__10254.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__10255 = this;
  return cljs.core.peek.call(null, this__10255.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__10256 = this;
  var t__10257 = cljs.core.first.call(null, this__10256.stack);
  var next_stack__10258 = cljs.core.tree_map_seq_push.call(null, this__10256.ascending_QMARK_ ? t__10257.right : t__10257.left, cljs.core.next.call(null, this__10256.stack), this__10256.ascending_QMARK_);
  if(!(next_stack__10258 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__10258, this__10256.ascending_QMARK_, this__10256.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10259 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10260 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__10260.stack, this__10260.ascending_QMARK_, this__10260.cnt, this__10260.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10261 = this;
  return this__10261.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
void 0;
void 0;
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3941__auto____10263 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3941__auto____10263) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3941__auto____10263
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3941__auto____10265 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3941__auto____10265) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3941__auto____10265
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__10269 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__10269)) {
    return cljs.core.deref.call(null, init__10269)
  }else {
    var init__10270 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__10269) : init__10269;
    if(cljs.core.reduced_QMARK_.call(null, init__10270)) {
      return cljs.core.deref.call(null, init__10270)
    }else {
      var init__10271 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__10270) : init__10270;
      if(cljs.core.reduced_QMARK_.call(null, init__10271)) {
        return cljs.core.deref.call(null, init__10271)
      }else {
        return init__10271
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10274 = this;
  var h__2213__auto____10275 = this__10274.__hash;
  if(!(h__2213__auto____10275 == null)) {
    return h__2213__auto____10275
  }else {
    var h__2213__auto____10276 = cljs.core.hash_coll.call(null, coll);
    this__10274.__hash = h__2213__auto____10276;
    return h__2213__auto____10276
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10277 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10278 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10279 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10279.key, this__10279.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10327 = null;
  var G__10327__2 = function(this_sym10280, k) {
    var this__10282 = this;
    var this_sym10280__10283 = this;
    var node__10284 = this_sym10280__10283;
    return node__10284.cljs$core$ILookup$_lookup$arity$2(node__10284, k)
  };
  var G__10327__3 = function(this_sym10281, k, not_found) {
    var this__10282 = this;
    var this_sym10281__10285 = this;
    var node__10286 = this_sym10281__10285;
    return node__10286.cljs$core$ILookup$_lookup$arity$3(node__10286, k, not_found)
  };
  G__10327 = function(this_sym10281, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10327__2.call(this, this_sym10281, k);
      case 3:
        return G__10327__3.call(this, this_sym10281, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10327
}();
cljs.core.BlackNode.prototype.apply = function(this_sym10272, args10273) {
  var this__10287 = this;
  return this_sym10272.call.apply(this_sym10272, [this_sym10272].concat(args10273.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10288 = this;
  return cljs.core.PersistentVector.fromArray([this__10288.key, this__10288.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10289 = this;
  return this__10289.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10290 = this;
  return this__10290.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__10291 = this;
  var node__10292 = this;
  return ins.balance_right(node__10292)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__10293 = this;
  var node__10294 = this;
  return new cljs.core.RedNode(this__10293.key, this__10293.val, this__10293.left, this__10293.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__10295 = this;
  var node__10296 = this;
  return cljs.core.balance_right_del.call(null, this__10295.key, this__10295.val, this__10295.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__10297 = this;
  var node__10298 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__10299 = this;
  var node__10300 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10300, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__10301 = this;
  var node__10302 = this;
  return cljs.core.balance_left_del.call(null, this__10301.key, this__10301.val, del, this__10301.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__10303 = this;
  var node__10304 = this;
  return ins.balance_left(node__10304)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__10305 = this;
  var node__10306 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__10306, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__10328 = null;
  var G__10328__0 = function() {
    var this__10307 = this;
    var this__10309 = this;
    return cljs.core.pr_str.call(null, this__10309)
  };
  G__10328 = function() {
    switch(arguments.length) {
      case 0:
        return G__10328__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10328
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__10310 = this;
  var node__10311 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10311, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__10312 = this;
  var node__10313 = this;
  return node__10313
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10314 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10315 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10316 = this;
  return cljs.core.list.call(null, this__10316.key, this__10316.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10317 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10318 = this;
  return this__10318.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10319 = this;
  return cljs.core.PersistentVector.fromArray([this__10319.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10320 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10320.key, this__10320.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10321 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10322 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10322.key, this__10322.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10323 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10324 = this;
  if(n === 0) {
    return this__10324.key
  }else {
    if(n === 1) {
      return this__10324.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10325 = this;
  if(n === 0) {
    return this__10325.key
  }else {
    if(n === 1) {
      return this__10325.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10326 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10331 = this;
  var h__2213__auto____10332 = this__10331.__hash;
  if(!(h__2213__auto____10332 == null)) {
    return h__2213__auto____10332
  }else {
    var h__2213__auto____10333 = cljs.core.hash_coll.call(null, coll);
    this__10331.__hash = h__2213__auto____10333;
    return h__2213__auto____10333
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__10334 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__10335 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__10336 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__10336.key, this__10336.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__10384 = null;
  var G__10384__2 = function(this_sym10337, k) {
    var this__10339 = this;
    var this_sym10337__10340 = this;
    var node__10341 = this_sym10337__10340;
    return node__10341.cljs$core$ILookup$_lookup$arity$2(node__10341, k)
  };
  var G__10384__3 = function(this_sym10338, k, not_found) {
    var this__10339 = this;
    var this_sym10338__10342 = this;
    var node__10343 = this_sym10338__10342;
    return node__10343.cljs$core$ILookup$_lookup$arity$3(node__10343, k, not_found)
  };
  G__10384 = function(this_sym10338, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10384__2.call(this, this_sym10338, k);
      case 3:
        return G__10384__3.call(this, this_sym10338, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10384
}();
cljs.core.RedNode.prototype.apply = function(this_sym10329, args10330) {
  var this__10344 = this;
  return this_sym10329.call.apply(this_sym10329, [this_sym10329].concat(args10330.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__10345 = this;
  return cljs.core.PersistentVector.fromArray([this__10345.key, this__10345.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__10346 = this;
  return this__10346.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__10347 = this;
  return this__10347.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__10348 = this;
  var node__10349 = this;
  return new cljs.core.RedNode(this__10348.key, this__10348.val, this__10348.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__10350 = this;
  var node__10351 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__10352 = this;
  var node__10353 = this;
  return new cljs.core.RedNode(this__10352.key, this__10352.val, this__10352.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__10354 = this;
  var node__10355 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__10356 = this;
  var node__10357 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__10357, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__10358 = this;
  var node__10359 = this;
  return new cljs.core.RedNode(this__10358.key, this__10358.val, del, this__10358.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__10360 = this;
  var node__10361 = this;
  return new cljs.core.RedNode(this__10360.key, this__10360.val, ins, this__10360.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__10362 = this;
  var node__10363 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10362.left)) {
    return new cljs.core.RedNode(this__10362.key, this__10362.val, this__10362.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__10362.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10362.right)) {
      return new cljs.core.RedNode(this__10362.right.key, this__10362.right.val, new cljs.core.BlackNode(this__10362.key, this__10362.val, this__10362.left, this__10362.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__10362.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__10363, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__10385 = null;
  var G__10385__0 = function() {
    var this__10364 = this;
    var this__10366 = this;
    return cljs.core.pr_str.call(null, this__10366)
  };
  G__10385 = function() {
    switch(arguments.length) {
      case 0:
        return G__10385__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10385
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__10367 = this;
  var node__10368 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10367.right)) {
    return new cljs.core.RedNode(this__10367.key, this__10367.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10367.left, null), this__10367.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__10367.left)) {
      return new cljs.core.RedNode(this__10367.left.key, this__10367.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__10367.left.left, null), new cljs.core.BlackNode(this__10367.key, this__10367.val, this__10367.left.right, this__10367.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__10368, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__10369 = this;
  var node__10370 = this;
  return new cljs.core.BlackNode(this__10369.key, this__10369.val, this__10369.left, this__10369.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__10371 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__10372 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__10373 = this;
  return cljs.core.list.call(null, this__10373.key, this__10373.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__10374 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__10375 = this;
  return this__10375.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__10376 = this;
  return cljs.core.PersistentVector.fromArray([this__10376.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__10377 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__10377.key, this__10377.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10378 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__10379 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__10379.key, this__10379.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__10380 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__10381 = this;
  if(n === 0) {
    return this__10381.key
  }else {
    if(n === 1) {
      return this__10381.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__10382 = this;
  if(n === 0) {
    return this__10382.key
  }else {
    if(n === 1) {
      return this__10382.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__10383 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__10389 = comp.call(null, k, tree.key);
    if(c__10389 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__10389 < 0) {
        var ins__10390 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__10390 == null)) {
          return tree.add_left(ins__10390)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__10391 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__10391 == null)) {
            return tree.add_right(ins__10391)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__10394 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10394)) {
            return new cljs.core.RedNode(app__10394.key, app__10394.val, new cljs.core.RedNode(left.key, left.val, left.left, app__10394.left, null), new cljs.core.RedNode(right.key, right.val, app__10394.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__10394, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__10395 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__10395)) {
              return new cljs.core.RedNode(app__10395.key, app__10395.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__10395.left, null), new cljs.core.BlackNode(right.key, right.val, app__10395.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__10395, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__10401 = comp.call(null, k, tree.key);
    if(c__10401 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__10401 < 0) {
        var del__10402 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3943__auto____10403 = !(del__10402 == null);
          if(or__3943__auto____10403) {
            return or__3943__auto____10403
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__10402, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__10402, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__10404 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3943__auto____10405 = !(del__10404 == null);
            if(or__3943__auto____10405) {
              return or__3943__auto____10405
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__10404)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__10404, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__10408 = tree.key;
  var c__10409 = comp.call(null, k, tk__10408);
  if(c__10409 === 0) {
    return tree.replace(tk__10408, v, tree.left, tree.right)
  }else {
    if(c__10409 < 0) {
      return tree.replace(tk__10408, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__10408, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
void 0;
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10412 = this;
  var h__2213__auto____10413 = this__10412.__hash;
  if(!(h__2213__auto____10413 == null)) {
    return h__2213__auto____10413
  }else {
    var h__2213__auto____10414 = cljs.core.hash_imap.call(null, coll);
    this__10412.__hash = h__2213__auto____10414;
    return h__2213__auto____10414
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10415 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10416 = this;
  var n__10417 = coll.entry_at(k);
  if(!(n__10417 == null)) {
    return n__10417.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10418 = this;
  var found__10419 = [null];
  var t__10420 = cljs.core.tree_map_add.call(null, this__10418.comp, this__10418.tree, k, v, found__10419);
  if(t__10420 == null) {
    var found_node__10421 = cljs.core.nth.call(null, found__10419, 0);
    if(cljs.core._EQ_.call(null, v, found_node__10421.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10418.comp, cljs.core.tree_map_replace.call(null, this__10418.comp, this__10418.tree, k, v), this__10418.cnt, this__10418.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10418.comp, t__10420.blacken(), this__10418.cnt + 1, this__10418.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10422 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10456 = null;
  var G__10456__2 = function(this_sym10423, k) {
    var this__10425 = this;
    var this_sym10423__10426 = this;
    var coll__10427 = this_sym10423__10426;
    return coll__10427.cljs$core$ILookup$_lookup$arity$2(coll__10427, k)
  };
  var G__10456__3 = function(this_sym10424, k, not_found) {
    var this__10425 = this;
    var this_sym10424__10428 = this;
    var coll__10429 = this_sym10424__10428;
    return coll__10429.cljs$core$ILookup$_lookup$arity$3(coll__10429, k, not_found)
  };
  G__10456 = function(this_sym10424, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10456__2.call(this, this_sym10424, k);
      case 3:
        return G__10456__3.call(this, this_sym10424, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10456
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym10410, args10411) {
  var this__10430 = this;
  return this_sym10410.call.apply(this_sym10410, [this_sym10410].concat(args10411.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10431 = this;
  if(!(this__10431.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__10431.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10432 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10433 = this;
  if(this__10433.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10433.tree, false, this__10433.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__10434 = this;
  var this__10435 = this;
  return cljs.core.pr_str.call(null, this__10435)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__10436 = this;
  var coll__10437 = this;
  var t__10438 = this__10436.tree;
  while(true) {
    if(!(t__10438 == null)) {
      var c__10439 = this__10436.comp.call(null, k, t__10438.key);
      if(c__10439 === 0) {
        return t__10438
      }else {
        if(c__10439 < 0) {
          var G__10457 = t__10438.left;
          t__10438 = G__10457;
          continue
        }else {
          if("\ufdd0'else") {
            var G__10458 = t__10438.right;
            t__10438 = G__10458;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10440 = this;
  if(this__10440.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10440.tree, ascending_QMARK_, this__10440.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10441 = this;
  if(this__10441.cnt > 0) {
    var stack__10442 = null;
    var t__10443 = this__10441.tree;
    while(true) {
      if(!(t__10443 == null)) {
        var c__10444 = this__10441.comp.call(null, k, t__10443.key);
        if(c__10444 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__10442, t__10443), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__10444 < 0) {
              var G__10459 = cljs.core.conj.call(null, stack__10442, t__10443);
              var G__10460 = t__10443.left;
              stack__10442 = G__10459;
              t__10443 = G__10460;
              continue
            }else {
              var G__10461 = stack__10442;
              var G__10462 = t__10443.right;
              stack__10442 = G__10461;
              t__10443 = G__10462;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__10444 > 0) {
                var G__10463 = cljs.core.conj.call(null, stack__10442, t__10443);
                var G__10464 = t__10443.right;
                stack__10442 = G__10463;
                t__10443 = G__10464;
                continue
              }else {
                var G__10465 = stack__10442;
                var G__10466 = t__10443.left;
                stack__10442 = G__10465;
                t__10443 = G__10466;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__10442 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__10442, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10445 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10446 = this;
  return this__10446.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10447 = this;
  if(this__10447.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__10447.tree, true, this__10447.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10448 = this;
  return this__10448.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10449 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10450 = this;
  return new cljs.core.PersistentTreeMap(this__10450.comp, this__10450.tree, this__10450.cnt, meta, this__10450.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10451 = this;
  return this__10451.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10452 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__10452.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10453 = this;
  var found__10454 = [null];
  var t__10455 = cljs.core.tree_map_remove.call(null, this__10453.comp, this__10453.tree, k, found__10454);
  if(t__10455 == null) {
    if(cljs.core.nth.call(null, found__10454, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__10453.comp, null, 0, this__10453.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__10453.comp, t__10455.blacken(), this__10453.cnt - 1, this__10453.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__10469 = cljs.core.seq.call(null, keyvals);
    var out__10470 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__10469) {
        var G__10471 = cljs.core.nnext.call(null, in__10469);
        var G__10472 = cljs.core.assoc_BANG_.call(null, out__10470, cljs.core.first.call(null, in__10469), cljs.core.second.call(null, in__10469));
        in__10469 = G__10471;
        out__10470 = G__10472;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10470)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10473) {
    var keyvals = cljs.core.seq(arglist__10473);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10474) {
    var keyvals = cljs.core.seq(arglist__10474);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__10477 = cljs.core.seq.call(null, keyvals);
    var out__10478 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__10477) {
        var G__10479 = cljs.core.nnext.call(null, in__10477);
        var G__10480 = cljs.core.assoc.call(null, out__10478, cljs.core.first.call(null, in__10477), cljs.core.second.call(null, in__10477));
        in__10477 = G__10479;
        out__10478 = G__10480;
        continue
      }else {
        return out__10478
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10481) {
    var keyvals = cljs.core.seq(arglist__10481);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__10484 = cljs.core.seq.call(null, keyvals);
    var out__10485 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__10484) {
        var G__10486 = cljs.core.nnext.call(null, in__10484);
        var G__10487 = cljs.core.assoc.call(null, out__10485, cljs.core.first.call(null, in__10484), cljs.core.second.call(null, in__10484));
        in__10484 = G__10486;
        out__10485 = G__10487;
        continue
      }else {
        return out__10485
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10488) {
    var comparator = cljs.core.first(arglist__10488);
    var keyvals = cljs.core.rest(arglist__10488);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10489_SHARP_, p2__10490_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3943__auto____10492 = p1__10489_SHARP_;
          if(cljs.core.truth_(or__3943__auto____10492)) {
            return or__3943__auto____10492
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__10490_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10493) {
    var maps = cljs.core.seq(arglist__10493);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__10501 = function(m, e) {
        var k__10499 = cljs.core.first.call(null, e);
        var v__10500 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__10499)) {
          return cljs.core.assoc.call(null, m, k__10499, f.call(null, cljs.core._lookup.call(null, m, k__10499, null), v__10500))
        }else {
          return cljs.core.assoc.call(null, m, k__10499, v__10500)
        }
      };
      var merge2__10503 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__10501, function() {
          var or__3943__auto____10502 = m1;
          if(cljs.core.truth_(or__3943__auto____10502)) {
            return or__3943__auto____10502
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__10503, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10504) {
    var f = cljs.core.first(arglist__10504);
    var maps = cljs.core.rest(arglist__10504);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__10509 = cljs.core.ObjMap.EMPTY;
  var keys__10510 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__10510) {
      var key__10511 = cljs.core.first.call(null, keys__10510);
      var entry__10512 = cljs.core._lookup.call(null, map, key__10511, "\ufdd0'user/not-found");
      var G__10513 = cljs.core.not_EQ_.call(null, entry__10512, "\ufdd0'user/not-found") ? cljs.core.assoc.call(null, ret__10509, key__10511, entry__10512) : ret__10509;
      var G__10514 = cljs.core.next.call(null, keys__10510);
      ret__10509 = G__10513;
      keys__10510 = G__10514;
      continue
    }else {
      return ret__10509
    }
    break
  }
};
void 0;
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10518 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__10518.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10519 = this;
  var h__2213__auto____10520 = this__10519.__hash;
  if(!(h__2213__auto____10520 == null)) {
    return h__2213__auto____10520
  }else {
    var h__2213__auto____10521 = cljs.core.hash_iset.call(null, coll);
    this__10519.__hash = h__2213__auto____10521;
    return h__2213__auto____10521
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10522 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10523 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10523.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10544 = null;
  var G__10544__2 = function(this_sym10524, k) {
    var this__10526 = this;
    var this_sym10524__10527 = this;
    var coll__10528 = this_sym10524__10527;
    return coll__10528.cljs$core$ILookup$_lookup$arity$2(coll__10528, k)
  };
  var G__10544__3 = function(this_sym10525, k, not_found) {
    var this__10526 = this;
    var this_sym10525__10529 = this;
    var coll__10530 = this_sym10525__10529;
    return coll__10530.cljs$core$ILookup$_lookup$arity$3(coll__10530, k, not_found)
  };
  G__10544 = function(this_sym10525, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10544__2.call(this, this_sym10525, k);
      case 3:
        return G__10544__3.call(this, this_sym10525, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10544
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym10516, args10517) {
  var this__10531 = this;
  return this_sym10516.call.apply(this_sym10516, [this_sym10516].concat(args10517.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10532 = this;
  return new cljs.core.PersistentHashSet(this__10532.meta, cljs.core.assoc.call(null, this__10532.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__10533 = this;
  var this__10534 = this;
  return cljs.core.pr_str.call(null, this__10534)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10535 = this;
  return cljs.core.keys.call(null, this__10535.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10536 = this;
  return new cljs.core.PersistentHashSet(this__10536.meta, cljs.core.dissoc.call(null, this__10536.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10537 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10538 = this;
  var and__3941__auto____10539 = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto____10539) {
    var and__3941__auto____10540 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____10540) {
      return cljs.core.every_QMARK_.call(null, function(p1__10515_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10515_SHARP_)
      }, other)
    }else {
      return and__3941__auto____10540
    }
  }else {
    return and__3941__auto____10539
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10541 = this;
  return new cljs.core.PersistentHashSet(meta, this__10541.hash_map, this__10541.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10542 = this;
  return this__10542.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10543 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__10543.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10562 = null;
  var G__10562__2 = function(this_sym10548, k) {
    var this__10550 = this;
    var this_sym10548__10551 = this;
    var tcoll__10552 = this_sym10548__10551;
    if(cljs.core._lookup.call(null, this__10550.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10562__3 = function(this_sym10549, k, not_found) {
    var this__10550 = this;
    var this_sym10549__10553 = this;
    var tcoll__10554 = this_sym10549__10553;
    if(cljs.core._lookup.call(null, this__10550.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10562 = function(this_sym10549, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10562__2.call(this, this_sym10549, k);
      case 3:
        return G__10562__3.call(this, this_sym10549, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10562
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym10546, args10547) {
  var this__10555 = this;
  return this_sym10546.call.apply(this_sym10546, [this_sym10546].concat(args10547.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__10556 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__10557 = this;
  if(cljs.core._lookup.call(null, this__10557.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10558 = this;
  return cljs.core.count.call(null, this__10558.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__10559 = this;
  this__10559.transient_map = cljs.core.dissoc_BANG_.call(null, this__10559.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10560 = this;
  this__10560.transient_map = cljs.core.assoc_BANG_.call(null, this__10560.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10561 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__10561.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10565 = this;
  var h__2213__auto____10566 = this__10565.__hash;
  if(!(h__2213__auto____10566 == null)) {
    return h__2213__auto____10566
  }else {
    var h__2213__auto____10567 = cljs.core.hash_iset.call(null, coll);
    this__10565.__hash = h__2213__auto____10567;
    return h__2213__auto____10567
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__10568 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__10569 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__10569.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10595 = null;
  var G__10595__2 = function(this_sym10570, k) {
    var this__10572 = this;
    var this_sym10570__10573 = this;
    var coll__10574 = this_sym10570__10573;
    return coll__10574.cljs$core$ILookup$_lookup$arity$2(coll__10574, k)
  };
  var G__10595__3 = function(this_sym10571, k, not_found) {
    var this__10572 = this;
    var this_sym10571__10575 = this;
    var coll__10576 = this_sym10571__10575;
    return coll__10576.cljs$core$ILookup$_lookup$arity$3(coll__10576, k, not_found)
  };
  G__10595 = function(this_sym10571, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10595__2.call(this, this_sym10571, k);
      case 3:
        return G__10595__3.call(this, this_sym10571, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10595
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym10563, args10564) {
  var this__10577 = this;
  return this_sym10563.call.apply(this_sym10563, [this_sym10563].concat(args10564.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10578 = this;
  return new cljs.core.PersistentTreeSet(this__10578.meta, cljs.core.assoc.call(null, this__10578.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10579 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__10579.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__10580 = this;
  var this__10581 = this;
  return cljs.core.pr_str.call(null, this__10581)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__10582 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__10582.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__10583 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__10583.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__10584 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__10585 = this;
  return cljs.core._comparator.call(null, this__10585.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10586 = this;
  return cljs.core.keys.call(null, this__10586.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__10587 = this;
  return new cljs.core.PersistentTreeSet(this__10587.meta, cljs.core.dissoc.call(null, this__10587.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10588 = this;
  return cljs.core.count.call(null, this__10588.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10589 = this;
  var and__3941__auto____10590 = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto____10590) {
    var and__3941__auto____10591 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____10591) {
      return cljs.core.every_QMARK_.call(null, function(p1__10545_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10545_SHARP_)
      }, other)
    }else {
      return and__3941__auto____10591
    }
  }else {
    return and__3941__auto____10590
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10592 = this;
  return new cljs.core.PersistentTreeSet(meta, this__10592.tree_map, this__10592.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10593 = this;
  return this__10593.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10594 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__10594.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.set = function set(coll) {
  var in__10598 = cljs.core.seq.call(null, coll);
  var out__10599 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(cljs.core.seq.call(null, in__10598)) {
      var G__10600 = cljs.core.next.call(null, in__10598);
      var G__10601 = cljs.core.conj_BANG_.call(null, out__10599, cljs.core.first.call(null, in__10598));
      in__10598 = G__10600;
      out__10599 = G__10601;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10599)
    }
    break
  }
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10602) {
    var keys = cljs.core.seq(arglist__10602);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10604) {
    var comparator = cljs.core.first(arglist__10604);
    var keys = cljs.core.rest(arglist__10604);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__10610 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto____10611 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto____10611)) {
        var e__10612 = temp__4090__auto____10611;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__10612))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__10610, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__10603_SHARP_) {
      var temp__4090__auto____10613 = cljs.core.find.call(null, smap, p1__10603_SHARP_);
      if(cljs.core.truth_(temp__4090__auto____10613)) {
        var e__10614 = temp__4090__auto____10613;
        return cljs.core.second.call(null, e__10614)
      }else {
        return p1__10603_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__10644 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__10637, seen) {
        while(true) {
          var vec__10638__10639 = p__10637;
          var f__10640 = cljs.core.nth.call(null, vec__10638__10639, 0, null);
          var xs__10641 = vec__10638__10639;
          var temp__4092__auto____10642 = cljs.core.seq.call(null, xs__10641);
          if(temp__4092__auto____10642) {
            var s__10643 = temp__4092__auto____10642;
            if(cljs.core.contains_QMARK_.call(null, seen, f__10640)) {
              var G__10645 = cljs.core.rest.call(null, s__10643);
              var G__10646 = seen;
              p__10637 = G__10645;
              seen = G__10646;
              continue
            }else {
              return cljs.core.cons.call(null, f__10640, step.call(null, cljs.core.rest.call(null, s__10643), cljs.core.conj.call(null, seen, f__10640)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__10644.call(null, coll, cljs.core.set([]))
};
cljs.core.butlast = function butlast(s) {
  var ret__10649 = cljs.core.PersistentVector.EMPTY;
  var s__10650 = s;
  while(true) {
    if(cljs.core.next.call(null, s__10650)) {
      var G__10651 = cljs.core.conj.call(null, ret__10649, cljs.core.first.call(null, s__10650));
      var G__10652 = cljs.core.next.call(null, s__10650);
      ret__10649 = G__10651;
      s__10650 = G__10652;
      continue
    }else {
      return cljs.core.seq.call(null, ret__10649)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3943__auto____10655 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3943__auto____10655) {
        return or__3943__auto____10655
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__10656 = x.lastIndexOf("/");
      if(i__10656 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__10656 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3943__auto____10659 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3943__auto____10659) {
      return or__3943__auto____10659
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__10660 = x.lastIndexOf("/");
    if(i__10660 > -1) {
      return cljs.core.subs.call(null, x, 2, i__10660)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__10667 = cljs.core.ObjMap.EMPTY;
  var ks__10668 = cljs.core.seq.call(null, keys);
  var vs__10669 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3941__auto____10670 = ks__10668;
      if(and__3941__auto____10670) {
        return vs__10669
      }else {
        return and__3941__auto____10670
      }
    }()) {
      var G__10671 = cljs.core.assoc.call(null, map__10667, cljs.core.first.call(null, ks__10668), cljs.core.first.call(null, vs__10669));
      var G__10672 = cljs.core.next.call(null, ks__10668);
      var G__10673 = cljs.core.next.call(null, vs__10669);
      map__10667 = G__10671;
      ks__10668 = G__10672;
      vs__10669 = G__10673;
      continue
    }else {
      return map__10667
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__10676__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10661_SHARP_, p2__10662_SHARP_) {
        return max_key.call(null, k, p1__10661_SHARP_, p2__10662_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__10676 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10676__delegate.call(this, k, x, y, more)
    };
    G__10676.cljs$lang$maxFixedArity = 3;
    G__10676.cljs$lang$applyTo = function(arglist__10677) {
      var k = cljs.core.first(arglist__10677);
      var x = cljs.core.first(cljs.core.next(arglist__10677));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10677)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10677)));
      return G__10676__delegate(k, x, y, more)
    };
    G__10676.cljs$lang$arity$variadic = G__10676__delegate;
    return G__10676
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__10678__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10674_SHARP_, p2__10675_SHARP_) {
        return min_key.call(null, k, p1__10674_SHARP_, p2__10675_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__10678 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10678__delegate.call(this, k, x, y, more)
    };
    G__10678.cljs$lang$maxFixedArity = 3;
    G__10678.cljs$lang$applyTo = function(arglist__10679) {
      var k = cljs.core.first(arglist__10679);
      var x = cljs.core.first(cljs.core.next(arglist__10679));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10679)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10679)));
      return G__10678__delegate(k, x, y, more)
    };
    G__10678.cljs$lang$arity$variadic = G__10678__delegate;
    return G__10678
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____10682 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____10682) {
        var s__10683 = temp__4092__auto____10682;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__10683), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__10683)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____10686 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____10686) {
      var s__10687 = temp__4092__auto____10686;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__10687)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__10687), take_while.call(null, pred, cljs.core.rest.call(null, s__10687)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__10689 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__10689.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__10701 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.set([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__4092__auto____10702 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto____10702)) {
        var vec__10703__10704 = temp__4092__auto____10702;
        var e__10705 = cljs.core.nth.call(null, vec__10703__10704, 0, null);
        var s__10706 = vec__10703__10704;
        if(cljs.core.truth_(include__10701.call(null, e__10705))) {
          return s__10706
        }else {
          return cljs.core.next.call(null, s__10706)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10701, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto____10707 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto____10707)) {
      var vec__10708__10709 = temp__4092__auto____10707;
      var e__10710 = cljs.core.nth.call(null, vec__10708__10709, 0, null);
      var s__10711 = vec__10708__10709;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__10710)) ? s__10711 : cljs.core.next.call(null, s__10711))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__10723 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.set([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__4092__auto____10724 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto____10724)) {
        var vec__10725__10726 = temp__4092__auto____10724;
        var e__10727 = cljs.core.nth.call(null, vec__10725__10726, 0, null);
        var s__10728 = vec__10725__10726;
        if(cljs.core.truth_(include__10723.call(null, e__10727))) {
          return s__10728
        }else {
          return cljs.core.next.call(null, s__10728)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__10723, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto____10729 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto____10729)) {
      var vec__10730__10731 = temp__4092__auto____10729;
      var e__10732 = cljs.core.nth.call(null, vec__10730__10731, 0, null);
      var s__10733 = vec__10730__10731;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__10732)) ? s__10733 : cljs.core.next.call(null, s__10733))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__10734 = this;
  var h__2213__auto____10735 = this__10734.__hash;
  if(!(h__2213__auto____10735 == null)) {
    return h__2213__auto____10735
  }else {
    var h__2213__auto____10736 = cljs.core.hash_coll.call(null, rng);
    this__10734.__hash = h__2213__auto____10736;
    return h__2213__auto____10736
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__10737 = this;
  if(this__10737.step > 0) {
    if(this__10737.start + this__10737.step < this__10737.end) {
      return new cljs.core.Range(this__10737.meta, this__10737.start + this__10737.step, this__10737.end, this__10737.step, null)
    }else {
      return null
    }
  }else {
    if(this__10737.start + this__10737.step > this__10737.end) {
      return new cljs.core.Range(this__10737.meta, this__10737.start + this__10737.step, this__10737.end, this__10737.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__10738 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__10739 = this;
  var this__10740 = this;
  return cljs.core.pr_str.call(null, this__10740)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__10741 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__10742 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__10743 = this;
  if(this__10743.step > 0) {
    if(this__10743.start < this__10743.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__10743.start > this__10743.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__10744 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__10744.end - this__10744.start) / this__10744.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__10745 = this;
  return this__10745.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__10746 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__10746.meta, this__10746.start + this__10746.step, this__10746.end, this__10746.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__10747 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__10748 = this;
  return new cljs.core.Range(meta, this__10748.start, this__10748.end, this__10748.step, this__10748.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__10749 = this;
  return this__10749.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__10750 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10750.start + n * this__10750.step
  }else {
    if(function() {
      var and__3941__auto____10751 = this__10750.start > this__10750.end;
      if(and__3941__auto____10751) {
        return this__10750.step === 0
      }else {
        return and__3941__auto____10751
      }
    }()) {
      return this__10750.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__10752 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__10752.start + n * this__10752.step
  }else {
    if(function() {
      var and__3941__auto____10753 = this__10752.start > this__10752.end;
      if(and__3941__auto____10753) {
        return this__10752.step === 0
      }else {
        return and__3941__auto____10753
      }
    }()) {
      return this__10752.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__10754 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10754.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____10757 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____10757) {
      var s__10758 = temp__4092__auto____10757;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__10758), take_nth.call(null, n, cljs.core.drop.call(null, n, s__10758)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto____10765 = cljs.core.seq.call(null, coll);
    if(temp__4092__auto____10765) {
      var s__10766 = temp__4092__auto____10765;
      var fst__10767 = cljs.core.first.call(null, s__10766);
      var fv__10768 = f.call(null, fst__10767);
      var run__10769 = cljs.core.cons.call(null, fst__10767, cljs.core.take_while.call(null, function(p1__10759_SHARP_) {
        return cljs.core._EQ_.call(null, fv__10768, f.call(null, p1__10759_SHARP_))
      }, cljs.core.next.call(null, s__10766)));
      return cljs.core.cons.call(null, run__10769, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__10769), s__10766))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto____10784 = cljs.core.seq.call(null, coll);
      if(temp__4090__auto____10784) {
        var s__10785 = temp__4090__auto____10784;
        return reductions.call(null, f, cljs.core.first.call(null, s__10785), cljs.core.rest.call(null, s__10785))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto____10786 = cljs.core.seq.call(null, coll);
      if(temp__4092__auto____10786) {
        var s__10787 = temp__4092__auto____10786;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__10787)), cljs.core.rest.call(null, s__10787))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10790 = null;
      var G__10790__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__10790__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__10790__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__10790__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__10790__4 = function() {
        var G__10791__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__10791 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10791__delegate.call(this, x, y, z, args)
        };
        G__10791.cljs$lang$maxFixedArity = 3;
        G__10791.cljs$lang$applyTo = function(arglist__10792) {
          var x = cljs.core.first(arglist__10792);
          var y = cljs.core.first(cljs.core.next(arglist__10792));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10792)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10792)));
          return G__10791__delegate(x, y, z, args)
        };
        G__10791.cljs$lang$arity$variadic = G__10791__delegate;
        return G__10791
      }();
      G__10790 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10790__0.call(this);
          case 1:
            return G__10790__1.call(this, x);
          case 2:
            return G__10790__2.call(this, x, y);
          case 3:
            return G__10790__3.call(this, x, y, z);
          default:
            return G__10790__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10790.cljs$lang$maxFixedArity = 3;
      G__10790.cljs$lang$applyTo = G__10790__4.cljs$lang$applyTo;
      return G__10790
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10793 = null;
      var G__10793__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__10793__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__10793__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__10793__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__10793__4 = function() {
        var G__10794__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10794 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10794__delegate.call(this, x, y, z, args)
        };
        G__10794.cljs$lang$maxFixedArity = 3;
        G__10794.cljs$lang$applyTo = function(arglist__10795) {
          var x = cljs.core.first(arglist__10795);
          var y = cljs.core.first(cljs.core.next(arglist__10795));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10795)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10795)));
          return G__10794__delegate(x, y, z, args)
        };
        G__10794.cljs$lang$arity$variadic = G__10794__delegate;
        return G__10794
      }();
      G__10793 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10793__0.call(this);
          case 1:
            return G__10793__1.call(this, x);
          case 2:
            return G__10793__2.call(this, x, y);
          case 3:
            return G__10793__3.call(this, x, y, z);
          default:
            return G__10793__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10793.cljs$lang$maxFixedArity = 3;
      G__10793.cljs$lang$applyTo = G__10793__4.cljs$lang$applyTo;
      return G__10793
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10796 = null;
      var G__10796__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__10796__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__10796__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__10796__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__10796__4 = function() {
        var G__10797__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__10797 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10797__delegate.call(this, x, y, z, args)
        };
        G__10797.cljs$lang$maxFixedArity = 3;
        G__10797.cljs$lang$applyTo = function(arglist__10798) {
          var x = cljs.core.first(arglist__10798);
          var y = cljs.core.first(cljs.core.next(arglist__10798));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10798)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10798)));
          return G__10797__delegate(x, y, z, args)
        };
        G__10797.cljs$lang$arity$variadic = G__10797__delegate;
        return G__10797
      }();
      G__10796 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10796__0.call(this);
          case 1:
            return G__10796__1.call(this, x);
          case 2:
            return G__10796__2.call(this, x, y);
          case 3:
            return G__10796__3.call(this, x, y, z);
          default:
            return G__10796__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__10796.cljs$lang$maxFixedArity = 3;
      G__10796.cljs$lang$applyTo = G__10796__4.cljs$lang$applyTo;
      return G__10796
    }()
  };
  var juxt__4 = function() {
    var G__10799__delegate = function(f, g, h, fs) {
      var fs__10789 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10800 = null;
        var G__10800__0 = function() {
          return cljs.core.reduce.call(null, function(p1__10770_SHARP_, p2__10771_SHARP_) {
            return cljs.core.conj.call(null, p1__10770_SHARP_, p2__10771_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__10789)
        };
        var G__10800__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__10772_SHARP_, p2__10773_SHARP_) {
            return cljs.core.conj.call(null, p1__10772_SHARP_, p2__10773_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__10789)
        };
        var G__10800__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__10774_SHARP_, p2__10775_SHARP_) {
            return cljs.core.conj.call(null, p1__10774_SHARP_, p2__10775_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__10789)
        };
        var G__10800__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__10776_SHARP_, p2__10777_SHARP_) {
            return cljs.core.conj.call(null, p1__10776_SHARP_, p2__10777_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__10789)
        };
        var G__10800__4 = function() {
          var G__10801__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__10778_SHARP_, p2__10779_SHARP_) {
              return cljs.core.conj.call(null, p1__10778_SHARP_, cljs.core.apply.call(null, p2__10779_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__10789)
          };
          var G__10801 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10801__delegate.call(this, x, y, z, args)
          };
          G__10801.cljs$lang$maxFixedArity = 3;
          G__10801.cljs$lang$applyTo = function(arglist__10802) {
            var x = cljs.core.first(arglist__10802);
            var y = cljs.core.first(cljs.core.next(arglist__10802));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10802)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10802)));
            return G__10801__delegate(x, y, z, args)
          };
          G__10801.cljs$lang$arity$variadic = G__10801__delegate;
          return G__10801
        }();
        G__10800 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10800__0.call(this);
            case 1:
              return G__10800__1.call(this, x);
            case 2:
              return G__10800__2.call(this, x, y);
            case 3:
              return G__10800__3.call(this, x, y, z);
            default:
              return G__10800__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__10800.cljs$lang$maxFixedArity = 3;
        G__10800.cljs$lang$applyTo = G__10800__4.cljs$lang$applyTo;
        return G__10800
      }()
    };
    var G__10799 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10799__delegate.call(this, f, g, h, fs)
    };
    G__10799.cljs$lang$maxFixedArity = 3;
    G__10799.cljs$lang$applyTo = function(arglist__10803) {
      var f = cljs.core.first(arglist__10803);
      var g = cljs.core.first(cljs.core.next(arglist__10803));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10803)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10803)));
      return G__10799__delegate(f, g, h, fs)
    };
    G__10799.cljs$lang$arity$variadic = G__10799__delegate;
    return G__10799
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__10806 = cljs.core.next.call(null, coll);
        coll = G__10806;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto____10805 = cljs.core.seq.call(null, coll);
        if(and__3941__auto____10805) {
          return n > 0
        }else {
          return and__3941__auto____10805
        }
      }())) {
        var G__10807 = n - 1;
        var G__10808 = cljs.core.next.call(null, coll);
        n = G__10807;
        coll = G__10808;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__10810 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__10810), s)) {
    if(cljs.core.count.call(null, matches__10810) === 1) {
      return cljs.core.first.call(null, matches__10810)
    }else {
      return cljs.core.vec.call(null, matches__10810)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__10812 = re.exec(s);
  if(matches__10812 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__10812) === 1) {
      return cljs.core.first.call(null, matches__10812)
    }else {
      return cljs.core.vec.call(null, matches__10812)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__10817 = cljs.core.re_find.call(null, re, s);
  var match_idx__10818 = s.search(re);
  var match_str__10819 = cljs.core.coll_QMARK_.call(null, match_data__10817) ? cljs.core.first.call(null, match_data__10817) : match_data__10817;
  var post_match__10820 = cljs.core.subs.call(null, s, match_idx__10818 + cljs.core.count.call(null, match_str__10819));
  if(cljs.core.truth_(match_data__10817)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__10817, re_seq.call(null, re, post_match__10820))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10827__10828 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___10829 = cljs.core.nth.call(null, vec__10827__10828, 0, null);
  var flags__10830 = cljs.core.nth.call(null, vec__10827__10828, 1, null);
  var pattern__10831 = cljs.core.nth.call(null, vec__10827__10828, 2, null);
  return new RegExp(pattern__10831, flags__10830)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__10821_SHARP_) {
    return print_one.call(null, p1__10821_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3941__auto____10841 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3941__auto____10841)) {
            var and__3941__auto____10845 = function() {
              var G__10842__10843 = obj;
              if(G__10842__10843) {
                if(function() {
                  var or__3943__auto____10844 = G__10842__10843.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3943__auto____10844) {
                    return or__3943__auto____10844
                  }else {
                    return G__10842__10843.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__10842__10843.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10842__10843)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10842__10843)
              }
            }();
            if(cljs.core.truth_(and__3941__auto____10845)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3941__auto____10845
            }
          }else {
            return and__3941__auto____10841
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3941__auto____10846 = !(obj == null);
          if(and__3941__auto____10846) {
            return obj.cljs$lang$type
          }else {
            return and__3941__auto____10846
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__10847__10848 = obj;
          if(G__10847__10848) {
            if(function() {
              var or__3943__auto____10849 = G__10847__10848.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3943__auto____10849) {
                return or__3943__auto____10849
              }else {
                return G__10847__10848.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__10847__10848.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10847__10848)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__10847__10848)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var first_obj__10864 = cljs.core.first.call(null, objs);
  var sb__10865 = new goog.string.StringBuffer;
  var G__10866__10867 = cljs.core.seq.call(null, objs);
  if(G__10866__10867) {
    var obj__10868 = cljs.core.first.call(null, G__10866__10867);
    var G__10866__10869 = G__10866__10867;
    while(true) {
      if(obj__10868 === first_obj__10864) {
      }else {
        sb__10865.append(" ")
      }
      var G__10870__10871 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10868, opts));
      if(G__10870__10871) {
        var string__10872 = cljs.core.first.call(null, G__10870__10871);
        var G__10870__10873 = G__10870__10871;
        while(true) {
          sb__10865.append(string__10872);
          var temp__4092__auto____10874 = cljs.core.next.call(null, G__10870__10873);
          if(temp__4092__auto____10874) {
            var G__10870__10875 = temp__4092__auto____10874;
            var G__10878 = cljs.core.first.call(null, G__10870__10875);
            var G__10879 = G__10870__10875;
            string__10872 = G__10878;
            G__10870__10873 = G__10879;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__4092__auto____10876 = cljs.core.next.call(null, G__10866__10869);
      if(temp__4092__auto____10876) {
        var G__10866__10877 = temp__4092__auto____10876;
        var G__10880 = cljs.core.first.call(null, G__10866__10877);
        var G__10881 = G__10866__10877;
        obj__10868 = G__10880;
        G__10866__10869 = G__10881;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__10865
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__10883 = cljs.core.pr_sb.call(null, objs, opts);
  sb__10883.append("\n");
  return[cljs.core.str(sb__10883)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var first_obj__10897 = cljs.core.first.call(null, objs);
  var G__10898__10899 = cljs.core.seq.call(null, objs);
  if(G__10898__10899) {
    var obj__10900 = cljs.core.first.call(null, G__10898__10899);
    var G__10898__10901 = G__10898__10899;
    while(true) {
      if(obj__10900 === first_obj__10897) {
      }else {
        cljs.core.string_print.call(null, " ")
      }
      var G__10902__10903 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__10900, opts));
      if(G__10902__10903) {
        var string__10904 = cljs.core.first.call(null, G__10902__10903);
        var G__10902__10905 = G__10902__10903;
        while(true) {
          cljs.core.string_print.call(null, string__10904);
          var temp__4092__auto____10906 = cljs.core.next.call(null, G__10902__10905);
          if(temp__4092__auto____10906) {
            var G__10902__10907 = temp__4092__auto____10906;
            var G__10910 = cljs.core.first.call(null, G__10902__10907);
            var G__10911 = G__10902__10907;
            string__10904 = G__10910;
            G__10902__10905 = G__10911;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__4092__auto____10908 = cljs.core.next.call(null, G__10898__10901);
      if(temp__4092__auto____10908) {
        var G__10898__10909 = temp__4092__auto____10908;
        var G__10912 = cljs.core.first.call(null, G__10898__10909);
        var G__10913 = G__10898__10909;
        obj__10900 = G__10912;
        G__10898__10901 = G__10913;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10914) {
    var objs = cljs.core.seq(arglist__10914);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10915) {
    var objs = cljs.core.seq(arglist__10915);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10916) {
    var objs = cljs.core.seq(arglist__10916);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10917) {
    var objs = cljs.core.seq(arglist__10917);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10918) {
    var objs = cljs.core.seq(arglist__10918);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10919) {
    var objs = cljs.core.seq(arglist__10919);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10920) {
    var objs = cljs.core.seq(arglist__10920);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10921) {
    var objs = cljs.core.seq(arglist__10921);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10922 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10922, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10923 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10923, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10924 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10924, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__4092__auto____10925 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__4092__auto____10925)) {
        var nspc__10926 = temp__4092__auto____10925;
        return[cljs.core.str(nspc__10926), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__4092__auto____10927 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__4092__auto____10927)) {
          var nspc__10928 = temp__4092__auto____10927;
          return[cljs.core.str(nspc__10928), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10929 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10929, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__10931 = function(n, len) {
    var ns__10930 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__10930) < len) {
        var G__10933 = [cljs.core.str("0"), cljs.core.str(ns__10930)].join("");
        ns__10930 = G__10933;
        continue
      }else {
        return ns__10930
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__10931.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__10931.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__10931.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10931.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__10931.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__10931.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__10932 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__10932, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__10934 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__10935 = this;
  var G__10936__10937 = cljs.core.seq.call(null, this__10935.watches);
  if(G__10936__10937) {
    var G__10939__10941 = cljs.core.first.call(null, G__10936__10937);
    var vec__10940__10942 = G__10939__10941;
    var key__10943 = cljs.core.nth.call(null, vec__10940__10942, 0, null);
    var f__10944 = cljs.core.nth.call(null, vec__10940__10942, 1, null);
    var G__10936__10945 = G__10936__10937;
    var G__10939__10946 = G__10939__10941;
    var G__10936__10947 = G__10936__10945;
    while(true) {
      var vec__10948__10949 = G__10939__10946;
      var key__10950 = cljs.core.nth.call(null, vec__10948__10949, 0, null);
      var f__10951 = cljs.core.nth.call(null, vec__10948__10949, 1, null);
      var G__10936__10952 = G__10936__10947;
      f__10951.call(null, key__10950, this$, oldval, newval);
      var temp__4092__auto____10953 = cljs.core.next.call(null, G__10936__10952);
      if(temp__4092__auto____10953) {
        var G__10936__10954 = temp__4092__auto____10953;
        var G__10961 = cljs.core.first.call(null, G__10936__10954);
        var G__10962 = G__10936__10954;
        G__10939__10946 = G__10961;
        G__10936__10947 = G__10962;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__10955 = this;
  return this$.watches = cljs.core.assoc.call(null, this__10955.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__10956 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__10956.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__10957 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__10957.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__10958 = this;
  return this__10958.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10959 = this;
  return this__10959.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__10960 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__10974__delegate = function(x, p__10963) {
      var map__10969__10970 = p__10963;
      var map__10969__10971 = cljs.core.seq_QMARK_.call(null, map__10969__10970) ? clojure.lang.PersistentHashMap.create.call(null, cljs.core.seq.call(null, map__10969__10970)) : map__10969__10970;
      var validator__10972 = cljs.core._lookup.call(null, map__10969__10971, "\ufdd0'validator", null);
      var meta__10973 = cljs.core._lookup.call(null, map__10969__10971, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__10973, validator__10972, null)
    };
    var G__10974 = function(x, var_args) {
      var p__10963 = null;
      if(goog.isDef(var_args)) {
        p__10963 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10974__delegate.call(this, x, p__10963)
    };
    G__10974.cljs$lang$maxFixedArity = 1;
    G__10974.cljs$lang$applyTo = function(arglist__10975) {
      var x = cljs.core.first(arglist__10975);
      var p__10963 = cljs.core.rest(arglist__10975);
      return G__10974__delegate(x, p__10963)
    };
    G__10974.cljs$lang$arity$variadic = G__10974__delegate;
    return G__10974
  }();
  atom = function(x, var_args) {
    var p__10963 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto____10979 = a.validator;
  if(cljs.core.truth_(temp__4092__auto____10979)) {
    var validate__10980 = temp__4092__auto____10979;
    if(cljs.core.truth_(validate__10980.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6394, "\ufdd0'column", 13))))].join(""));
    }
  }else {
  }
  var old_value__10981 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__10981, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__10982__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__10982 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__10982__delegate.call(this, a, f, x, y, z, more)
    };
    G__10982.cljs$lang$maxFixedArity = 5;
    G__10982.cljs$lang$applyTo = function(arglist__10983) {
      var a = cljs.core.first(arglist__10983);
      var f = cljs.core.first(cljs.core.next(arglist__10983));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10983)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10983))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10983)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10983)))));
      return G__10982__delegate(a, f, x, y, z, more)
    };
    G__10982.cljs$lang$arity$variadic = G__10982__delegate;
    return G__10982
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10984) {
    var iref = cljs.core.first(arglist__10984);
    var f = cljs.core.first(cljs.core.next(arglist__10984));
    var args = cljs.core.rest(cljs.core.next(arglist__10984));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__10985 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__10985.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__10986 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__10986.state, function(p__10987) {
    var map__10988__10989 = p__10987;
    var map__10988__10990 = cljs.core.seq_QMARK_.call(null, map__10988__10989) ? clojure.lang.PersistentHashMap.create.call(null, cljs.core.seq.call(null, map__10988__10989)) : map__10988__10989;
    var curr_state__10991 = map__10988__10990;
    var done__10992 = cljs.core._lookup.call(null, map__10988__10990, "\ufdd0'done", null);
    if(cljs.core.truth_(done__10992)) {
      return curr_state__10991
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__10986.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__11021__11022 = options;
    var map__11021__11023 = cljs.core.seq_QMARK_.call(null, map__11021__11022) ? clojure.lang.PersistentHashMap.create.call(null, cljs.core.seq.call(null, map__11021__11022)) : map__11021__11022;
    var keywordize_keys__11024 = cljs.core._lookup.call(null, map__11021__11023, "\ufdd0'keywordize-keys", null);
    var keyfn__11025 = cljs.core.truth_(keywordize_keys__11024) ? cljs.core.keyword : cljs.core.str;
    var f__11048 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2487__auto____11047 = function iter__11037(s__11038) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__11038__11043 = s__11038;
                    while(true) {
                      var temp__4092__auto____11044 = cljs.core.seq.call(null, s__11038__11043);
                      if(temp__4092__auto____11044) {
                        var xs__4579__auto____11045 = temp__4092__auto____11044;
                        var k__11046 = cljs.core.first.call(null, xs__4579__auto____11045);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__11025.call(null, k__11046), thisfn.call(null, x[k__11046])], true), iter__11037.call(null, cljs.core.rest.call(null, s__11038__11043)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2487__auto____11047.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__11048.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__11049) {
    var x = cljs.core.first(arglist__11049);
    var options = cljs.core.rest(arglist__11049);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__11054 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__11058__delegate = function(args) {
      var temp__4090__auto____11055 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__11054), args, null);
      if(cljs.core.truth_(temp__4090__auto____11055)) {
        var v__11056 = temp__4090__auto____11055;
        return v__11056
      }else {
        var ret__11057 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__11054, cljs.core.assoc, args, ret__11057);
        return ret__11057
      }
    };
    var G__11058 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11058__delegate.call(this, args)
    };
    G__11058.cljs$lang$maxFixedArity = 0;
    G__11058.cljs$lang$applyTo = function(arglist__11059) {
      var args = cljs.core.seq(arglist__11059);
      return G__11058__delegate(args)
    };
    G__11058.cljs$lang$arity$variadic = G__11058__delegate;
    return G__11058
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__11061 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__11061)) {
        var G__11062 = ret__11061;
        f = G__11062;
        continue
      }else {
        return ret__11061
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__11063__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__11063 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__11063__delegate.call(this, f, args)
    };
    G__11063.cljs$lang$maxFixedArity = 1;
    G__11063.cljs$lang$applyTo = function(arglist__11064) {
      var f = cljs.core.first(arglist__11064);
      var args = cljs.core.rest(arglist__11064);
      return G__11063__delegate(f, args)
    };
    G__11063.cljs$lang$arity$variadic = G__11063__delegate;
    return G__11063
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__11066 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__11066, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__11066, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3943__auto____11075 = cljs.core._EQ_.call(null, child, parent);
    if(or__3943__auto____11075) {
      return or__3943__auto____11075
    }else {
      var or__3943__auto____11076 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3943__auto____11076) {
        return or__3943__auto____11076
      }else {
        var and__3941__auto____11077 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3941__auto____11077) {
          var and__3941__auto____11078 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3941__auto____11078) {
            var and__3941__auto____11079 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3941__auto____11079) {
              var ret__11080 = true;
              var i__11081 = 0;
              while(true) {
                if(function() {
                  var or__3943__auto____11082 = cljs.core.not.call(null, ret__11080);
                  if(or__3943__auto____11082) {
                    return or__3943__auto____11082
                  }else {
                    return i__11081 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__11080
                }else {
                  var G__11083 = isa_QMARK_.call(null, h, child.call(null, i__11081), parent.call(null, i__11081));
                  var G__11084 = i__11081 + 1;
                  ret__11080 = G__11083;
                  i__11081 = G__11084;
                  continue
                }
                break
              }
            }else {
              return and__3941__auto____11079
            }
          }else {
            return and__3941__auto____11078
          }
        }else {
          return and__3941__auto____11077
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6678, "\ufdd0'column", 12))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6682, "\ufdd0'column", 12))))].join(""));
    }
    var tp__11093 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__11094 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__11095 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__11096 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.set([])), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3943__auto____11097 = cljs.core.contains_QMARK_.call(null, tp__11093.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__11095.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__11095.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__11093, tag, cljs.core.set([])), parent)), "\ufdd0'ancestors":tf__11096.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__11094, parent, ta__11095), "\ufdd0'descendants":tf__11096.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, 
      h), parent, ta__11095, tag, td__11094)})
    }();
    if(cljs.core.truth_(or__3943__auto____11097)) {
      return or__3943__auto____11097
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__11102 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__11103 = cljs.core.truth_(parentMap__11102.call(null, tag)) ? cljs.core.disj.call(null, parentMap__11102.call(null, tag), parent) : cljs.core.set([]);
    var newParents__11104 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__11103)) ? cljs.core.assoc.call(null, parentMap__11102, tag, childsParents__11103) : cljs.core.dissoc.call(null, parentMap__11102, tag);
    var deriv_seq__11105 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__11085_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11085_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11085_SHARP_), cljs.core.second.call(null, p1__11085_SHARP_)))
    }, cljs.core.seq.call(null, newParents__11104)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__11102.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__11086_SHARP_, p2__11087_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__11086_SHARP_, p2__11087_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__11105))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__11113 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3943__auto____11115 = cljs.core.truth_(function() {
    var and__3941__auto____11114 = xprefs__11113;
    if(cljs.core.truth_(and__3941__auto____11114)) {
      return xprefs__11113.call(null, y)
    }else {
      return and__3941__auto____11114
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3943__auto____11115)) {
    return or__3943__auto____11115
  }else {
    var or__3943__auto____11117 = function() {
      var ps__11116 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__11116) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__11116), prefer_table))) {
          }else {
          }
          var G__11120 = cljs.core.rest.call(null, ps__11116);
          ps__11116 = G__11120;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3943__auto____11117)) {
      return or__3943__auto____11117
    }else {
      var or__3943__auto____11119 = function() {
        var ps__11118 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__11118) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__11118), y, prefer_table))) {
            }else {
            }
            var G__11121 = cljs.core.rest.call(null, ps__11118);
            ps__11118 = G__11121;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3943__auto____11119)) {
        return or__3943__auto____11119
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3943__auto____11123 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3943__auto____11123)) {
    return or__3943__auto____11123
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__11141 = cljs.core.reduce.call(null, function(be, p__11133) {
    var vec__11134__11135 = p__11133;
    var k__11136 = cljs.core.nth.call(null, vec__11134__11135, 0, null);
    var ___11137 = cljs.core.nth.call(null, vec__11134__11135, 1, null);
    var e__11138 = vec__11134__11135;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__11136)) {
      var be2__11140 = cljs.core.truth_(function() {
        var or__3943__auto____11139 = be == null;
        if(or__3943__auto____11139) {
          return or__3943__auto____11139
        }else {
          return cljs.core.dominates.call(null, k__11136, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__11138 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__11140), k__11136, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__11136), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__11140)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__11140
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__11141)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__11141));
      return cljs.core.second.call(null, best_entry__11141)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
void 0;
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3941__auto____11145 = mf;
    if(and__3941__auto____11145) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3941__auto____11145
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    return function() {
      var or__3943__auto____11146 = cljs.core._reset[goog.typeOf(mf)];
      if(or__3943__auto____11146) {
        return or__3943__auto____11146
      }else {
        var or__3943__auto____11147 = cljs.core._reset["_"];
        if(or__3943__auto____11147) {
          return or__3943__auto____11147
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3941__auto____11151 = mf;
    if(and__3941__auto____11151) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3941__auto____11151
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    return function() {
      var or__3943__auto____11152 = cljs.core._add_method[goog.typeOf(mf)];
      if(or__3943__auto____11152) {
        return or__3943__auto____11152
      }else {
        var or__3943__auto____11153 = cljs.core._add_method["_"];
        if(or__3943__auto____11153) {
          return or__3943__auto____11153
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto____11157 = mf;
    if(and__3941__auto____11157) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3941__auto____11157
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    return function() {
      var or__3943__auto____11158 = cljs.core._remove_method[goog.typeOf(mf)];
      if(or__3943__auto____11158) {
        return or__3943__auto____11158
      }else {
        var or__3943__auto____11159 = cljs.core._remove_method["_"];
        if(or__3943__auto____11159) {
          return or__3943__auto____11159
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3941__auto____11163 = mf;
    if(and__3941__auto____11163) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3941__auto____11163
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    return function() {
      var or__3943__auto____11164 = cljs.core._prefer_method[goog.typeOf(mf)];
      if(or__3943__auto____11164) {
        return or__3943__auto____11164
      }else {
        var or__3943__auto____11165 = cljs.core._prefer_method["_"];
        if(or__3943__auto____11165) {
          return or__3943__auto____11165
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto____11169 = mf;
    if(and__3941__auto____11169) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3941__auto____11169
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    return function() {
      var or__3943__auto____11170 = cljs.core._get_method[goog.typeOf(mf)];
      if(or__3943__auto____11170) {
        return or__3943__auto____11170
      }else {
        var or__3943__auto____11171 = cljs.core._get_method["_"];
        if(or__3943__auto____11171) {
          return or__3943__auto____11171
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3941__auto____11175 = mf;
    if(and__3941__auto____11175) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3941__auto____11175
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    return function() {
      var or__3943__auto____11176 = cljs.core._methods[goog.typeOf(mf)];
      if(or__3943__auto____11176) {
        return or__3943__auto____11176
      }else {
        var or__3943__auto____11177 = cljs.core._methods["_"];
        if(or__3943__auto____11177) {
          return or__3943__auto____11177
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3941__auto____11181 = mf;
    if(and__3941__auto____11181) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3941__auto____11181
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    return function() {
      var or__3943__auto____11182 = cljs.core._prefers[goog.typeOf(mf)];
      if(or__3943__auto____11182) {
        return or__3943__auto____11182
      }else {
        var or__3943__auto____11183 = cljs.core._prefers["_"];
        if(or__3943__auto____11183) {
          return or__3943__auto____11183
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3941__auto____11187 = mf;
    if(and__3941__auto____11187) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3941__auto____11187
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    return function() {
      var or__3943__auto____11188 = cljs.core._dispatch[goog.typeOf(mf)];
      if(or__3943__auto____11188) {
        return or__3943__auto____11188
      }else {
        var or__3943__auto____11189 = cljs.core._dispatch["_"];
        if(or__3943__auto____11189) {
          return or__3943__auto____11189
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
void 0;
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__11192 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__11193 = cljs.core._get_method.call(null, mf, dispatch_val__11192);
  if(cljs.core.truth_(target_fn__11193)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__11192)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__11193, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11194 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__11195 = this;
  cljs.core.swap_BANG_.call(null, this__11195.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11195.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11195.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__11195.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__11196 = this;
  cljs.core.swap_BANG_.call(null, this__11196.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__11196.method_cache, this__11196.method_table, this__11196.cached_hierarchy, this__11196.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__11197 = this;
  cljs.core.swap_BANG_.call(null, this__11197.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__11197.method_cache, this__11197.method_table, this__11197.cached_hierarchy, this__11197.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__11198 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__11198.cached_hierarchy), cljs.core.deref.call(null, this__11198.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__11198.method_cache, this__11198.method_table, this__11198.cached_hierarchy, this__11198.hierarchy)
  }
  var temp__4090__auto____11199 = cljs.core.deref.call(null, this__11198.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto____11199)) {
    var target_fn__11200 = temp__4090__auto____11199;
    return target_fn__11200
  }else {
    var temp__4090__auto____11201 = cljs.core.find_and_cache_best_method.call(null, this__11198.name, dispatch_val, this__11198.hierarchy, this__11198.method_table, this__11198.prefer_table, this__11198.method_cache, this__11198.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____11201)) {
      var target_fn__11202 = temp__4090__auto____11201;
      return target_fn__11202
    }else {
      return cljs.core.deref.call(null, this__11198.method_table).call(null, this__11198.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__11203 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__11203.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__11203.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__11203.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.set([])), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__11203.method_cache, this__11203.method_table, this__11203.cached_hierarchy, this__11203.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__11204 = this;
  return cljs.core.deref.call(null, this__11204.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__11205 = this;
  return cljs.core.deref.call(null, this__11205.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__11206 = this;
  return cljs.core.do_dispatch.call(null, mf, this__11206.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__11208__delegate = function(_, args) {
    var self__11207 = this;
    return cljs.core._dispatch.call(null, self__11207, args)
  };
  var G__11208 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__11208__delegate.call(this, _, args)
  };
  G__11208.cljs$lang$maxFixedArity = 1;
  G__11208.cljs$lang$applyTo = function(arglist__11209) {
    var _ = cljs.core.first(arglist__11209);
    var args = cljs.core.rest(arglist__11209);
    return G__11208__delegate(_, args)
  };
  G__11208.cljs$lang$arity$variadic = G__11208__delegate;
  return G__11208
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__11210 = this;
  return cljs.core._dispatch.call(null, self__11210, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11211 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_11213, _) {
  var this__11212 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__11212.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__11214 = this;
  return this__11214.uuid === other.uuid
};
cljs.core.UUID.prototype.toString = function() {
  var this__11215 = this;
  var this__11216 = this;
  return cljs.core.pr_str.call(null, this__11216)
};
cljs.core.UUID;
goog.provide("c2.maths");
goog.require("cljs.core");
c2.maths.Pi = Math.PI;
c2.maths.Tau = 2 * c2.maths.Pi;
c2.maths.e = Math.E;
c2.maths.radians_per_degree = c2.maths.Pi / 180;
c2.maths.rad = function rad(x) {
  return c2.maths.radians_per_degree * x
};
c2.maths.deg = function deg(x) {
  return x / c2.maths.radians_per_degree
};
c2.maths.sin = function sin(x) {
  return Math.sin.call(null, x)
};
c2.maths.asin = function asin(x) {
  return Math.asin.call(null, x)
};
c2.maths.cos = function cos(x) {
  return Math.cos.call(null, x)
};
c2.maths.acos = function acos(x) {
  return Math.acos.call(null, x)
};
c2.maths.tan = function tan(x) {
  return Math.tan.call(null, x)
};
c2.maths.atan = function atan(x) {
  return Math.atan.call(null, x)
};
c2.maths.expt = function() {
  var expt = null;
  var expt__1 = function(x) {
    return Math.exp.call(null, x)
  };
  var expt__2 = function(x, y) {
    return Math.pow.call(null, x, y)
  };
  expt = function(x, y) {
    switch(arguments.length) {
      case 1:
        return expt__1.call(this, x);
      case 2:
        return expt__2.call(this, x, y)
    }
    throw"Invalid arity: " + arguments.length;
  };
  expt.cljs$lang$arity$1 = expt__1;
  expt.cljs$lang$arity$2 = expt__2;
  return expt
}();
c2.maths.sq = function sq(x) {
  return c2.maths.expt.call(null, x, 2)
};
c2.maths.sqrt = function sqrt(x) {
  return Math.sqrt.call(null, x)
};
c2.maths.floor = function floor(x) {
  return Math.floor.call(null, x)
};
c2.maths.ceil = function ceil(x) {
  return Math.ceil.call(null, x)
};
c2.maths.abs = function abs(x) {
  return Math.abs.call(null, x)
};
c2.maths.log = function() {
  var log = null;
  var log__1 = function(x) {
    return Math.log.call(null, x)
  };
  var log__2 = function(base, x) {
    return Math.log.call(null, x) / Math.log.call(null, base)
  };
  log = function(base, x) {
    switch(arguments.length) {
      case 1:
        return log__1.call(this, base);
      case 2:
        return log__2.call(this, base, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  log.cljs$lang$arity$1 = log__1;
  log.cljs$lang$arity$2 = log__2;
  return log
}();
c2.maths.log10 = function log10(x) {
  return Math.log(x) / Math.LN10
};
c2.maths.extent = function extent(xs) {
  return cljs.core.PersistentVector.fromArray([cljs.core.apply.call(null, cljs.core.min, xs), cljs.core.apply.call(null, cljs.core.max, xs)], true)
};
c2.maths.mean = function mean(xs) {
  return cljs.core.reduce.call(null, cljs.core._PLUS_, xs) / cljs.core.count.call(null, xs)
};
c2.maths.median = function median(xs) {
  var sorted__7352 = cljs.core.sort.call(null, xs);
  var n__7353 = cljs.core.count.call(null, xs);
  if(cljs.core._EQ_.call(null, n__7353, 1)) {
    return cljs.core.first.call(null, sorted__7352)
  }else {
    if(cljs.core.odd_QMARK_.call(null, n__7353)) {
      return cljs.core.nth.call(null, sorted__7352, (n__7353 + 1) / 2)
    }else {
      if("\ufdd0'else") {
        var mid__7354 = n__7353 / 2;
        return c2.maths.mean.call(null, cljs.core.PersistentVector.fromArray([cljs.core.nth.call(null, sorted__7352, c2.maths.floor.call(null, mid__7354)), cljs.core.nth.call(null, sorted__7352, c2.maths.ceil.call(null, mid__7354))], true))
      }else {
        return null
      }
    }
  }
};
c2.maths.irange = function() {
  var irange = null;
  var irange__1 = function(start) {
    return cljs.core.range.call(null, start)
  };
  var irange__2 = function(start, end) {
    return cljs.core.concat.call(null, cljs.core.range.call(null, start, end), cljs.core.PersistentVector.fromArray([end], true))
  };
  var irange__3 = function(start, end, step) {
    var r__7356 = cljs.core.range.call(null, start, end, step);
    if(cljs.core.first.call(null, r__7356) % step === end % step) {
      return cljs.core.concat.call(null, r__7356, cljs.core.PersistentVector.fromArray([end], true))
    }else {
      return r__7356
    }
  };
  irange = function(start, end, step) {
    switch(arguments.length) {
      case 1:
        return irange__1.call(this, start);
      case 2:
        return irange__2.call(this, start, end);
      case 3:
        return irange__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  irange.cljs$lang$arity$1 = irange__1;
  irange.cljs$lang$arity$2 = irange__2;
  irange.cljs$lang$arity$3 = irange__3;
  return irange
}();
c2.maths.within_QMARK_ = function within_QMARK_(x, p__7357) {
  var vec__7363__7364 = p__7357;
  var bottom__7365 = cljs.core.nth.call(null, vec__7363__7364, 0, null);
  var top__7366 = cljs.core.nth.call(null, vec__7363__7364, 1, null);
  var and__3941__auto____7367 = bottom__7365 <= x;
  if(and__3941__auto____7367) {
    return x <= top__7366
  }else {
    return and__3941__auto____7367
  }
};
c2.maths.add = function() {
  var add__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3941__auto____7372 = cljs.core.number_QMARK_.call(null, A);
        if(and__3941__auto____7372) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3941__auto____7372
        }
      }()) {
        return A + B
      }else {
        if(function() {
          var and__3941__auto____7373 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3941__auto____7373) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3941__auto____7373
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._PLUS_, A, B)
        }else {
          if(function() {
            var and__3941__auto____7374 = cljs.core.number_QMARK_.call(null, A);
            if(and__3941__auto____7374) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3941__auto____7374
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._PLUS_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3941__auto____7375 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3941__auto____7375) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3941__auto____7375
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._PLUS_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var add = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return add__delegate.call(this, args)
  };
  add.cljs$lang$maxFixedArity = 0;
  add.cljs$lang$applyTo = function(arglist__7376) {
    var args = cljs.core.seq(arglist__7376);
    return add__delegate(args)
  };
  add.cljs$lang$arity$variadic = add__delegate;
  return add
}();
c2.maths.sub = function() {
  var sub__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3941__auto____7385 = cljs.core.number_QMARK_.call(null, 0);
        if(and__3941__auto____7385) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3941__auto____7385
        }
      }()) {
        return 0 - cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3941__auto____7386 = cljs.core.coll_QMARK_.call(null, 0);
          if(and__3941__auto____7386) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3941__auto____7386
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._, 0, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3941__auto____7387 = cljs.core.number_QMARK_.call(null, 0);
            if(and__3941__auto____7387) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3941__auto____7387
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 0), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3941__auto____7388 = cljs.core.coll_QMARK_.call(null, 0);
              if(and__3941__auto____7388) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3941__auto____7388
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, 0, cljs.core.replicate.call(null, cljs.core.count.call(null, 0), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3941__auto____7389 = cljs.core.number_QMARK_.call(null, A);
          if(and__3941__auto____7389) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3941__auto____7389
          }
        }()) {
          return A - B
        }else {
          if(function() {
            var and__3941__auto____7390 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3941__auto____7390) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3941__auto____7390
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._, A, B)
          }else {
            if(function() {
              var and__3941__auto____7391 = cljs.core.number_QMARK_.call(null, A);
              if(and__3941__auto____7391) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3941__auto____7391
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3941__auto____7392 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3941__auto____7392) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3941__auto____7392
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var sub = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sub__delegate.call(this, args)
  };
  sub.cljs$lang$maxFixedArity = 0;
  sub.cljs$lang$applyTo = function(arglist__7393) {
    var args = cljs.core.seq(arglist__7393);
    return sub__delegate(args)
  };
  sub.cljs$lang$arity$variadic = sub__delegate;
  return sub
}();
c2.maths.mul = function() {
  var mul__delegate = function(args) {
    return cljs.core.reduce.call(null, function(A, B) {
      if(function() {
        var and__3941__auto____7398 = cljs.core.number_QMARK_.call(null, A);
        if(and__3941__auto____7398) {
          return cljs.core.number_QMARK_.call(null, B)
        }else {
          return and__3941__auto____7398
        }
      }()) {
        return A * B
      }else {
        if(function() {
          var and__3941__auto____7399 = cljs.core.coll_QMARK_.call(null, A);
          if(and__3941__auto____7399) {
            return cljs.core.coll_QMARK_.call(null, B)
          }else {
            return and__3941__auto____7399
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._STAR_, A, B)
        }else {
          if(function() {
            var and__3941__auto____7400 = cljs.core.number_QMARK_.call(null, A);
            if(and__3941__auto____7400) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3941__auto____7400
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._STAR_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
          }else {
            if(function() {
              var and__3941__auto____7401 = cljs.core.coll_QMARK_.call(null, A);
              if(and__3941__auto____7401) {
                return cljs.core.number_QMARK_.call(null, B)
              }else {
                return and__3941__auto____7401
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._STAR_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
            }else {
              return null
            }
          }
        }
      }
    }, args)
  };
  var mul = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return mul__delegate.call(this, args)
  };
  mul.cljs$lang$maxFixedArity = 0;
  mul.cljs$lang$applyTo = function(arglist__7402) {
    var args = cljs.core.seq(arglist__7402);
    return mul__delegate(args)
  };
  mul.cljs$lang$arity$variadic = mul__delegate;
  return mul
}();
c2.maths.div = function() {
  var div__delegate = function(args) {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, args), 1)) {
      if(function() {
        var and__3941__auto____7411 = cljs.core.number_QMARK_.call(null, 1);
        if(and__3941__auto____7411) {
          return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
        }else {
          return and__3941__auto____7411
        }
      }()) {
        return 1 / cljs.core.first.call(null, args)
      }else {
        if(function() {
          var and__3941__auto____7412 = cljs.core.coll_QMARK_.call(null, 1);
          if(and__3941__auto____7412) {
            return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
          }else {
            return and__3941__auto____7412
          }
        }()) {
          return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.first.call(null, args))
        }else {
          if(function() {
            var and__3941__auto____7413 = cljs.core.number_QMARK_.call(null, 1);
            if(and__3941__auto____7413) {
              return cljs.core.coll_QMARK_.call(null, cljs.core.first.call(null, args))
            }else {
              return and__3941__auto____7413
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, cljs.core.first.call(null, args)), 1), cljs.core.first.call(null, args))
          }else {
            if(function() {
              var and__3941__auto____7414 = cljs.core.coll_QMARK_.call(null, 1);
              if(and__3941__auto____7414) {
                return cljs.core.number_QMARK_.call(null, cljs.core.first.call(null, args))
              }else {
                return and__3941__auto____7414
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, 1, cljs.core.replicate.call(null, cljs.core.count.call(null, 1), cljs.core.first.call(null, args)))
            }else {
              return null
            }
          }
        }
      }
    }else {
      return cljs.core.reduce.call(null, function(A, B) {
        if(function() {
          var and__3941__auto____7415 = cljs.core.number_QMARK_.call(null, A);
          if(and__3941__auto____7415) {
            return cljs.core.number_QMARK_.call(null, B)
          }else {
            return and__3941__auto____7415
          }
        }()) {
          return A / B
        }else {
          if(function() {
            var and__3941__auto____7416 = cljs.core.coll_QMARK_.call(null, A);
            if(and__3941__auto____7416) {
              return cljs.core.coll_QMARK_.call(null, B)
            }else {
              return and__3941__auto____7416
            }
          }()) {
            return cljs.core.map.call(null, cljs.core._SLASH_, A, B)
          }else {
            if(function() {
              var and__3941__auto____7417 = cljs.core.number_QMARK_.call(null, A);
              if(and__3941__auto____7417) {
                return cljs.core.coll_QMARK_.call(null, B)
              }else {
                return and__3941__auto____7417
              }
            }()) {
              return cljs.core.map.call(null, cljs.core._SLASH_, cljs.core.replicate.call(null, cljs.core.count.call(null, B), A), B)
            }else {
              if(function() {
                var and__3941__auto____7418 = cljs.core.coll_QMARK_.call(null, A);
                if(and__3941__auto____7418) {
                  return cljs.core.number_QMARK_.call(null, B)
                }else {
                  return and__3941__auto____7418
                }
              }()) {
                return cljs.core.map.call(null, cljs.core._SLASH_, A, cljs.core.replicate.call(null, cljs.core.count.call(null, A), B))
              }else {
                return null
              }
            }
          }
        }
      }, args)
    }
  };
  var div = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return div__delegate.call(this, args)
  };
  div.cljs$lang$maxFixedArity = 0;
  div.cljs$lang$applyTo = function(arglist__7419) {
    var args = cljs.core.seq(arglist__7419);
    return div__delegate(args)
  };
  div.cljs$lang$arity$variadic = div__delegate;
  return div
}();
c2.maths.quantile = function() {
  var quantile__delegate = function(data, p__7420) {
    var map__7446__7447 = p__7420;
    var map__7446__7448 = cljs.core.seq_QMARK_.call(null, map__7446__7447) ? clojure.lang.PersistentHashMap.create.call(null, cljs.core.seq.call(null, map__7446__7447)) : map__7446__7447;
    var probs__7449 = cljs.core._lookup.call(null, map__7446__7448, "\ufdd0'probs", cljs.core.PersistentVector.fromArray([0, 0.25, 0.5, 0.75, 1], true));
    var xs__7450 = cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.sort.call(null, data));
    var n_1__7451 = cljs.core.count.call(null, xs__7450) - 1;
    var iter__2487__auto____7470 = function iter__7452(s__7453) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__7453__7462 = s__7453;
        while(true) {
          var temp__4092__auto____7463 = cljs.core.seq.call(null, s__7453__7462);
          if(temp__4092__auto____7463) {
            var xs__4579__auto____7464 = temp__4092__auto____7463;
            var q__7465 = cljs.core.first.call(null, xs__4579__auto____7464);
            return cljs.core.cons.call(null, function() {
              var index__7466 = q__7465 * n_1__7451 + 1;
              var lo__7467 = cljs.core.int$.call(null, c2.maths.floor.call(null, index__7466));
              var h__7468 = index__7466 - lo__7467;
              var a__7469 = xs__7450.call(null, lo__7467 - 1);
              if(cljs.core._EQ_.call(null, h__7468, 0)) {
                return a__7469
              }else {
                return a__7469 + h__7468 * (xs__7450.call(null, lo__7467) - a__7469)
              }
            }(), iter__7452.call(null, cljs.core.rest.call(null, s__7453__7462)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2487__auto____7470.call(null, probs__7449)
  };
  var quantile = function(data, var_args) {
    var p__7420 = null;
    if(goog.isDef(var_args)) {
      p__7420 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return quantile__delegate.call(this, data, p__7420)
  };
  quantile.cljs$lang$maxFixedArity = 1;
  quantile.cljs$lang$applyTo = function(arglist__7471) {
    var data = cljs.core.first(arglist__7471);
    var p__7420 = cljs.core.rest(arglist__7471);
    return quantile__delegate(data, p__7420)
  };
  quantile.cljs$lang$arity$variadic = quantile__delegate;
  return quantile
}();
goog.provide("c2.scale");
goog.require("cljs.core");
goog.require("c2.maths");
goog.require("c2.maths");
void 0;
c2.scale.IInvertable = {};
c2.scale.invert = function invert(scale) {
  if(function() {
    var and__3941__auto____7244 = scale;
    if(and__3941__auto____7244) {
      return scale.c2$scale$IInvertable$invert$arity$1
    }else {
      return and__3941__auto____7244
    }
  }()) {
    return scale.c2$scale$IInvertable$invert$arity$1(scale)
  }else {
    return function() {
      var or__3943__auto____7245 = c2.scale.invert[goog.typeOf(scale)];
      if(or__3943__auto____7245) {
        return or__3943__auto____7245
      }else {
        var or__3943__auto____7246 = c2.scale.invert["_"];
        if(or__3943__auto____7246) {
          return or__3943__auto____7246
        }else {
          throw cljs.core.missing_protocol.call(null, "IInvertable.invert", scale);
        }
      }
    }().call(null, scale)
  }
};
void 0;
c2.scale._linear = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._linear.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2339__auto__) {
  var this__7252 = this;
  var h__2213__auto____7253 = this__7252.__hash;
  if(!(h__2213__auto____7253 == null)) {
    return h__2213__auto____7253
  }else {
    var h__2213__auto____7254 = cljs.core.hash_imap.call(null, this__2339__auto__);
    this__7252.__hash = h__2213__auto____7254;
    return h__2213__auto____7254
  }
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2344__auto__, k__2345__auto__) {
  var this__7255 = this;
  return this__2344__auto__.cljs$core$ILookup$_lookup$arity$3(this__2344__auto__, k__2345__auto__, null)
};
c2.scale._linear.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2346__auto__, k7248, else__2347__auto__) {
  var this__7256 = this;
  if(k7248 === "\ufdd0'domain") {
    return this__7256.domain
  }else {
    if(k7248 === "\ufdd0'range") {
      return this__7256.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__7256.__extmap, k7248, else__2347__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._linear.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2351__auto__, k__2352__auto__, G__7247) {
  var this__7257 = this;
  var pred__7258__7261 = cljs.core.identical_QMARK_;
  var expr__7259__7262 = k__2352__auto__;
  if(pred__7258__7261.call(null, "\ufdd0'domain", expr__7259__7262)) {
    return new c2.scale._linear(G__7247, this__7257.range, this__7257.__meta, this__7257.__extmap, null)
  }else {
    if(pred__7258__7261.call(null, "\ufdd0'range", expr__7259__7262)) {
      return new c2.scale._linear(this__7257.domain, G__7247, this__7257.__meta, this__7257.__extmap, null)
    }else {
      return new c2.scale._linear(this__7257.domain, this__7257.range, this__7257.__meta, cljs.core.assoc.call(null, this__7257.__extmap, k__2352__auto__, G__7247), null)
    }
  }
};
c2.scale._linear.prototype.call = function(this_sym7263, x) {
  var this__7264 = this;
  var this_sym7263__7265 = this;
  var ___7266 = this_sym7263__7265;
  var domain_length__7267 = cljs.core.last.call(null, this__7264.domain) - cljs.core.first.call(null, this__7264.domain);
  var range_length__7268 = cljs.core.last.call(null, this__7264.range) - cljs.core.first.call(null, this__7264.range);
  return cljs.core.first.call(null, this__7264.range) + range_length__7268 * ((x - cljs.core.first.call(null, this__7264.domain)) / domain_length__7267)
};
c2.scale._linear.prototype.apply = function(this_sym7250, args7251) {
  var this__7269 = this;
  return this_sym7250.call.apply(this_sym7250, [this_sym7250].concat(args7251.slice()))
};
c2.scale._linear.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2349__auto__, entry__2350__auto__) {
  var this__7270 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2350__auto__)) {
    return this__2349__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2349__auto__, cljs.core._nth.call(null, entry__2350__auto__, 0), cljs.core._nth.call(null, entry__2350__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2349__auto__, entry__2350__auto__)
  }
};
c2.scale._linear.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2356__auto__) {
  var this__7271 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__7271.domain), cljs.core.vector.call(null, "\ufdd0'range", this__7271.range)], true), this__7271.__extmap))
};
c2.scale._linear.prototype.c2$scale$IInvertable$ = true;
c2.scale._linear.prototype.c2$scale$IInvertable$invert$arity$1 = function(this$) {
  var this__7272 = this;
  return cljs.core.assoc.call(null, this$, "\ufdd0'domain", this__7272.range, "\ufdd0'range", this__7272.domain)
};
c2.scale._linear.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2358__auto__, opts__2359__auto__) {
  var this__7273 = this;
  var pr_pair__2360__auto____7274 = function(keyval__2361__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2359__auto__, keyval__2361__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2360__auto____7274, [cljs.core.str("#"), cljs.core.str("_linear"), cljs.core.str("{")].join(""), ", ", "}", opts__2359__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__7273.domain), cljs.core.vector.call(null, "\ufdd0'range", this__7273.range)], true), this__7273.__extmap))
};
c2.scale._linear.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2348__auto__) {
  var this__7275 = this;
  return 2 + cljs.core.count.call(null, this__7275.__extmap)
};
c2.scale._linear.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2340__auto__, other__2341__auto__) {
  var this__7276 = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto____7277 = other__2341__auto__;
    if(cljs.core.truth_(and__3941__auto____7277)) {
      var and__3941__auto____7278 = this__2340__auto__.constructor === other__2341__auto__.constructor;
      if(and__3941__auto____7278) {
        return cljs.core.equiv_map.call(null, this__2340__auto__, other__2341__auto__)
      }else {
        return and__3941__auto____7278
      }
    }else {
      return and__3941__auto____7277
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._linear.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2343__auto__, G__7247) {
  var this__7279 = this;
  return new c2.scale._linear(this__7279.domain, this__7279.range, G__7247, this__7279.__extmap, this__7279.__hash)
};
c2.scale._linear.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2342__auto__) {
  var this__7280 = this;
  return this__7280.__meta
};
c2.scale._linear.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2353__auto__, k__2354__auto__) {
  var this__7281 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.set(["\ufdd0'domain", "\ufdd0'range"]), k__2354__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2353__auto__), this__7281.__meta), k__2354__auto__)
  }else {
    return new c2.scale._linear(this__7281.domain, this__7281.range, this__7281.__meta, this__7281.__hash, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__7281.__extmap, k__2354__auto__)), null)
  }
};
c2.scale._linear.cljs$lang$type = true;
c2.scale._linear.cljs$lang$ctorPrSeq = function(this__2378__auto__) {
  return cljs.core.list.call(null, "c2.scale/_linear")
};
c2.scale.__GT__linear = function __GT__linear(domain, range) {
  return new c2.scale._linear(domain, range)
};
c2.scale.map__GT__linear = function map__GT__linear(G__7249) {
  return new c2.scale._linear((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__7249), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__7249), null, cljs.core.dissoc.call(null, G__7249, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._linear;
c2.scale.linear = function() {
  var linear__delegate = function(kwargs) {
    return c2.scale.map__GT__linear.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var linear = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return linear__delegate.call(this, kwargs)
  };
  linear.cljs$lang$maxFixedArity = 0;
  linear.cljs$lang$applyTo = function(arglist__7282) {
    var kwargs = cljs.core.seq(arglist__7282);
    return linear__delegate(kwargs)
  };
  linear.cljs$lang$arity$variadic = linear__delegate;
  return linear
}();
void 0;
c2.scale._power = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._power.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2339__auto__) {
  var this__7288 = this;
  var h__2213__auto____7289 = this__7288.__hash;
  if(!(h__2213__auto____7289 == null)) {
    return h__2213__auto____7289
  }else {
    var h__2213__auto____7290 = cljs.core.hash_imap.call(null, this__2339__auto__);
    this__7288.__hash = h__2213__auto____7290;
    return h__2213__auto____7290
  }
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2344__auto__, k__2345__auto__) {
  var this__7291 = this;
  return this__2344__auto__.cljs$core$ILookup$_lookup$arity$3(this__2344__auto__, k__2345__auto__, null)
};
c2.scale._power.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2346__auto__, k7284, else__2347__auto__) {
  var this__7292 = this;
  if(k7284 === "\ufdd0'domain") {
    return this__7292.domain
  }else {
    if(k7284 === "\ufdd0'range") {
      return this__7292.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__7292.__extmap, k7284, else__2347__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._power.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2351__auto__, k__2352__auto__, G__7283) {
  var this__7293 = this;
  var pred__7294__7297 = cljs.core.identical_QMARK_;
  var expr__7295__7298 = k__2352__auto__;
  if(pred__7294__7297.call(null, "\ufdd0'domain", expr__7295__7298)) {
    return new c2.scale._power(G__7283, this__7293.range, this__7293.__meta, this__7293.__extmap, null)
  }else {
    if(pred__7294__7297.call(null, "\ufdd0'range", expr__7295__7298)) {
      return new c2.scale._power(this__7293.domain, G__7283, this__7293.__meta, this__7293.__extmap, null)
    }else {
      return new c2.scale._power(this__7293.domain, this__7293.range, this__7293.__meta, cljs.core.assoc.call(null, this__7293.__extmap, k__2352__auto__, G__7283), null)
    }
  }
};
c2.scale._power.prototype.call = function(this_sym7299, x) {
  var this__7300 = this;
  var this_sym7299__7301 = this;
  var ___7302 = this_sym7299__7301;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.expt, this__7300.domain), "\ufdd0'range", this__7300.range), c2.maths.expt).call(null, x)
};
c2.scale._power.prototype.apply = function(this_sym7286, args7287) {
  var this__7303 = this;
  return this_sym7286.call.apply(this_sym7286, [this_sym7286].concat(args7287.slice()))
};
c2.scale._power.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2349__auto__, entry__2350__auto__) {
  var this__7304 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2350__auto__)) {
    return this__2349__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2349__auto__, cljs.core._nth.call(null, entry__2350__auto__, 0), cljs.core._nth.call(null, entry__2350__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2349__auto__, entry__2350__auto__)
  }
};
c2.scale._power.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2356__auto__) {
  var this__7305 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__7305.domain), cljs.core.vector.call(null, "\ufdd0'range", this__7305.range)], true), this__7305.__extmap))
};
c2.scale._power.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2358__auto__, opts__2359__auto__) {
  var this__7306 = this;
  var pr_pair__2360__auto____7307 = function(keyval__2361__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2359__auto__, keyval__2361__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2360__auto____7307, [cljs.core.str("#"), cljs.core.str("_power"), cljs.core.str("{")].join(""), ", ", "}", opts__2359__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__7306.domain), cljs.core.vector.call(null, "\ufdd0'range", this__7306.range)], true), this__7306.__extmap))
};
c2.scale._power.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2348__auto__) {
  var this__7308 = this;
  return 2 + cljs.core.count.call(null, this__7308.__extmap)
};
c2.scale._power.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2340__auto__, other__2341__auto__) {
  var this__7309 = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto____7310 = other__2341__auto__;
    if(cljs.core.truth_(and__3941__auto____7310)) {
      var and__3941__auto____7311 = this__2340__auto__.constructor === other__2341__auto__.constructor;
      if(and__3941__auto____7311) {
        return cljs.core.equiv_map.call(null, this__2340__auto__, other__2341__auto__)
      }else {
        return and__3941__auto____7311
      }
    }else {
      return and__3941__auto____7310
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._power.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2343__auto__, G__7283) {
  var this__7312 = this;
  return new c2.scale._power(this__7312.domain, this__7312.range, G__7283, this__7312.__extmap, this__7312.__hash)
};
c2.scale._power.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2342__auto__) {
  var this__7313 = this;
  return this__7313.__meta
};
c2.scale._power.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2353__auto__, k__2354__auto__) {
  var this__7314 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.set(["\ufdd0'domain", "\ufdd0'range"]), k__2354__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2353__auto__), this__7314.__meta), k__2354__auto__)
  }else {
    return new c2.scale._power(this__7314.domain, this__7314.range, this__7314.__meta, this__7314.__hash, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__7314.__extmap, k__2354__auto__)), null)
  }
};
c2.scale._power.cljs$lang$type = true;
c2.scale._power.cljs$lang$ctorPrSeq = function(this__2378__auto__) {
  return cljs.core.list.call(null, "c2.scale/_power")
};
c2.scale.__GT__power = function __GT__power(domain, range) {
  return new c2.scale._power(domain, range)
};
c2.scale.map__GT__power = function map__GT__power(G__7285) {
  return new c2.scale._power((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__7285), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__7285), null, cljs.core.dissoc.call(null, G__7285, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._power;
c2.scale.power = function() {
  var power__delegate = function(kwargs) {
    return c2.scale.map__GT__power.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([0, 1], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var power = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return power__delegate.call(this, kwargs)
  };
  power.cljs$lang$maxFixedArity = 0;
  power.cljs$lang$applyTo = function(arglist__7315) {
    var kwargs = cljs.core.seq(arglist__7315);
    return power__delegate(kwargs)
  };
  power.cljs$lang$arity$variadic = power__delegate;
  return power
}();
c2.scale._log = function(domain, range, __meta, __extmap) {
  this.domain = domain;
  this.range = range;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054859;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
c2.scale._log.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2339__auto__) {
  var this__7321 = this;
  var h__2213__auto____7322 = this__7321.__hash;
  if(!(h__2213__auto____7322 == null)) {
    return h__2213__auto____7322
  }else {
    var h__2213__auto____7323 = cljs.core.hash_imap.call(null, this__2339__auto__);
    this__7321.__hash = h__2213__auto____7323;
    return h__2213__auto____7323
  }
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2344__auto__, k__2345__auto__) {
  var this__7324 = this;
  return this__2344__auto__.cljs$core$ILookup$_lookup$arity$3(this__2344__auto__, k__2345__auto__, null)
};
c2.scale._log.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2346__auto__, k7317, else__2347__auto__) {
  var this__7325 = this;
  if(k7317 === "\ufdd0'domain") {
    return this__7325.domain
  }else {
    if(k7317 === "\ufdd0'range") {
      return this__7325.range
    }else {
      if("\ufdd0'else") {
        return cljs.core._lookup.call(null, this__7325.__extmap, k7317, else__2347__auto__)
      }else {
        return null
      }
    }
  }
};
c2.scale._log.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2351__auto__, k__2352__auto__, G__7316) {
  var this__7326 = this;
  var pred__7327__7330 = cljs.core.identical_QMARK_;
  var expr__7328__7331 = k__2352__auto__;
  if(pred__7327__7330.call(null, "\ufdd0'domain", expr__7328__7331)) {
    return new c2.scale._log(G__7316, this__7326.range, this__7326.__meta, this__7326.__extmap, null)
  }else {
    if(pred__7327__7330.call(null, "\ufdd0'range", expr__7328__7331)) {
      return new c2.scale._log(this__7326.domain, G__7316, this__7326.__meta, this__7326.__extmap, null)
    }else {
      return new c2.scale._log(this__7326.domain, this__7326.range, this__7326.__meta, cljs.core.assoc.call(null, this__7326.__extmap, k__2352__auto__, G__7316), null)
    }
  }
};
c2.scale._log.prototype.call = function(this_sym7332, x) {
  var this__7333 = this;
  var this_sym7332__7334 = this;
  var ___7335 = this_sym7332__7334;
  return cljs.core.comp.call(null, c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.map.call(null, c2.maths.log, this__7333.domain), "\ufdd0'range", this__7333.range), c2.maths.log).call(null, x)
};
c2.scale._log.prototype.apply = function(this_sym7319, args7320) {
  var this__7336 = this;
  return this_sym7319.call.apply(this_sym7319, [this_sym7319].concat(args7320.slice()))
};
c2.scale._log.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2349__auto__, entry__2350__auto__) {
  var this__7337 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2350__auto__)) {
    return this__2349__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2349__auto__, cljs.core._nth.call(null, entry__2350__auto__, 0), cljs.core._nth.call(null, entry__2350__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2349__auto__, entry__2350__auto__)
  }
};
c2.scale._log.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2356__auto__) {
  var this__7338 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__7338.domain), cljs.core.vector.call(null, "\ufdd0'range", this__7338.range)], true), this__7338.__extmap))
};
c2.scale._log.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2358__auto__, opts__2359__auto__) {
  var this__7339 = this;
  var pr_pair__2360__auto____7340 = function(keyval__2361__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2359__auto__, keyval__2361__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2360__auto____7340, [cljs.core.str("#"), cljs.core.str("_log"), cljs.core.str("{")].join(""), ", ", "}", opts__2359__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'domain", this__7339.domain), cljs.core.vector.call(null, "\ufdd0'range", this__7339.range)], true), this__7339.__extmap))
};
c2.scale._log.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2348__auto__) {
  var this__7341 = this;
  return 2 + cljs.core.count.call(null, this__7341.__extmap)
};
c2.scale._log.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2340__auto__, other__2341__auto__) {
  var this__7342 = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto____7343 = other__2341__auto__;
    if(cljs.core.truth_(and__3941__auto____7343)) {
      var and__3941__auto____7344 = this__2340__auto__.constructor === other__2341__auto__.constructor;
      if(and__3941__auto____7344) {
        return cljs.core.equiv_map.call(null, this__2340__auto__, other__2341__auto__)
      }else {
        return and__3941__auto____7344
      }
    }else {
      return and__3941__auto____7343
    }
  }())) {
    return true
  }else {
    return false
  }
};
c2.scale._log.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2343__auto__, G__7316) {
  var this__7345 = this;
  return new c2.scale._log(this__7345.domain, this__7345.range, G__7316, this__7345.__extmap, this__7345.__hash)
};
c2.scale._log.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2342__auto__) {
  var this__7346 = this;
  return this__7346.__meta
};
c2.scale._log.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2353__auto__, k__2354__auto__) {
  var this__7347 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.set(["\ufdd0'domain", "\ufdd0'range"]), k__2354__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2353__auto__), this__7347.__meta), k__2354__auto__)
  }else {
    return new c2.scale._log(this__7347.domain, this__7347.range, this__7347.__meta, this__7347.__hash, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__7347.__extmap, k__2354__auto__)), null)
  }
};
c2.scale._log.cljs$lang$type = true;
c2.scale._log.cljs$lang$ctorPrSeq = function(this__2378__auto__) {
  return cljs.core.list.call(null, "c2.scale/_log")
};
c2.scale.__GT__log = function __GT__log(domain, range) {
  return new c2.scale._log(domain, range)
};
c2.scale.map__GT__log = function map__GT__log(G__7318) {
  return new c2.scale._log((new cljs.core.Keyword("\ufdd0'domain")).call(null, G__7318), (new cljs.core.Keyword("\ufdd0'range")).call(null, G__7318), null, cljs.core.dissoc.call(null, G__7318, "\ufdd0'domain", "\ufdd0'range"))
};
c2.scale._log;
c2.scale.log = function() {
  var log__delegate = function(kwargs) {
    return c2.scale.map__GT__log.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'domain", "\ufdd0'range"], {"\ufdd0'domain":cljs.core.PersistentVector.fromArray([1, 10], true), "\ufdd0'range":cljs.core.PersistentVector.fromArray([0, 1], true)}), cljs.core.apply.call(null, cljs.core.hash_map, kwargs)))
  };
  var log = function(var_args) {
    var kwargs = null;
    if(goog.isDef(var_args)) {
      kwargs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, kwargs)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__7348) {
    var kwargs = cljs.core.seq(arglist__7348);
    return log__delegate(kwargs)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
goog.provide("reflex.core");
goog.require("cljs.core");
void 0;
reflex.core.capture_derefed = function capture_derefed(f) {
  var _BANG_recently_derefed11551__11552 = reflex.core._BANG_recently_derefed;
  try {
    reflex.core._BANG_recently_derefed = cljs.core.atom.call(null, cljs.core.set([]), "\ufdd0'meta", cljs.core.ObjMap.fromObject(["\ufdd0'no-deref-monitor"], {"\ufdd0'no-deref-monitor":true}));
    var res__11554 = f.call(null);
    return cljs.core.ObjMap.fromObject(["\ufdd0'res", "\ufdd0'derefed"], {"\ufdd0'res":res__11554, "\ufdd0'derefed":cljs.core.deref.call(null, reflex.core._BANG_recently_derefed)})
  }finally {
    reflex.core._BANG_recently_derefed = _BANG_recently_derefed11551__11552
  }
};
reflex.core.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  if(cljs.core.truth_(function() {
    var and__3941__auto____11556 = reflex.core._BANG_recently_derefed;
    if(cljs.core.truth_(and__3941__auto____11556)) {
      return cljs.core.not.call(null, (new cljs.core.Keyword("\ufdd0'no-deref-monitor")).call(null, cljs.core.meta.call(null, derefable)))
    }else {
      return and__3941__auto____11556
    }
  }())) {
    return cljs.core.swap_BANG_.call(null, reflex.core._BANG_recently_derefed, function(p1__11546_SHARP_) {
      return cljs.core.conj.call(null, p1__11546_SHARP_, derefable)
    })
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IDeref$ = true;
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  return this$.state
};
void 0;
reflex.core.IDisposable = {};
reflex.core.dispose_BANG_ = function dispose_BANG_(this$) {
  if(function() {
    var and__3941__auto____11560 = this$;
    if(and__3941__auto____11560) {
      return this$.reflex$core$IDisposable$dispose_BANG_$arity$1
    }else {
      return and__3941__auto____11560
    }
  }()) {
    return this$.reflex$core$IDisposable$dispose_BANG_$arity$1(this$)
  }else {
    return function() {
      var or__3943__auto____11561 = reflex.core.dispose_BANG_[goog.typeOf(this$)];
      if(or__3943__auto____11561) {
        return or__3943__auto____11561
      }else {
        var or__3943__auto____11562 = reflex.core.dispose_BANG_["_"];
        if(or__3943__auto____11562) {
          return or__3943__auto____11562
        }else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$)
  }
};
void 0;
reflex.core.ComputedObservable = function(state, dirty_QMARK_, f, key, parent_watchables, watches, __meta, __extmap) {
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.f = f;
  this.key = key;
  this.parent_watchables = parent_watchables;
  this.watches = watches;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2766571274;
  if(arguments.length > 6) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2339__auto__) {
  var this__11566 = this;
  var h__2213__auto____11567 = this__11566.__hash;
  if(!(h__2213__auto____11567 == null)) {
    return h__2213__auto____11567
  }else {
    var h__2213__auto____11568 = cljs.core.hash_imap.call(null, this__2339__auto__);
    this__11566.__hash = h__2213__auto____11568;
    return h__2213__auto____11568
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2344__auto__, k__2345__auto__) {
  var this__11569 = this;
  return this__2344__auto__.cljs$core$ILookup$_lookup$arity$3(this__2344__auto__, k__2345__auto__, null)
};
reflex.core.ComputedObservable.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2346__auto__, k11564, else__2347__auto__) {
  var this__11570 = this;
  if(k11564 === "\ufdd0'state") {
    return this__11570.state
  }else {
    if(k11564 === "\ufdd0'dirty?") {
      return this__11570.dirty_QMARK_
    }else {
      if(k11564 === "\ufdd0'f") {
        return this__11570.f
      }else {
        if(k11564 === "\ufdd0'key") {
          return this__11570.key
        }else {
          if(k11564 === "\ufdd0'parent-watchables") {
            return this__11570.parent_watchables
          }else {
            if(k11564 === "\ufdd0'watches") {
              return this__11570.watches
            }else {
              if("\ufdd0'else") {
                return cljs.core._lookup.call(null, this__11570.__extmap, k11564, else__2347__auto__)
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2351__auto__, k__2352__auto__, G__11563) {
  var this__11571 = this;
  var pred__11572__11575 = cljs.core.identical_QMARK_;
  var expr__11573__11576 = k__2352__auto__;
  if(pred__11572__11575.call(null, "\ufdd0'state", expr__11573__11576)) {
    return new reflex.core.ComputedObservable(G__11563, this__11571.dirty_QMARK_, this__11571.f, this__11571.key, this__11571.parent_watchables, this__11571.watches, this__11571.__meta, this__11571.__extmap, null)
  }else {
    if(pred__11572__11575.call(null, "\ufdd0'dirty?", expr__11573__11576)) {
      return new reflex.core.ComputedObservable(this__11571.state, G__11563, this__11571.f, this__11571.key, this__11571.parent_watchables, this__11571.watches, this__11571.__meta, this__11571.__extmap, null)
    }else {
      if(pred__11572__11575.call(null, "\ufdd0'f", expr__11573__11576)) {
        return new reflex.core.ComputedObservable(this__11571.state, this__11571.dirty_QMARK_, G__11563, this__11571.key, this__11571.parent_watchables, this__11571.watches, this__11571.__meta, this__11571.__extmap, null)
      }else {
        if(pred__11572__11575.call(null, "\ufdd0'key", expr__11573__11576)) {
          return new reflex.core.ComputedObservable(this__11571.state, this__11571.dirty_QMARK_, this__11571.f, G__11563, this__11571.parent_watchables, this__11571.watches, this__11571.__meta, this__11571.__extmap, null)
        }else {
          if(pred__11572__11575.call(null, "\ufdd0'parent-watchables", expr__11573__11576)) {
            return new reflex.core.ComputedObservable(this__11571.state, this__11571.dirty_QMARK_, this__11571.f, this__11571.key, G__11563, this__11571.watches, this__11571.__meta, this__11571.__extmap, null)
          }else {
            if(pred__11572__11575.call(null, "\ufdd0'watches", expr__11573__11576)) {
              return new reflex.core.ComputedObservable(this__11571.state, this__11571.dirty_QMARK_, this__11571.f, this__11571.key, this__11571.parent_watchables, G__11563, this__11571.__meta, this__11571.__extmap, null)
            }else {
              return new reflex.core.ComputedObservable(this__11571.state, this__11571.dirty_QMARK_, this__11571.f, this__11571.key, this__11571.parent_watchables, this__11571.watches, this__11571.__meta, cljs.core.assoc.call(null, this__11571.__extmap, k__2352__auto__, G__11563), null)
            }
          }
        }
      }
    }
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var this__11577 = this;
  reflex.core.notify_deref_watcher_BANG_.call(null, this$);
  if(cljs.core.not.call(null, this__11577.dirty_QMARK_)) {
    return this$.state
  }else {
    var map__11578__11579 = reflex.core.capture_derefed.call(null, this__11577.f);
    var map__11578__11580 = cljs.core.seq_QMARK_.call(null, map__11578__11579) ? clojure.lang.PersistentHashMap.create.call(null, cljs.core.seq.call(null, map__11578__11579)) : map__11578__11579;
    var derefed__11581 = cljs.core._lookup.call(null, map__11578__11580, "\ufdd0'derefed", null);
    var res__11582 = cljs.core._lookup.call(null, map__11578__11580, "\ufdd0'res", null);
    var G__11583__11584 = cljs.core.seq.call(null, this__11577.parent_watchables);
    if(G__11583__11584) {
      var w__11585 = cljs.core.first.call(null, G__11583__11584);
      var G__11583__11586 = G__11583__11584;
      while(true) {
        cljs.core.remove_watch.call(null, w__11585, this__11577.key);
        var temp__4092__auto____11587 = cljs.core.next.call(null, G__11583__11586);
        if(temp__4092__auto____11587) {
          var G__11583__11588 = temp__4092__auto____11587;
          var G__11636 = cljs.core.first.call(null, G__11583__11588);
          var G__11637 = G__11583__11588;
          w__11585 = G__11636;
          G__11583__11586 = G__11637;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.parent_watchables = derefed__11581;
    var G__11589__11590 = cljs.core.seq.call(null, derefed__11581);
    if(G__11589__11590) {
      var w__11591 = cljs.core.first.call(null, G__11589__11590);
      var G__11589__11592 = G__11589__11590;
      while(true) {
        cljs.core.add_watch.call(null, w__11591, this__11577.key, function(w__11591, G__11589__11592) {
          return function() {
            this$.dirty_QMARK_ = true;
            return cljs.core._notify_watches.call(null, this$, null, null)
          }
        }(w__11591, G__11589__11592));
        var temp__4092__auto____11593 = cljs.core.next.call(null, G__11589__11592);
        if(temp__4092__auto____11593) {
          var G__11589__11594 = temp__4092__auto____11593;
          var G__11638 = cljs.core.first.call(null, G__11589__11594);
          var G__11639 = G__11589__11594;
          w__11591 = G__11638;
          G__11589__11592 = G__11639;
          continue
        }else {
        }
        break
      }
    }else {
    }
    this$.state = res__11582;
    this$.dirty_QMARK_ = false;
    return res__11582
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2349__auto__, entry__2350__auto__) {
  var this__11595 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2350__auto__)) {
    return this__2349__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2349__auto__, cljs.core._nth.call(null, entry__2350__auto__, 0), cljs.core._nth.call(null, entry__2350__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2349__auto__, entry__2350__auto__)
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, _11597, _) {
  var this__11596 = this;
  var G__11598__11599 = cljs.core.seq.call(null, this__11596.watches);
  if(G__11598__11599) {
    var G__11601__11603 = cljs.core.first.call(null, G__11598__11599);
    var vec__11602__11604 = G__11601__11603;
    var key__11605 = cljs.core.nth.call(null, vec__11602__11604, 0, null);
    var wf__11606 = cljs.core.nth.call(null, vec__11602__11604, 1, null);
    var G__11598__11607 = G__11598__11599;
    var G__11601__11608 = G__11601__11603;
    var G__11598__11609 = G__11598__11607;
    while(true) {
      var vec__11610__11611 = G__11601__11608;
      var key__11612 = cljs.core.nth.call(null, vec__11610__11611, 0, null);
      var wf__11613 = cljs.core.nth.call(null, vec__11610__11611, 1, null);
      var G__11598__11614 = G__11598__11609;
      wf__11613.call(null);
      var temp__4092__auto____11615 = cljs.core.next.call(null, G__11598__11614);
      if(temp__4092__auto____11615) {
        var G__11598__11616 = temp__4092__auto____11615;
        var G__11640 = cljs.core.first.call(null, G__11598__11616);
        var G__11641 = G__11598__11616;
        G__11601__11608 = G__11640;
        G__11598__11609 = G__11641;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, wf) {
  var this__11617 = this;
  return this$.watches = cljs.core.assoc.call(null, this__11617.watches, key, wf)
};
reflex.core.ComputedObservable.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__11618 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__11618.watches, key)
};
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$ = true;
reflex.core.ComputedObservable.prototype.reflex$core$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var this__11619 = this;
  var G__11620__11621 = cljs.core.seq.call(null, this__11619.parent_watchables);
  if(G__11620__11621) {
    var w__11622 = cljs.core.first.call(null, G__11620__11621);
    var G__11620__11623 = G__11620__11621;
    while(true) {
      cljs.core.remove_watch.call(null, w__11622, this__11619.key);
      var temp__4092__auto____11624 = cljs.core.next.call(null, G__11620__11623);
      if(temp__4092__auto____11624) {
        var G__11620__11625 = temp__4092__auto____11624;
        var G__11642 = cljs.core.first.call(null, G__11620__11625);
        var G__11643 = G__11620__11625;
        w__11622 = G__11642;
        G__11620__11623 = G__11643;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return this$.watches = null
};
reflex.core.ComputedObservable.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2356__auto__) {
  var this__11626 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__11626.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__11626.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__11626.f), cljs.core.vector.call(null, "\ufdd0'key", this__11626.key), cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__11626.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__11626.watches)], 
  true), this__11626.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2358__auto__, opts__2359__auto__) {
  var this__11627 = this;
  var pr_pair__2360__auto____11628 = function(keyval__2361__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2359__auto__, keyval__2361__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2360__auto____11628, [cljs.core.str("#"), cljs.core.str("ComputedObservable"), cljs.core.str("{")].join(""), ", ", "}", opts__2359__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'state", this__11627.state), cljs.core.vector.call(null, "\ufdd0'dirty?", this__11627.dirty_QMARK_), cljs.core.vector.call(null, "\ufdd0'f", this__11627.f), cljs.core.vector.call(null, "\ufdd0'key", this__11627.key), 
  cljs.core.vector.call(null, "\ufdd0'parent-watchables", this__11627.parent_watchables), cljs.core.vector.call(null, "\ufdd0'watches", this__11627.watches)], true), this__11627.__extmap))
};
reflex.core.ComputedObservable.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2348__auto__) {
  var this__11629 = this;
  return 6 + cljs.core.count.call(null, this__11629.__extmap)
};
reflex.core.ComputedObservable.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2340__auto__, other__2341__auto__) {
  var this__11630 = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto____11631 = other__2341__auto__;
    if(cljs.core.truth_(and__3941__auto____11631)) {
      var and__3941__auto____11632 = this__2340__auto__.constructor === other__2341__auto__.constructor;
      if(and__3941__auto____11632) {
        return cljs.core.equiv_map.call(null, this__2340__auto__, other__2341__auto__)
      }else {
        return and__3941__auto____11632
      }
    }else {
      return and__3941__auto____11631
    }
  }())) {
    return true
  }else {
    return false
  }
};
reflex.core.ComputedObservable.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2343__auto__, G__11563) {
  var this__11633 = this;
  return new reflex.core.ComputedObservable(this__11633.state, this__11633.dirty_QMARK_, this__11633.f, this__11633.key, this__11633.parent_watchables, this__11633.watches, G__11563, this__11633.__extmap, this__11633.__hash)
};
reflex.core.ComputedObservable.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2342__auto__) {
  var this__11634 = this;
  return this__11634.__meta
};
reflex.core.ComputedObservable.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2353__auto__, k__2354__auto__) {
  var this__11635 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.set(["\ufdd0'dirty?", "\ufdd0'state", "\ufdd0'key", "\ufdd0'f", "\ufdd0'watches", "\ufdd0'parent-watchables"]), k__2354__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2353__auto__), this__11635.__meta), k__2354__auto__)
  }else {
    return new reflex.core.ComputedObservable(this__11635.state, this__11635.dirty_QMARK_, this__11635.f, this__11635.key, this__11635.parent_watchables, this__11635.watches, this__11635.__meta, this__11635.__hash, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__11635.__extmap, k__2354__auto__)), null)
  }
};
reflex.core.ComputedObservable.cljs$lang$type = true;
reflex.core.ComputedObservable.cljs$lang$ctorPrSeq = function(this__2378__auto__) {
  return cljs.core.list.call(null, "reflex.core/ComputedObservable")
};
reflex.core.__GT_ComputedObservable = function __GT_ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches) {
  return new reflex.core.ComputedObservable(state, dirty_QMARK_, f, key, parent_watchables, watches)
};
reflex.core.map__GT_ComputedObservable = function map__GT_ComputedObservable(G__11565) {
  return new reflex.core.ComputedObservable((new cljs.core.Keyword("\ufdd0'state")).call(null, G__11565), (new cljs.core.Keyword("\ufdd0'dirty?")).call(null, G__11565), (new cljs.core.Keyword("\ufdd0'f")).call(null, G__11565), (new cljs.core.Keyword("\ufdd0'key")).call(null, G__11565), (new cljs.core.Keyword("\ufdd0'parent-watchables")).call(null, G__11565), (new cljs.core.Keyword("\ufdd0'watches")).call(null, G__11565), null, cljs.core.dissoc.call(null, G__11565, "\ufdd0'state", "\ufdd0'dirty?", 
  "\ufdd0'f", "\ufdd0'key", "\ufdd0'parent-watchables", "\ufdd0'watches"))
};
reflex.core.ComputedObservable;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$ = true;
reflex.core.ComputedObservable.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  return this$.key
};
var array_p, dom_p, explode_p, ignore_p, key_prefix, map_p, namespace_tag, number_p, p, re_namespace_sep, re_svg_tags, re_tag, re_whitespace, string_p, unify_p, whitespace_node_p, xmlns, __hasProp = {}.hasOwnProperty;
goog.require("goog.string");
goog.provide("singult.coffee");
goog.provide("singult.coffee.Unify");
goog.provide("singult.coffee.Ignore");
p = function(x) {
  console.log(x);
  return x
};
re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
re_svg_tags = /^(svg|g|rect|circle|clipPath|path|line|polygon|polyline|text|textPath)$/;
re_whitespace = /^\s+$/;
re_namespace_sep = /:(.+)/;
key_prefix = "\x00";
xmlns = {xhtml:"http://www.w3.org/1999/xhtml", xlink:"http://www.w3.org/1999/xlink", svg:"http://www.w3.org/2000/svg", xml:"http://www.w3.org/XML/1998/namespace", xmlns:"http://www.w3.org/2000/xmlns"};
namespace_tag = function(tag_str) {
  var nsp, tag, _ref;
  _ref = tag_str.split(":"), nsp = _ref[0], tag = _ref[1];
  if(tag != null) {
    return[xmlns[nsp] || nsp, tag]
  }else {
    if(tag_str.match(re_svg_tags)) {
      return[xmlns.svg, tag_str]
    }else {
      return[xmlns.xhtml, tag_str]
    }
  }
};
explode_p = function(v) {
  return v[0] === ":*:"
};
unify_p = function(x) {
  return x != null && x instanceof singult.coffee.Unify
};
ignore_p = function(x) {
  return x != null && x instanceof singult.coffee.Ignore
};
array_p = function(x) {
  return x != null && x.forEach != null
};
map_p = function(x) {
  return x != null && !array_p(x) && !unify_p(x) && !ignore_p(x) && x instanceof Object
};
dom_p = function(x) {
  return x != null && x.nodeType != null
};
string_p = function(x) {
  return x != null && x.substring != null
};
number_p = function(x) {
  return x != null && x.toFixed != null
};
whitespace_node_p = function($n) {
  return $n.nodeType === 8 || $n.nodeType === 3 && $n.textContent.match(re_whitespace)
};
singult.coffee.style = function($e, m) {
  var k, v, _results;
  _results = [];
  for(k in m) {
    if(!__hasProp.call(m, k)) {
      continue
    }
    v = m[k];
    _results.push($e.style[goog.string.toCamelCase(k)] = v)
  }
  return _results
};
singult.coffee.properties = function($e, m) {
  var prop, v, _results;
  _results = [];
  for(prop in m) {
    if(!__hasProp.call(m, prop)) {
      continue
    }
    v = m[prop];
    _results.push($e[prop] = v)
  }
  return _results
};
singult.coffee.attr = function($e, attr_map) {
  var attr, k, ns, v, _ref, _results;
  if(attr_map["style"] != null) {
    singult.coffee.style($e, attr_map["style"]);
    delete attr_map["style"]
  }
  if(attr_map["properties"] != null) {
    singult.coffee.properties($e, attr_map["properties"]);
    delete attr_map["properties"]
  }
  if(array_p(attr_map["class"])) {
    $e.setAttribute("class", attr_map["class"].join(" "));
    delete attr_map["class"]
  }
  _results = [];
  for(k in attr_map) {
    if(!__hasProp.call(attr_map, k)) {
      continue
    }
    v = attr_map[k];
    if(v != null) {
      _ref = k.split(re_namespace_sep), ns = _ref[0], attr = _ref[1];
      if(attr != null) {
        _results.push($e.setAttributeNS(xmlns[ns] || ns, attr, v))
      }else {
        _results.push($e.setAttribute(k, v))
      }
    }else {
      _results.push($e.removeAttribute(k))
    }
  }
  return _results
};
singult.coffee.node_data = function($e, d) {
  if(d != null) {
    return $e["__singult_data__"] = d
  }else {
    return $e["__singult_data__"]
  }
};
singult.coffee.canonicalize = function(x) {
  if(number_p(x)) {
    return x.toString()
  }else {
    if(array_p(x)) {
      return singult.coffee.canonicalize_hiccup(x)
    }else {
      return x
    }
  }
};
singult.coffee.canonicalize_hiccup = function(v) {
  var abbreviated_classes, attr, canonical, canonical_children, children, cls_str, id, nsp, tag, tag_str, _, _ref, _ref1, _ref2;
  tag = v[0];
  _ref = map_p(v[1]) ? [v[1], v.slice(2)] : [{}, v.slice(1)], attr = _ref[0], children = _ref[1];
  _ref1 = tag.match(re_tag), _ = _ref1[0], tag_str = _ref1[1], id = _ref1[2], cls_str = _ref1[3];
  if(id != null) {
    attr["id"] = id
  }
  if(cls_str != null) {
    abbreviated_classes = cls_str.split(".");
    if(array_p(attr["class"])) {
      attr["class"] = attr["class"].concat(abbreviated_classes)
    }else {
      if(string_p(attr["class"])) {
        attr["class"] = abbreviated_classes.concat([attr["class"]])
      }else {
        if(!(attr["class"] != null)) {
          attr["class"] = abbreviated_classes
        }
      }
    }
  }
  _ref2 = namespace_tag(tag_str), nsp = _ref2[0], tag = _ref2[1];
  canonical_children = [];
  children.forEach(function(v) {
    if(v != null) {
      if(explode_p(v)) {
        return v.slice(1).forEach(function(v) {
          return canonical_children.push(singult.coffee.canonicalize(v))
        })
      }else {
        return canonical_children.push(singult.coffee.canonicalize(v))
      }
    }
  });
  canonical = {nsp:nsp, tag:tag, attr:attr, children:canonical_children};
  return canonical
};
singult.coffee.render = function(m) {
  var $e, c;
  if(unify_p(m)) {
    throw new Error("Unify must be the first and only child of its parent.");
  }else {
    if(ignore_p(m)) {
      return null
    }else {
      if(string_p(m)) {
        return document.createTextNode(m)
      }else {
        if(dom_p(m)) {
          return m
        }else {
          $e = document.createElementNS(m.nsp, m.tag);
          singult.coffee.attr($e, m.attr);
          if(unify_p(c = m.children[0])) {
            if(c.enter != null) {
              c.data.forEach(function(d) {
                var $el;
                $el = c.enter(d);
                singult.coffee.node_data($el, d);
                return $e.appendChild($el)
              })
            }else {
              c.data.forEach(function(d) {
                var $el;
                $el = singult.coffee.render(singult.coffee.canonicalize(c.mapping(d)));
                singult.coffee.node_data($el, d);
                return $e.appendChild($el)
              })
            }
          }else {
            m.children.forEach(function(c) {
              var $c;
              $c = singult.coffee.render(c);
              if($c != null) {
                return $e.appendChild($c)
              }
            })
          }
          return $e
        }
      }
    }
  }
};
singult.coffee.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_p) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_p = force_update_p;
  return this
};
singult.coffee.Ignore = function() {
  return this
};
singult.coffee.unify_ = function($container, u) {
  var $n, $nodes, enter, exit, i, key, key_fn, nodes_by_key, update, _;
  enter = u.enter || function(d) {
    var $el;
    $el = singult.coffee.render(singult.coffee.canonicalize(u.mapping(d)));
    $container.appendChild($el);
    return $el
  };
  update = u.update || function($n, d) {
    return singult.coffee.merge($n, singult.coffee.canonicalize(u.mapping(d)))
  };
  exit = u.exit || function($n) {
    return $container.removeChild($n)
  };
  key_fn = u.key_fn || function(d, idx) {
    return idx
  };
  $nodes = $container.childNodes;
  nodes_by_key = {};
  i = 0;
  while(i < $nodes.length) {
    key = key_prefix + key_fn(singult.coffee.node_data($nodes[i]), i);
    nodes_by_key[key] = $nodes[i];
    i += 1
  }
  u.data.forEach(function(d, i) {
    var $el, $n, identical_data_p, old_data;
    key = key_prefix + key_fn(d, i);
    if($n = nodes_by_key[key]) {
      if(u.force_update_p) {
        $el = update($n, d);
        singult.coffee.node_data($el, d)
      }else {
        old_data = singult.coffee.node_data($n);
        identical_data_p = old_data.cljs$core$IEquiv$_equiv$arity$2 != null ? old_data.cljs$core$IEquiv$_equiv$arity$2(old_data, d) : old_data === d;
        if(!identical_data_p) {
          $el = update($n, d);
          singult.coffee.node_data($el, d)
        }
      }
      return delete nodes_by_key[key]
    }else {
      $el = enter(d);
      return singult.coffee.node_data($el, d)
    }
  });
  for(_ in nodes_by_key) {
    $n = nodes_by_key[_];
    exit($n)
  }
  return null
};
singult.coffee.merge = function($e, m) {
  var $c, c, i, _i, _j, _ref, _ref1;
  if(unify_p(m)) {
    singult.coffee.unify_($e, m)
  }else {
    if(ignore_p(m)) {
    }else {
      if($e.nodeName.toLowerCase() !== m.tag.toLowerCase()) {
        p($e);
        p(m);
        throw new Error("Cannot merge $e into node of different type");
      }
      singult.coffee.attr($e, m.attr);
      if($e.hasChildNodes()) {
        for(i = _i = _ref = $e.childNodes.length - 1;_ref <= 0 ? _i <= 0 : _i >= 0;i = _ref <= 0 ? ++_i : --_i) {
          $c = $e.childNodes[i];
          if(whitespace_node_p($c)) {
            $e.removeChild($c)
          }
        }
      }
      if(unify_p(m.children[0])) {
        singult.coffee.merge($e, m.children[0])
      }else {
        if($e.childNodes.length > m.children.length) {
          for(i = _j = _ref1 = $e.childNodes.length - 1;_ref1 <= 0 ? _j <= 0 : _j >= 0;i = _ref1 <= 0 ? ++_j : --_j) {
            $e.removeChild($e.childNodes[i])
          }
        }
        i = 0;
        while(i < m.children.length) {
          c = m.children[i] || "";
          $c = $e.childNodes[i];
          if(string_p(c)) {
            if($c != null) {
              $c.textContent = c
            }else {
              $e.appendChild(document.createTextNode(c))
            }
          }else {
            if(ignore_p(c)) {
            }else {
              if(map_p(c)) {
                if($c != null) {
                  singult.coffee.merge($c, c)
                }else {
                  $e.appendChild(singult.coffee.render(c))
                }
              }else {
                p($c);
                p(c);
                throw new Error("Cannot merge children");
              }
            }
          }
          i += 1
        }
      }
    }
  }
  return $e
};
goog.provide("singult.core");
goog.require("cljs.core");
goog.require("singult.coffee");
singult.core.Unify = function(data, mapping, key_fn, enter, update, exit, force_update_QMARK_, __meta, __extmap) {
  this.data = data;
  this.mapping = mapping;
  this.key_fn = key_fn;
  this.enter = enter;
  this.update = update;
  this.exit = exit;
  this.force_update_QMARK_ = force_update_QMARK_;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 619054858;
  if(arguments.length > 7) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
singult.core.Unify.prototype.cljs$core$IHash$_hash$arity$1 = function(this__2339__auto__) {
  var this__11392 = this;
  var h__2213__auto____11393 = this__11392.__hash;
  if(!(h__2213__auto____11393 == null)) {
    return h__2213__auto____11393
  }else {
    var h__2213__auto____11394 = cljs.core.hash_imap.call(null, this__2339__auto__);
    this__11392.__hash = h__2213__auto____11394;
    return h__2213__auto____11394
  }
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__2344__auto__, k__2345__auto__) {
  var this__11395 = this;
  return this__2344__auto__.cljs$core$ILookup$_lookup$arity$3(this__2344__auto__, k__2345__auto__, null)
};
singult.core.Unify.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__2346__auto__, k11390, else__2347__auto__) {
  var this__11396 = this;
  if(k11390 === "\ufdd0'data") {
    return this__11396.data
  }else {
    if(k11390 === "\ufdd0'mapping") {
      return this__11396.mapping
    }else {
      if(k11390 === "\ufdd0'key-fn") {
        return this__11396.key_fn
      }else {
        if(k11390 === "\ufdd0'enter") {
          return this__11396.enter
        }else {
          if(k11390 === "\ufdd0'update") {
            return this__11396.update
          }else {
            if(k11390 === "\ufdd0'exit") {
              return this__11396.exit
            }else {
              if(k11390 === "\ufdd0'force-update?") {
                return this__11396.force_update_QMARK_
              }else {
                if("\ufdd0'else") {
                  return cljs.core._lookup.call(null, this__11396.__extmap, k11390, else__2347__auto__)
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__2351__auto__, k__2352__auto__, G__11389) {
  var this__11397 = this;
  var pred__11398__11401 = cljs.core.identical_QMARK_;
  var expr__11399__11402 = k__2352__auto__;
  if(pred__11398__11401.call(null, "\ufdd0'data", expr__11399__11402)) {
    return new singult.core.Unify(G__11389, this__11397.mapping, this__11397.key_fn, this__11397.enter, this__11397.update, this__11397.exit, this__11397.force_update_QMARK_, this__11397.__meta, this__11397.__extmap, null)
  }else {
    if(pred__11398__11401.call(null, "\ufdd0'mapping", expr__11399__11402)) {
      return new singult.core.Unify(this__11397.data, G__11389, this__11397.key_fn, this__11397.enter, this__11397.update, this__11397.exit, this__11397.force_update_QMARK_, this__11397.__meta, this__11397.__extmap, null)
    }else {
      if(pred__11398__11401.call(null, "\ufdd0'key-fn", expr__11399__11402)) {
        return new singult.core.Unify(this__11397.data, this__11397.mapping, G__11389, this__11397.enter, this__11397.update, this__11397.exit, this__11397.force_update_QMARK_, this__11397.__meta, this__11397.__extmap, null)
      }else {
        if(pred__11398__11401.call(null, "\ufdd0'enter", expr__11399__11402)) {
          return new singult.core.Unify(this__11397.data, this__11397.mapping, this__11397.key_fn, G__11389, this__11397.update, this__11397.exit, this__11397.force_update_QMARK_, this__11397.__meta, this__11397.__extmap, null)
        }else {
          if(pred__11398__11401.call(null, "\ufdd0'update", expr__11399__11402)) {
            return new singult.core.Unify(this__11397.data, this__11397.mapping, this__11397.key_fn, this__11397.enter, G__11389, this__11397.exit, this__11397.force_update_QMARK_, this__11397.__meta, this__11397.__extmap, null)
          }else {
            if(pred__11398__11401.call(null, "\ufdd0'exit", expr__11399__11402)) {
              return new singult.core.Unify(this__11397.data, this__11397.mapping, this__11397.key_fn, this__11397.enter, this__11397.update, G__11389, this__11397.force_update_QMARK_, this__11397.__meta, this__11397.__extmap, null)
            }else {
              if(pred__11398__11401.call(null, "\ufdd0'force-update?", expr__11399__11402)) {
                return new singult.core.Unify(this__11397.data, this__11397.mapping, this__11397.key_fn, this__11397.enter, this__11397.update, this__11397.exit, G__11389, this__11397.__meta, this__11397.__extmap, null)
              }else {
                return new singult.core.Unify(this__11397.data, this__11397.mapping, this__11397.key_fn, this__11397.enter, this__11397.update, this__11397.exit, this__11397.force_update_QMARK_, this__11397.__meta, cljs.core.assoc.call(null, this__11397.__extmap, k__2352__auto__, G__11389), null)
              }
            }
          }
        }
      }
    }
  }
};
singult.core.Unify.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__2349__auto__, entry__2350__auto__) {
  var this__11403 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__2350__auto__)) {
    return this__2349__auto__.cljs$core$IAssociative$_assoc$arity$3(this__2349__auto__, cljs.core._nth.call(null, entry__2350__auto__, 0), cljs.core._nth.call(null, entry__2350__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__2349__auto__, entry__2350__auto__)
  }
};
singult.core.Unify.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__2356__auto__) {
  var this__11404 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__11404.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__11404.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__11404.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__11404.enter), cljs.core.vector.call(null, "\ufdd0'update", this__11404.update), cljs.core.vector.call(null, "\ufdd0'exit", this__11404.exit), cljs.core.vector.call(null, 
  "\ufdd0'force-update?", this__11404.force_update_QMARK_)], true), this__11404.__extmap))
};
singult.core.Unify.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(this__2358__auto__, opts__2359__auto__) {
  var this__11405 = this;
  var pr_pair__2360__auto____11406 = function(keyval__2361__auto__) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts__2359__auto__, keyval__2361__auto__)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__2360__auto____11406, [cljs.core.str("#"), cljs.core.str("Unify"), cljs.core.str("{")].join(""), ", ", "}", opts__2359__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, "\ufdd0'data", this__11405.data), cljs.core.vector.call(null, "\ufdd0'mapping", this__11405.mapping), cljs.core.vector.call(null, "\ufdd0'key-fn", this__11405.key_fn), cljs.core.vector.call(null, "\ufdd0'enter", this__11405.enter), 
  cljs.core.vector.call(null, "\ufdd0'update", this__11405.update), cljs.core.vector.call(null, "\ufdd0'exit", this__11405.exit), cljs.core.vector.call(null, "\ufdd0'force-update?", this__11405.force_update_QMARK_)], true), this__11405.__extmap))
};
singult.core.Unify.prototype.cljs$core$ICounted$_count$arity$1 = function(this__2348__auto__) {
  var this__11407 = this;
  return 7 + cljs.core.count.call(null, this__11407.__extmap)
};
singult.core.Unify.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__2340__auto__, other__2341__auto__) {
  var this__11408 = this;
  if(cljs.core.truth_(function() {
    var and__3941__auto____11409 = other__2341__auto__;
    if(cljs.core.truth_(and__3941__auto____11409)) {
      var and__3941__auto____11410 = this__2340__auto__.constructor === other__2341__auto__.constructor;
      if(and__3941__auto____11410) {
        return cljs.core.equiv_map.call(null, this__2340__auto__, other__2341__auto__)
      }else {
        return and__3941__auto____11410
      }
    }else {
      return and__3941__auto____11409
    }
  }())) {
    return true
  }else {
    return false
  }
};
singult.core.Unify.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__2343__auto__, G__11389) {
  var this__11411 = this;
  return new singult.core.Unify(this__11411.data, this__11411.mapping, this__11411.key_fn, this__11411.enter, this__11411.update, this__11411.exit, this__11411.force_update_QMARK_, G__11389, this__11411.__extmap, this__11411.__hash)
};
singult.core.Unify.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__2342__auto__) {
  var this__11412 = this;
  return this__11412.__meta
};
singult.core.Unify.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__2353__auto__, k__2354__auto__) {
  var this__11413 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.set(["\ufdd0'data", "\ufdd0'force-update?", "\ufdd0'enter", "\ufdd0'exit", "\ufdd0'key-fn", "\ufdd0'update", "\ufdd0'mapping"]), k__2354__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, this__2353__auto__), this__11413.__meta), k__2354__auto__)
  }else {
    return new singult.core.Unify(this__11413.data, this__11413.mapping, this__11413.key_fn, this__11413.enter, this__11413.update, this__11413.exit, this__11413.force_update_QMARK_, this__11413.__meta, this__11413.__hash, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, this__11413.__extmap, k__2354__auto__)), null)
  }
};
singult.core.Unify.cljs$lang$type = true;
singult.core.Unify.cljs$lang$ctorPrSeq = function(this__2378__auto__) {
  return cljs.core.list.call(null, "singult.core/Unify")
};
singult.core.__GT_Unify = function __GT_Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_) {
  return new singult.core.Unify(data, mapping, key_fn, enter, update, exit, force_update_QMARK_)
};
singult.core.map__GT_Unify = function map__GT_Unify(G__11391) {
  return new singult.core.Unify((new cljs.core.Keyword("\ufdd0'data")).call(null, G__11391), (new cljs.core.Keyword("\ufdd0'mapping")).call(null, G__11391), (new cljs.core.Keyword("\ufdd0'key-fn")).call(null, G__11391), (new cljs.core.Keyword("\ufdd0'enter")).call(null, G__11391), (new cljs.core.Keyword("\ufdd0'update")).call(null, G__11391), (new cljs.core.Keyword("\ufdd0'exit")).call(null, G__11391), (new cljs.core.Keyword("\ufdd0'force-update?")).call(null, G__11391), null, cljs.core.dissoc.call(null, 
  G__11391, "\ufdd0'data", "\ufdd0'mapping", "\ufdd0'key-fn", "\ufdd0'enter", "\ufdd0'update", "\ufdd0'exit", "\ufdd0'force-update?"))
};
singult.core.Unify;
singult.core.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.instance_QMARK_.call(null, singult.core.Unify, x)) {
    var map__11467__11468 = x;
    var map__11467__11469 = cljs.core.seq_QMARK_.call(null, map__11467__11468) ? clojure.lang.PersistentHashMap.create.call(null, cljs.core.seq.call(null, map__11467__11468)) : map__11467__11468;
    var force_update_QMARK___11470 = cljs.core._lookup.call(null, map__11467__11469, "\ufdd0'force-update?", null);
    var exit__11471 = cljs.core._lookup.call(null, map__11467__11469, "\ufdd0'exit", null);
    var update__11472 = cljs.core._lookup.call(null, map__11467__11469, "\ufdd0'update", null);
    var enter__11473 = cljs.core._lookup.call(null, map__11467__11469, "\ufdd0'enter", null);
    var key_fn__11474 = cljs.core._lookup.call(null, map__11467__11469, "\ufdd0'key-fn", null);
    var mapping__11475 = cljs.core._lookup.call(null, map__11467__11469, "\ufdd0'mapping", null);
    var data__11476 = cljs.core._lookup.call(null, map__11467__11469, "\ufdd0'data", null);
    var data_arr__11484 = function() {
      var a__11477 = [];
      var G__11478__11479 = cljs.core.seq.call(null, data__11476);
      if(G__11478__11479) {
        var d__11480 = cljs.core.first.call(null, G__11478__11479);
        var G__11478__11481 = G__11478__11479;
        while(true) {
          a__11477.push(d__11480);
          var temp__4092__auto____11482 = cljs.core.next.call(null, G__11478__11481);
          if(temp__4092__auto____11482) {
            var G__11478__11483 = temp__4092__auto____11482;
            var G__11520 = cljs.core.first.call(null, G__11478__11483);
            var G__11521 = G__11478__11483;
            d__11480 = G__11520;
            G__11478__11481 = G__11521;
            continue
          }else {
          }
          break
        }
      }else {
      }
      return a__11477
    }();
    return new singult.coffee.Unify(data_arr__11484, function(p1__11388_SHARP_) {
      return clj__GT_js.call(null, mapping__11475.call(null, p1__11388_SHARP_))
    }, key_fn__11474, enter__11473, update__11472, exit__11471, force_update_QMARK___11470)
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var o__11485 = {};
        var G__11486__11487 = cljs.core.seq.call(null, x);
        if(G__11486__11487) {
          var G__11489__11491 = cljs.core.first.call(null, G__11486__11487);
          var vec__11490__11492 = G__11489__11491;
          var k__11493 = cljs.core.nth.call(null, vec__11490__11492, 0, null);
          var v__11494 = cljs.core.nth.call(null, vec__11490__11492, 1, null);
          var G__11486__11495 = G__11486__11487;
          var G__11489__11496 = G__11489__11491;
          var G__11486__11497 = G__11486__11495;
          while(true) {
            var vec__11498__11499 = G__11489__11496;
            var k__11500 = cljs.core.nth.call(null, vec__11498__11499, 0, null);
            var v__11501 = cljs.core.nth.call(null, vec__11498__11499, 1, null);
            var G__11486__11502 = G__11486__11497;
            var key__11503 = clj__GT_js.call(null, k__11500);
            if(cljs.core.string_QMARK_.call(null, key__11503)) {
            }else {
              throw"Cannot convert; JavaScript map keys must be strings";
            }
            o__11485[key__11503] = clj__GT_js.call(null, v__11501);
            var temp__4092__auto____11504 = cljs.core.next.call(null, G__11486__11502);
            if(temp__4092__auto____11504) {
              var G__11486__11505 = temp__4092__auto____11504;
              var G__11522 = cljs.core.first.call(null, G__11486__11505);
              var G__11523 = G__11486__11505;
              G__11489__11496 = G__11522;
              G__11486__11497 = G__11523;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return o__11485
      }else {
        if(cljs.core.seq_QMARK_.call(null, x)) {
          var a__11506 = [];
          a__11506.push(":*:");
          var G__11507__11508 = cljs.core.seq.call(null, x);
          if(G__11507__11508) {
            var item__11509 = cljs.core.first.call(null, G__11507__11508);
            var G__11507__11510 = G__11507__11508;
            while(true) {
              a__11506.push(clj__GT_js.call(null, item__11509));
              var temp__4092__auto____11511 = cljs.core.next.call(null, G__11507__11510);
              if(temp__4092__auto____11511) {
                var G__11507__11512 = temp__4092__auto____11511;
                var G__11524 = cljs.core.first.call(null, G__11507__11512);
                var G__11525 = G__11507__11512;
                item__11509 = G__11524;
                G__11507__11510 = G__11525;
                continue
              }else {
              }
              break
            }
          }else {
          }
          return a__11506
        }else {
          if(cljs.core.coll_QMARK_.call(null, x)) {
            var a__11513 = [];
            var G__11514__11515 = cljs.core.seq.call(null, x);
            if(G__11514__11515) {
              var item__11516 = cljs.core.first.call(null, G__11514__11515);
              var G__11514__11517 = G__11514__11515;
              while(true) {
                a__11513.push(clj__GT_js.call(null, item__11516));
                var temp__4092__auto____11518 = cljs.core.next.call(null, G__11514__11517);
                if(temp__4092__auto____11518) {
                  var G__11514__11519 = temp__4092__auto____11518;
                  var G__11526 = cljs.core.first.call(null, G__11514__11519);
                  var G__11527 = G__11514__11519;
                  item__11516 = G__11526;
                  G__11514__11517 = G__11527;
                  continue
                }else {
                }
                break
              }
            }else {
            }
            return a__11513
          }else {
            if("\ufdd0'else") {
              return x
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
singult.core.node_data = singult.coffee.node_data;
singult.core.attr = function attr($n, m) {
  return singult.coffee.attr.call(null, $n, singult.core.clj__GT_js.call(null, m))
};
singult.core.render = function render(v) {
  return singult.coffee.render.call(null, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
};
singult.core.merge_BANG_ = function merge_BANG_($n, v) {
  if(v == null) {
    return null
  }else {
    return singult.coffee.merge.call(null, $n, singult.coffee.canonicalize.call(null, singult.core.clj__GT_js.call(null, v)))
  }
};
singult.core.unify = function() {
  var unify__delegate = function(data, mapping, p__11528) {
    var map__11537__11538 = p__11528;
    var map__11537__11539 = cljs.core.seq_QMARK_.call(null, map__11537__11538) ? clojure.lang.PersistentHashMap.create.call(null, cljs.core.seq.call(null, map__11537__11538)) : map__11537__11538;
    var force_update_QMARK___11540 = cljs.core._lookup.call(null, map__11537__11539, "\ufdd0'force-update?", null);
    var exit__11541 = cljs.core._lookup.call(null, map__11537__11539, "\ufdd0'exit", null);
    var update__11542 = cljs.core._lookup.call(null, map__11537__11539, "\ufdd0'update", null);
    var enter__11543 = cljs.core._lookup.call(null, map__11537__11539, "\ufdd0'enter", null);
    var key_fn__11544 = cljs.core._lookup.call(null, map__11537__11539, "\ufdd0'key-fn", null);
    return new singult.core.Unify(data, mapping, key_fn__11544, enter__11543, update__11542, exit__11541, force_update_QMARK___11540)
  };
  var unify = function(data, mapping, var_args) {
    var p__11528 = null;
    if(goog.isDef(var_args)) {
      p__11528 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, p__11528)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__11545) {
    var data = cljs.core.first(arglist__11545);
    var mapping = cljs.core.first(cljs.core.next(arglist__11545));
    var p__11528 = cljs.core.rest(cljs.core.next(arglist__11545));
    return unify__delegate(data, mapping, p__11528)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
singult.core.ignore = function ignore() {
  return new singult.coffee.Ignore
};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__11353 = s;
      var limit__11354 = limit;
      var parts__11355 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__11354, 1)) {
          return cljs.core.conj.call(null, parts__11355, s__11353)
        }else {
          var temp__4090__auto____11356 = cljs.core.re_find.call(null, re, s__11353);
          if(cljs.core.truth_(temp__4090__auto____11356)) {
            var m__11357 = temp__4090__auto____11356;
            var index__11358 = s__11353.indexOf(m__11357);
            var G__11359 = s__11353.substring(index__11358 + cljs.core.count.call(null, m__11357));
            var G__11360 = limit__11354 - 1;
            var G__11361 = cljs.core.conj.call(null, parts__11355, s__11353.substring(0, index__11358));
            s__11353 = G__11359;
            limit__11354 = G__11360;
            parts__11355 = G__11361;
            continue
          }else {
            return cljs.core.conj.call(null, parts__11355, s__11353)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__11365 = s.length;
  while(true) {
    if(index__11365 === 0) {
      return""
    }else {
      var ch__11366 = cljs.core._lookup.call(null, s, index__11365 - 1, null);
      if(function() {
        var or__3943__auto____11367 = cljs.core._EQ_.call(null, ch__11366, "\n");
        if(or__3943__auto____11367) {
          return or__3943__auto____11367
        }else {
          return cljs.core._EQ_.call(null, ch__11366, "\r")
        }
      }()) {
        var G__11368 = index__11365 - 1;
        index__11365 = G__11368;
        continue
      }else {
        return s.substring(0, index__11365)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__11372 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3943__auto____11373 = cljs.core.not.call(null, s__11372);
    if(or__3943__auto____11373) {
      return or__3943__auto____11373
    }else {
      var or__3943__auto____11374 = cljs.core._EQ_.call(null, "", s__11372);
      if(or__3943__auto____11374) {
        return or__3943__auto____11374
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__11372)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__11381 = new goog.string.StringBuffer;
  var length__11382 = s.length;
  var index__11383 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__11382, index__11383)) {
      return buffer__11381.toString()
    }else {
      var ch__11384 = s.charAt(index__11383);
      var temp__4090__auto____11385 = cljs.core._lookup.call(null, cmap, ch__11384, null);
      if(cljs.core.truth_(temp__4090__auto____11385)) {
        var replacement__11386 = temp__4090__auto____11385;
        buffer__11381.append([cljs.core.str(replacement__11386)].join(""))
      }else {
        buffer__11381.append(ch__11384)
      }
      var G__11387 = index__11383 + 1;
      index__11383 = G__11387;
      continue
    }
    break
  }
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("c2.dom");
goog.require("cljs.core");
goog.require("goog.style");
goog.require("goog.dom.classes");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("singult.core");
goog.require("clojure.string");
Element.prototype.matchesSelector = Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
    return cljs.core.array_seq.call(null, array, 0)
  }
}else {
}
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
void 0;
void 0;
c2.dom.IDom = {};
c2.dom.__GT_dom = function __GT_dom(x) {
  if(function() {
    var and__3941__auto____11221 = x;
    if(and__3941__auto____11221) {
      return x.c2$dom$IDom$__GT_dom$arity$1
    }else {
      return and__3941__auto____11221
    }
  }()) {
    return x.c2$dom$IDom$__GT_dom$arity$1(x)
  }else {
    return function() {
      var or__3943__auto____11222 = c2.dom.__GT_dom[goog.typeOf(x)];
      if(or__3943__auto____11222) {
        return or__3943__auto____11222
      }else {
        var or__3943__auto____11223 = c2.dom.__GT_dom["_"];
        if(or__3943__auto____11223) {
          return or__3943__auto____11223
        }else {
          throw cljs.core.missing_protocol.call(null, "IDom.->dom", x);
        }
      }
    }().call(null, x)
  }
};
void 0;
cljs.core.PersistentVector.prototype.c2$dom$IDom$ = true;
cljs.core.PersistentVector.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(v) {
  return singult.core.render.call(null, v)
};
c2.dom.IDom["string"] = true;
c2.dom.__GT_dom["string"] = function(selector) {
  return c2.dom.select.call(null, selector)
};
if(cljs.core.truth_(typeof Node != "undefined")) {
  Node.prototype.c2$dom$IDom$ = true;
  Node.prototype.c2$dom$IDom$__GT_dom$arity$1 = function(node) {
    return node
  }
}else {
}
c2.dom.select = function() {
  var select = null;
  var select__1 = function(selector) {
    return document.querySelector(selector)
  };
  var select__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelector(selector)
  };
  select = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select__1.call(this, selector);
      case 2:
        return select__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select.cljs$lang$arity$1 = select__1;
  select.cljs$lang$arity$2 = select__2;
  return select
}();
c2.dom.select_all = function() {
  var select_all = null;
  var select_all__1 = function(selector) {
    return document.querySelectorAll(selector)
  };
  var select_all__2 = function(selector, container) {
    return c2.dom.__GT_dom.call(null, container).querySelectorAll(selector)
  };
  select_all = function(selector, container) {
    switch(arguments.length) {
      case 1:
        return select_all__1.call(this, selector);
      case 2:
        return select_all__2.call(this, selector, container)
    }
    throw"Invalid arity: " + arguments.length;
  };
  select_all.cljs$lang$arity$1 = select_all__1;
  select_all.cljs$lang$arity$2 = select_all__2;
  return select_all
}();
c2.dom.matches_selector_QMARK_ = function matches_selector_QMARK_(node, selector) {
  return node.matchesSelector(selector)
};
c2.dom.children = function children(node) {
  return c2.dom.__GT_dom.call(null, node).children
};
c2.dom.parent = function parent(node) {
  return c2.dom.__GT_dom.call(null, node).parentNode
};
c2.dom.append_BANG_ = function append_BANG_(container, el) {
  var el__11225 = c2.dom.__GT_dom.call(null, el);
  goog.dom.appendChild(c2.dom.__GT_dom.call(null, container), el__11225);
  return el__11225
};
c2.dom.prepend_BANG_ = function prepend_BANG_(container, el) {
  var el__11227 = c2.dom.__GT_dom.call(null, el);
  goog.dom.insertChildAt(c2.dom.__GT_dom.call(null, container), el__11227, 0);
  return el__11227
};
c2.dom.remove_BANG_ = function remove_BANG_(el) {
  return goog.dom.removeNode(c2.dom.__GT_dom.call(null, el))
};
c2.dom.replace_BANG_ = function replace_BANG_(old, new$) {
  var new__11229 = c2.dom.__GT_dom.call(null, new$);
  goog.dom.replaceNode(new__11229, c2.dom.__GT_dom.call(null, old));
  return new__11229
};
c2.dom.style = function() {
  var style = null;
  var style__1 = function(el) {
    throw new Error("TODO: return map of element styles");
  };
  var style__2 = function(el, x) {
    var el__11250 = c2.dom.__GT_dom.call(null, el);
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return goog.style.getComputedStyle(el__11250, cljs.core.name.call(null, x))
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var G__11251__11252 = cljs.core.seq.call(null, x);
        if(G__11251__11252) {
          var G__11254__11256 = cljs.core.first.call(null, G__11251__11252);
          var vec__11255__11257 = G__11254__11256;
          var k__11258 = cljs.core.nth.call(null, vec__11255__11257, 0, null);
          var v__11259 = cljs.core.nth.call(null, vec__11255__11257, 1, null);
          var G__11251__11260 = G__11251__11252;
          var G__11254__11261 = G__11254__11256;
          var G__11251__11262 = G__11251__11260;
          while(true) {
            var vec__11263__11264 = G__11254__11261;
            var k__11265 = cljs.core.nth.call(null, vec__11263__11264, 0, null);
            var v__11266 = cljs.core.nth.call(null, vec__11263__11264, 1, null);
            var G__11251__11267 = G__11251__11262;
            style.call(null, el__11250, k__11265, v__11266);
            var temp__4092__auto____11268 = cljs.core.next.call(null, G__11251__11267);
            if(temp__4092__auto____11268) {
              var G__11251__11269 = temp__4092__auto____11268;
              var G__11270 = cljs.core.first.call(null, G__11251__11269);
              var G__11271 = G__11251__11269;
              G__11254__11261 = G__11270;
              G__11251__11262 = G__11271;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return el__11250
      }else {
        return null
      }
    }
  };
  var style__3 = function(el, k, v) {
    goog.style.setStyle(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, k), cljs.core.string_QMARK_.call(null, v) ? v : cljs.core.number_QMARK_.call(null, v) ? cljs.core.truth_(cljs.core.set(["\ufdd0'bottom", "\ufdd0'width", "\ufdd0'top", "\ufdd0'right", "\ufdd0'left", "\ufdd0'height"]).call(null, cljs.core.keyword.call(null, k))) ? [cljs.core.str(v), cljs.core.str("px")].join("") : v : null);
    return el
  };
  style = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return style__1.call(this, el);
      case 2:
        return style__2.call(this, el, k);
      case 3:
        return style__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  style.cljs$lang$arity$1 = style__1;
  style.cljs$lang$arity$2 = style__2;
  style.cljs$lang$arity$3 = style__3;
  return style
}();
c2.dom.attr = function() {
  var attr = null;
  var attr__1 = function(el) {
    var attrs__11305 = c2.dom.__GT_dom.call(null, el).attributes;
    return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
      var iter__2487__auto____11316 = function iter__11306(s__11307) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__11307__11312 = s__11307;
          while(true) {
            var temp__4092__auto____11313 = cljs.core.seq.call(null, s__11307__11312);
            if(temp__4092__auto____11313) {
              var xs__4579__auto____11314 = temp__4092__auto____11313;
              var i__11315 = cljs.core.first.call(null, xs__4579__auto____11314);
              return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, attrs__11305[i__11315].name), attrs__11305[i__11315].value], true), iter__11306.call(null, cljs.core.rest.call(null, s__11307__11312)))
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2487__auto____11316.call(null, cljs.core.range.call(null, attrs__11305.length))
    }())
  };
  var attr__2 = function(el, x) {
    var el__11317 = c2.dom.__GT_dom.call(null, el);
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return el__11317.getAttribute(cljs.core.name.call(null, x))
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var G__11318__11319 = cljs.core.seq.call(null, x);
        if(G__11318__11319) {
          var G__11321__11323 = cljs.core.first.call(null, G__11318__11319);
          var vec__11322__11324 = G__11321__11323;
          var k__11325 = cljs.core.nth.call(null, vec__11322__11324, 0, null);
          var v__11326 = cljs.core.nth.call(null, vec__11322__11324, 1, null);
          var G__11318__11327 = G__11318__11319;
          var G__11321__11328 = G__11321__11323;
          var G__11318__11329 = G__11318__11327;
          while(true) {
            var vec__11330__11331 = G__11321__11328;
            var k__11332 = cljs.core.nth.call(null, vec__11330__11331, 0, null);
            var v__11333 = cljs.core.nth.call(null, vec__11330__11331, 1, null);
            var G__11318__11334 = G__11318__11329;
            attr.call(null, el__11317, k__11332, v__11333);
            var temp__4092__auto____11335 = cljs.core.next.call(null, G__11318__11334);
            if(temp__4092__auto____11335) {
              var G__11318__11336 = temp__4092__auto____11335;
              var G__11338 = cljs.core.first.call(null, G__11318__11336);
              var G__11339 = G__11318__11336;
              G__11321__11328 = G__11338;
              G__11318__11329 = G__11339;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return el__11317
      }else {
        return null
      }
    }
  };
  var attr__3 = function(el, k, v) {
    var el__11337 = c2.dom.__GT_dom.call(null, el);
    if(v == null) {
      el__11337.removeAttribute(cljs.core.name.call(null, k))
    }else {
      if(cljs.core._EQ_.call(null, "\ufdd0'style", k)) {
        c2.dom.style.call(null, el__11337, v)
      }else {
        el__11337.setAttribute(cljs.core.name.call(null, k), v)
      }
    }
    return el__11337
  };
  attr = function(el, k, v) {
    switch(arguments.length) {
      case 1:
        return attr__1.call(this, el);
      case 2:
        return attr__2.call(this, el, k);
      case 3:
        return attr__3.call(this, el, k, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  attr.cljs$lang$arity$1 = attr__1;
  attr.cljs$lang$arity$2 = attr__2;
  attr.cljs$lang$arity$3 = attr__3;
  return attr
}();
c2.dom.text = function() {
  var text = null;
  var text__1 = function(el) {
    return goog.dom.getTextContent(c2.dom.__GT_dom.call(null, el))
  };
  var text__2 = function(el, v) {
    var el__11341 = c2.dom.__GT_dom.call(null, el);
    goog.dom.setTextContent(el__11341, v);
    return el__11341
  };
  text = function(el, v) {
    switch(arguments.length) {
      case 1:
        return text__1.call(this, el);
      case 2:
        return text__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  text.cljs$lang$arity$1 = text__1;
  text.cljs$lang$arity$2 = text__2;
  return text
}();
c2.dom.val = function() {
  var val = null;
  var val__1 = function(el) {
    return goog.dom.forms.getValue(c2.dom.__GT_dom.call(null, el))
  };
  var val__2 = function(el, v) {
    var el__11343 = c2.dom.__GT_dom.call(null, el);
    goog.dom.forms.setValue(el__11343, v);
    return el__11343
  };
  val = function(el, v) {
    switch(arguments.length) {
      case 1:
        return val__1.call(this, el);
      case 2:
        return val__2.call(this, el, v)
    }
    throw"Invalid arity: " + arguments.length;
  };
  val.cljs$lang$arity$1 = val__1;
  val.cljs$lang$arity$2 = val__2;
  return val
}();
c2.dom.classed_BANG_ = function classed_BANG_(el, class$, classed_QMARK_) {
  goog.dom.classes.enable(c2.dom.__GT_dom.call(null, el), cljs.core.name.call(null, class$), classed_QMARK_);
  return el
};
c2.dom.add_class_BANG_ = function add_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, true)
};
c2.dom.remove_class_BANG_ = function remove_class_BANG_(el, class$) {
  return c2.dom.classed_BANG_.call(null, el, class$, false)
};
c2.dom.request_animation_frame = function() {
  var or__3943__auto____11345 = window.requestAnimationFrame;
  if(cljs.core.truth_(or__3943__auto____11345)) {
    return or__3943__auto____11345
  }else {
    var or__3943__auto____11346 = window.webkitRequestAnimationFrame;
    if(cljs.core.truth_(or__3943__auto____11346)) {
      return or__3943__auto____11346
    }else {
      return function(p1__11344_SHARP_) {
        return setTimeout(function() {
          return p1__11344_SHARP_.call(null)
        }, 10)
      }
    }
  }
}();
goog.provide("c2.core");
goog.require("cljs.core");
goog.require("reflex.core");
goog.require("c2.dom");
goog.require("singult.core");
c2.core.node_data = singult.core.node_data;
c2.core.unify = function() {
  var unify__delegate = function(data, mapping, args) {
    if(cljs.core.seq.call(null, data)) {
      mapping.call(null, cljs.core.first.call(null, data))
    }else {
    }
    return cljs.core.apply.call(null, singult.core.unify, data, mapping, args)
  };
  var unify = function(data, mapping, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return unify__delegate.call(this, data, mapping, args)
  };
  unify.cljs$lang$maxFixedArity = 2;
  unify.cljs$lang$applyTo = function(arglist__11217) {
    var data = cljs.core.first(arglist__11217);
    var mapping = cljs.core.first(cljs.core.next(arglist__11217));
    var args = cljs.core.rest(cljs.core.next(arglist__11217));
    return unify__delegate(data, mapping, args)
  };
  unify.cljs$lang$arity$variadic = unify__delegate;
  return unify
}();
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__12240 = document.createElement("div");
var test_html__12241 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__12240.innerHTML = test_html__12241;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__12240.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__12240.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__12240.getElementsByTagName("link").length, 0);
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__11837 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__11838 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__11839 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__11838, "caption":table_section_wrapper__11838, "optgroup":opt_wrapper__11837, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__11839, "thead":table_section_wrapper__11838, "th":cell_wrapper__11839, "option":opt_wrapper__11837, "tbody":table_section_wrapper__11838, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__11838});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html) {
  var no_tbody_QMARK___11852 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__11856 = function() {
    var and__3941__auto____11853 = cljs.core._EQ_.call(null, domina.tag_name, "table");
    if(and__3941__auto____11853) {
      return no_tbody_QMARK___11852
    }else {
      return and__3941__auto____11853
    }
  }() ? function() {
    var and__3941__auto____11854 = div.firstChild;
    if(cljs.core.truth_(and__3941__auto____11854)) {
      return div.firstChild.childNodes
    }else {
      return and__3941__auto____11854
    }
  }() : function() {
    var and__3941__auto____11855 = cljs.core._EQ_.call(null, domina.start_wrap, "<table>");
    if(and__3941__auto____11855) {
      return no_tbody_QMARK___11852
    }else {
      return and__3941__auto____11855
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__11857__11858 = cljs.core.seq.call(null, tbody__11856);
  if(G__11857__11858) {
    var child__11859 = cljs.core.first.call(null, G__11857__11858);
    var G__11857__11860 = G__11857__11858;
    while(true) {
      if(function() {
        var and__3941__auto____11861 = cljs.core._EQ_.call(null, child__11859.nodeName, "tbody");
        if(and__3941__auto____11861) {
          return cljs.core._EQ_.call(null, child__11859.childNodes.length, 0)
        }else {
          return and__3941__auto____11861
        }
      }()) {
        child__11859.parentNode.removeChild(child__11859)
      }else {
      }
      var temp__4092__auto____11862 = cljs.core.next.call(null, G__11857__11860);
      if(temp__4092__auto____11862) {
        var G__11857__11863 = temp__4092__auto____11862;
        var G__11864 = cljs.core.first.call(null, G__11857__11863);
        var G__11865 = G__11857__11863;
        child__11859 = G__11864;
        G__11857__11860 = G__11865;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__11879 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__11880 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__11879)))].join("").toLowerCase();
  var vec__11878__11881 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__11880, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__11882 = cljs.core.nth.call(null, vec__11878__11881, 0, null);
  var start_wrap__11883 = cljs.core.nth.call(null, vec__11878__11881, 1, null);
  var end_wrap__11884 = cljs.core.nth.call(null, vec__11878__11881, 2, null);
  var div__11888 = function() {
    var wrapper__11886 = function() {
      var div__11885 = document.createElement("div");
      div__11885.innerHTML = [cljs.core.str(start_wrap__11883), cljs.core.str(html__11879), cljs.core.str(end_wrap__11884)].join("");
      return div__11885
    }();
    var level__11887 = depth__11882;
    while(true) {
      if(level__11887 > 0) {
        var G__11890 = wrapper__11886.lastChild;
        var G__11891 = level__11887 - 1;
        wrapper__11886 = G__11890;
        level__11887 = G__11891;
        continue
      }else {
        return wrapper__11886
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__11888, html__11879)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3941__auto____11889 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3941__auto____11889) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__11879)
    }else {
      return and__3941__auto____11889
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__11888, html__11879)
  }else {
  }
  return div__11888.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
void 0;
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3941__auto____11895 = content;
    if(and__3941__auto____11895) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3941__auto____11895
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    return function() {
      var or__3943__auto____11896 = domina.nodes[goog.typeOf(content)];
      if(or__3943__auto____11896) {
        return or__3943__auto____11896
      }else {
        var or__3943__auto____11897 = domina.nodes["_"];
        if(or__3943__auto____11897) {
          return or__3943__auto____11897
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3941__auto____11901 = nodeseq;
    if(and__3941__auto____11901) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3941__auto____11901
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    return function() {
      var or__3943__auto____11902 = domina.single_node[goog.typeOf(nodeseq)];
      if(or__3943__auto____11902) {
        return or__3943__auto____11902
      }else {
        var or__3943__auto____11903 = domina.single_node["_"];
        if(or__3943__auto____11903) {
          return or__3943__auto____11903
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
void 0;
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3941__auto____11905 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3941__auto____11905)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3941__auto____11905
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__11906) {
    var mesg = cljs.core.seq(arglist__11906);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__11907) {
    var mesg = cljs.core.seq(arglist__11907);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
void 0;
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t11915) {
    domina.t11915 = function(class_name, by_class, meta11916) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta11916 = meta11916;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t11915.cljs$lang$type = true;
    domina.t11915.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
      return cljs.core.list.call(null, "domina/t11915")
    };
    domina.t11915.prototype.domina$DomContent$ = true;
    domina.t11915.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__11918 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__11918.class_name)))
    };
    domina.t11915.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__11919 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__11919.class_name)))
    };
    domina.t11915.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11917) {
      var this__11920 = this;
      return this__11920.meta11916
    };
    domina.t11915.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11917, meta11916) {
      var this__11921 = this;
      return new domina.t11915(this__11921.class_name, this__11921.by_class, meta11916)
    };
    domina.t11915
  }else {
  }
  return new domina.t11915(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__11922_SHARP_) {
    return p1__11922_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
void 0;
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__11923_SHARP_, p2__11924_SHARP_) {
    return goog.dom.insertChildAt(p1__11923_SHARP_, p2__11924_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11926_SHARP_, p2__11925_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__11925_SHARP_, p1__11926_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11928_SHARP_, p2__11927_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__11927_SHARP_, p1__11928_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__11930_SHARP_, p2__11929_SHARP_) {
    return goog.dom.replaceNode(p2__11929_SHARP_, p1__11930_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__11932 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__11932))) {
    return null
  }else {
    return s__11932
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__11939__11940 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11939__11940) {
      var n__11941 = cljs.core.first.call(null, G__11939__11940);
      var G__11939__11942 = G__11939__11940;
      while(true) {
        goog.style.setStyle(n__11941, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__4092__auto____11943 = cljs.core.next.call(null, G__11939__11942);
        if(temp__4092__auto____11943) {
          var G__11939__11944 = temp__4092__auto____11943;
          var G__11945 = cljs.core.first.call(null, G__11939__11944);
          var G__11946 = G__11939__11944;
          n__11941 = G__11945;
          G__11939__11942 = G__11946;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__11947) {
    var content = cljs.core.first(arglist__11947);
    var name = cljs.core.first(cljs.core.next(arglist__11947));
    var value = cljs.core.rest(cljs.core.next(arglist__11947));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__11954__11955 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11954__11955) {
      var n__11956 = cljs.core.first.call(null, G__11954__11955);
      var G__11954__11957 = G__11954__11955;
      while(true) {
        n__11956.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__4092__auto____11958 = cljs.core.next.call(null, G__11954__11957);
        if(temp__4092__auto____11958) {
          var G__11954__11959 = temp__4092__auto____11958;
          var G__11960 = cljs.core.first.call(null, G__11954__11959);
          var G__11961 = G__11954__11959;
          n__11956 = G__11960;
          G__11954__11957 = G__11961;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__11962) {
    var content = cljs.core.first(arglist__11962);
    var name = cljs.core.first(cljs.core.next(arglist__11962));
    var value = cljs.core.rest(cljs.core.next(arglist__11962));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__11969__11970 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__11969__11970) {
    var n__11971 = cljs.core.first.call(null, G__11969__11970);
    var G__11969__11972 = G__11969__11970;
    while(true) {
      n__11971.removeAttribute(cljs.core.name.call(null, name));
      var temp__4092__auto____11973 = cljs.core.next.call(null, G__11969__11972);
      if(temp__4092__auto____11973) {
        var G__11969__11974 = temp__4092__auto____11973;
        var G__11975 = cljs.core.first.call(null, G__11969__11974);
        var G__11976 = G__11969__11974;
        n__11971 = G__11975;
        G__11969__11972 = G__11976;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__11982__11983 = pair.split(/\s*:\s*/);
    var k__11984 = cljs.core.nth.call(null, vec__11982__11983, 0, null);
    var v__11985 = cljs.core.nth.call(null, vec__11982__11983, 1, null);
    if(cljs.core.truth_(function() {
      var and__3941__auto____11986 = k__11984;
      if(cljs.core.truth_(and__3941__auto____11986)) {
        return v__11985
      }else {
        return and__3941__auto____11986
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__11984.toLowerCase()), v__11985)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__11989 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__11989)) {
    return domina.parse_style_attributes.call(null, style__11989)
  }else {
    if(cljs.core.truth_(style__11989.cssText)) {
      return domina.parse_style_attributes.call(null, style__11989.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__11995 = domina.single_node.call(null, content);
  var attrs__11996 = node__11995.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__11987_SHARP_) {
    var attr__11997 = attrs__11996.item(p1__11987_SHARP_);
    var value__11998 = attr__11997.nodeValue;
    if(function() {
      var and__3941__auto____11999 = cljs.core.not_EQ_.call(null, null, value__11998);
      if(and__3941__auto____11999) {
        return cljs.core.not_EQ_.call(null, "", value__11998)
      }else {
        return and__3941__auto____11999
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__11997.nodeName.toLowerCase())], [attr__11997.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__11996.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__12019__12020 = cljs.core.seq.call(null, styles);
  if(G__12019__12020) {
    var G__12022__12024 = cljs.core.first.call(null, G__12019__12020);
    var vec__12023__12025 = G__12022__12024;
    var name__12026 = cljs.core.nth.call(null, vec__12023__12025, 0, null);
    var value__12027 = cljs.core.nth.call(null, vec__12023__12025, 1, null);
    var G__12019__12028 = G__12019__12020;
    var G__12022__12029 = G__12022__12024;
    var G__12019__12030 = G__12019__12028;
    while(true) {
      var vec__12031__12032 = G__12022__12029;
      var name__12033 = cljs.core.nth.call(null, vec__12031__12032, 0, null);
      var value__12034 = cljs.core.nth.call(null, vec__12031__12032, 1, null);
      var G__12019__12035 = G__12019__12030;
      domina.set_style_BANG_.call(null, content, name__12033, value__12034);
      var temp__4092__auto____12036 = cljs.core.next.call(null, G__12019__12035);
      if(temp__4092__auto____12036) {
        var G__12019__12037 = temp__4092__auto____12036;
        var G__12038 = cljs.core.first.call(null, G__12019__12037);
        var G__12039 = G__12019__12037;
        G__12022__12029 = G__12038;
        G__12019__12030 = G__12039;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__12059__12060 = cljs.core.seq.call(null, attrs);
  if(G__12059__12060) {
    var G__12062__12064 = cljs.core.first.call(null, G__12059__12060);
    var vec__12063__12065 = G__12062__12064;
    var name__12066 = cljs.core.nth.call(null, vec__12063__12065, 0, null);
    var value__12067 = cljs.core.nth.call(null, vec__12063__12065, 1, null);
    var G__12059__12068 = G__12059__12060;
    var G__12062__12069 = G__12062__12064;
    var G__12059__12070 = G__12059__12068;
    while(true) {
      var vec__12071__12072 = G__12062__12069;
      var name__12073 = cljs.core.nth.call(null, vec__12071__12072, 0, null);
      var value__12074 = cljs.core.nth.call(null, vec__12071__12072, 1, null);
      var G__12059__12075 = G__12059__12070;
      domina.set_attr_BANG_.call(null, content, name__12073, value__12074);
      var temp__4092__auto____12076 = cljs.core.next.call(null, G__12059__12075);
      if(temp__4092__auto____12076) {
        var G__12059__12077 = temp__4092__auto____12076;
        var G__12078 = cljs.core.first.call(null, G__12059__12077);
        var G__12079 = G__12059__12077;
        G__12062__12069 = G__12078;
        G__12059__12070 = G__12079;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__12086__12087 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12086__12087) {
    var node__12088 = cljs.core.first.call(null, G__12086__12087);
    var G__12086__12089 = G__12086__12087;
    while(true) {
      goog.dom.classes.add(node__12088, class$);
      var temp__4092__auto____12090 = cljs.core.next.call(null, G__12086__12089);
      if(temp__4092__auto____12090) {
        var G__12086__12091 = temp__4092__auto____12090;
        var G__12092 = cljs.core.first.call(null, G__12086__12091);
        var G__12093 = G__12086__12091;
        node__12088 = G__12092;
        G__12086__12089 = G__12093;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__12100__12101 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12100__12101) {
    var node__12102 = cljs.core.first.call(null, G__12100__12101);
    var G__12100__12103 = G__12100__12101;
    while(true) {
      goog.dom.classes.remove(node__12102, class$);
      var temp__4092__auto____12104 = cljs.core.next.call(null, G__12100__12103);
      if(temp__4092__auto____12104) {
        var G__12100__12105 = temp__4092__auto____12104;
        var G__12106 = cljs.core.first.call(null, G__12100__12105);
        var G__12107 = G__12100__12105;
        node__12102 = G__12106;
        G__12100__12103 = G__12107;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__12115 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__12116__12117 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12116__12117) {
    var node__12118 = cljs.core.first.call(null, G__12116__12117);
    var G__12116__12119 = G__12116__12117;
    while(true) {
      goog.dom.classes.set(node__12118, classes__12115);
      var temp__4092__auto____12120 = cljs.core.next.call(null, G__12116__12119);
      if(temp__4092__auto____12120) {
        var G__12116__12121 = temp__4092__auto____12120;
        var G__12122 = cljs.core.first.call(null, G__12116__12121);
        var G__12123 = G__12116__12121;
        node__12118 = G__12122;
        G__12116__12119 = G__12123;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__12130__12131 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12130__12131) {
    var node__12132 = cljs.core.first.call(null, G__12130__12131);
    var G__12130__12133 = G__12130__12131;
    while(true) {
      goog.dom.setTextContent(node__12132, value);
      var temp__4092__auto____12134 = cljs.core.next.call(null, G__12130__12133);
      if(temp__4092__auto____12134) {
        var G__12130__12135 = temp__4092__auto____12134;
        var G__12136 = cljs.core.first.call(null, G__12130__12135);
        var G__12137 = G__12130__12135;
        node__12132 = G__12136;
        G__12130__12133 = G__12137;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__12144__12145 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12144__12145) {
    var node__12146 = cljs.core.first.call(null, G__12144__12145);
    var G__12144__12147 = G__12144__12145;
    while(true) {
      goog.dom.forms.setValue(node__12146, value);
      var temp__4092__auto____12148 = cljs.core.next.call(null, G__12144__12147);
      if(temp__4092__auto____12148) {
        var G__12144__12149 = temp__4092__auto____12148;
        var G__12150 = cljs.core.first.call(null, G__12144__12149);
        var G__12151 = G__12144__12149;
        node__12146 = G__12150;
        G__12144__12147 = G__12151;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___12168 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___12169 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__12170 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___12171 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__12170);
  if(cljs.core.truth_(function() {
    var and__3941__auto____12172 = allows_inner_html_QMARK___12168;
    if(and__3941__auto____12172) {
      var and__3941__auto____12174 = function() {
        var or__3943__auto____12173 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3943__auto____12173)) {
          return or__3943__auto____12173
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___12169)
        }
      }();
      if(cljs.core.truth_(and__3941__auto____12174)) {
        return!special_tag_QMARK___12171
      }else {
        return and__3941__auto____12174
      }
    }else {
      return and__3941__auto____12172
    }
  }())) {
    var value__12175 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__12178__12179 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__12178__12179) {
        var node__12180 = cljs.core.first.call(null, G__12178__12179);
        var G__12178__12181 = G__12178__12179;
        while(true) {
          goog.events.removeAll(node__12180);
          node__12180.innerHTML = value__12175;
          var temp__4092__auto____12182 = cljs.core.next.call(null, G__12178__12181);
          if(temp__4092__auto____12182) {
            var G__12178__12183 = temp__4092__auto____12182;
            var G__12184 = cljs.core.first.call(null, G__12178__12183);
            var G__12185 = G__12178__12183;
            node__12180 = G__12184;
            G__12178__12181 = G__12185;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e12176) {
      if(cljs.core.instance_QMARK_.call(null, domina.Exception, e12176)) {
        var e__12177 = e12176;
        domina.replace_children_BANG_.call(null, content, value__12175)
      }else {
        if("\ufdd0'else") {
          throw e12176;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__12191 = domina.single_node.call(null, node).__domina_data;
    var value__12192 = cljs.core.truth_(m__12191) ? cljs.core._lookup.call(null, m__12191, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3941__auto____12193 = bubble;
      if(cljs.core.truth_(and__3941__auto____12193)) {
        return value__12192 == null
      }else {
        return and__3941__auto____12193
      }
    }())) {
      var temp__4092__auto____12194 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__4092__auto____12194)) {
        var parent__12195 = temp__4092__auto____12194;
        return get_data.call(null, parent__12195, key, true)
      }else {
        return null
      }
    }else {
      return value__12192
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__12201 = function() {
    var or__3943__auto____12200 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3943__auto____12200)) {
      return or__3943__auto____12200
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__12201, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__12213 = domina.nodes.call(null, parent_content);
  var children__12214 = domina.nodes.call(null, child_content);
  var first_child__12222 = function() {
    var frag__12215 = document.createDocumentFragment();
    var G__12216__12217 = cljs.core.seq.call(null, children__12214);
    if(G__12216__12217) {
      var child__12218 = cljs.core.first.call(null, G__12216__12217);
      var G__12216__12219 = G__12216__12217;
      while(true) {
        frag__12215.appendChild(child__12218);
        var temp__4092__auto____12220 = cljs.core.next.call(null, G__12216__12219);
        if(temp__4092__auto____12220) {
          var G__12216__12221 = temp__4092__auto____12220;
          var G__12224 = cljs.core.first.call(null, G__12216__12221);
          var G__12225 = G__12216__12221;
          child__12218 = G__12224;
          G__12216__12219 = G__12225;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__12215
  }();
  var other_children__12223 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__12213) - 1, function() {
    return first_child__12222.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__12213)) {
    f.call(null, cljs.core.first.call(null, parents__12213), first_child__12222);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__12196_SHARP_, p2__12197_SHARP_) {
      return f.call(null, p1__12196_SHARP_, p2__12197_SHARP_)
    }, cljs.core.rest.call(null, parents__12213), other_children__12223))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3941__auto____12227 = obj;
  if(cljs.core.truth_(and__3941__auto____12227)) {
    return obj.length
  }else {
    return and__3941__auto____12227
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12231__12232 = list_thing;
      if(G__12231__12232) {
        if(function() {
          var or__3943__auto____12233 = G__12231__12232.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto____12233) {
            return or__3943__auto____12233
          }else {
            return G__12231__12232.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12231__12232.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12231__12232)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12231__12232)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12234__12235 = content;
      if(G__12234__12235) {
        if(function() {
          var or__3943__auto____12236 = G__12234__12235.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto____12236) {
            return or__3943__auto____12236
          }else {
            return G__12234__12235.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12234__12235.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12234__12235)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12234__12235)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__12237__12238 = content;
      if(G__12237__12238) {
        if(function() {
          var or__3943__auto____12239 = G__12237__12238.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto____12239) {
            return or__3943__auto____12239
          }else {
            return G__12237__12238.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12237__12238.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12237__12238)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12237__12238)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.object");
goog.require("domina");
void 0;
domina.events.Event = {};
domina.events.prevent_default = function prevent_default(evt) {
  if(function() {
    var and__3941__auto____11647 = evt;
    if(and__3941__auto____11647) {
      return evt.domina$events$Event$prevent_default$arity$1
    }else {
      return and__3941__auto____11647
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt)
  }else {
    return function() {
      var or__3943__auto____11648 = domina.events.prevent_default[goog.typeOf(evt)];
      if(or__3943__auto____11648) {
        return or__3943__auto____11648
      }else {
        var or__3943__auto____11649 = domina.events.prevent_default["_"];
        if(or__3943__auto____11649) {
          return or__3943__auto____11649
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if(function() {
    var and__3941__auto____11653 = evt;
    if(and__3941__auto____11653) {
      return evt.domina$events$Event$stop_propagation$arity$1
    }else {
      return and__3941__auto____11653
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt)
  }else {
    return function() {
      var or__3943__auto____11654 = domina.events.stop_propagation[goog.typeOf(evt)];
      if(or__3943__auto____11654) {
        return or__3943__auto____11654
      }else {
        var or__3943__auto____11655 = domina.events.stop_propagation["_"];
        if(or__3943__auto____11655) {
          return or__3943__auto____11655
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.target = function target(evt) {
  if(function() {
    var and__3941__auto____11659 = evt;
    if(and__3941__auto____11659) {
      return evt.domina$events$Event$target$arity$1
    }else {
      return and__3941__auto____11659
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt)
  }else {
    return function() {
      var or__3943__auto____11660 = domina.events.target[goog.typeOf(evt)];
      if(or__3943__auto____11660) {
        return or__3943__auto____11660
      }else {
        var or__3943__auto____11661 = domina.events.target["_"];
        if(or__3943__auto____11661) {
          return or__3943__auto____11661
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.current_target = function current_target(evt) {
  if(function() {
    var and__3941__auto____11665 = evt;
    if(and__3941__auto____11665) {
      return evt.domina$events$Event$current_target$arity$1
    }else {
      return and__3941__auto____11665
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt)
  }else {
    return function() {
      var or__3943__auto____11666 = domina.events.current_target[goog.typeOf(evt)];
      if(or__3943__auto____11666) {
        return or__3943__auto____11666
      }else {
        var or__3943__auto____11667 = domina.events.current_target["_"];
        if(or__3943__auto____11667) {
          return or__3943__auto____11667
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.event_type = function event_type(evt) {
  if(function() {
    var and__3941__auto____11671 = evt;
    if(and__3941__auto____11671) {
      return evt.domina$events$Event$event_type$arity$1
    }else {
      return and__3941__auto____11671
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt)
  }else {
    return function() {
      var or__3943__auto____11672 = domina.events.event_type[goog.typeOf(evt)];
      if(or__3943__auto____11672) {
        return or__3943__auto____11672
      }else {
        var or__3943__auto____11673 = domina.events.event_type["_"];
        if(or__3943__auto____11673) {
          return or__3943__auto____11673
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt)
  }
};
domina.events.raw_event = function raw_event(evt) {
  if(function() {
    var and__3941__auto____11677 = evt;
    if(and__3941__auto____11677) {
      return evt.domina$events$Event$raw_event$arity$1
    }else {
      return and__3941__auto____11677
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt)
  }else {
    return function() {
      var or__3943__auto____11678 = domina.events.raw_event[goog.typeOf(evt)];
      if(or__3943__auto____11678) {
        return or__3943__auto____11678
      }else {
        var or__3943__auto____11679 = domina.events.raw_event["_"];
        if(or__3943__auto____11679) {
          return or__3943__auto____11679
        }else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt)
  }
};
void 0;
domina.events.builtin_events = cljs.core.set.call(null, cljs.core.map.call(null, cljs.core.keyword, goog.object.getValues(goog.events.EventType)));
domina.events.root_element = window.document.documentElement;
domina.events.find_builtin_type = function find_builtin_type(evt_type) {
  if(cljs.core.contains_QMARK_.call(null, domina.events.builtin_events, evt_type)) {
    return cljs.core.name.call(null, evt_type)
  }else {
    return evt_type
  }
};
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if(void 0 === domina.events.t11696) {
        domina.events.t11696 = function(evt, f, create_listener_function, meta11697) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta11697 = meta11697;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472
        };
        domina.events.t11696.cljs$lang$type = true;
        domina.events.t11696.cljs$lang$ctorPrSeq = function(this__2330__auto__) {
          return cljs.core.list.call(null, "domina.events/t11696")
        };
        domina.events.t11696.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var this__11699 = this;
          var temp__4090__auto____11700 = this__11699.evt[k];
          if(cljs.core.truth_(temp__4090__auto____11700)) {
            var val__11701 = temp__4090__auto____11700;
            return val__11701
          }else {
            return this__11699.evt[cljs.core.name.call(null, k)]
          }
        };
        domina.events.t11696.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var this__11702 = this;
          var or__3943__auto____11703 = o.cljs$core$ILookup$_lookup$arity$2(o, k);
          if(cljs.core.truth_(or__3943__auto____11703)) {
            return or__3943__auto____11703
          }else {
            return not_found
          }
        };
        domina.events.t11696.prototype.domina$events$Event$ = true;
        domina.events.t11696.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var this__11704 = this;
          return this__11704.evt.preventDefault()
        };
        domina.events.t11696.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var this__11705 = this;
          return this__11705.evt.stopPropagation()
        };
        domina.events.t11696.prototype.domina$events$Event$target$arity$1 = function(_) {
          var this__11706 = this;
          return this__11706.evt.target
        };
        domina.events.t11696.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var this__11707 = this;
          return this__11707.evt.currentTarget
        };
        domina.events.t11696.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var this__11708 = this;
          return this__11708.evt.type
        };
        domina.events.t11696.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var this__11709 = this;
          return this__11709.evt
        };
        domina.events.t11696.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11698) {
          var this__11710 = this;
          return this__11710.meta11697
        };
        domina.events.t11696.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11698, meta11697) {
          var this__11711 = this;
          return new domina.events.t11696(this__11711.evt, this__11711.f, this__11711.create_listener_function, meta11697)
        };
        domina.events.t11696
      }else {
      }
      return new domina.events.t11696(evt, f, create_listener_function, null)
    }());
    return true
  }
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f__11725 = domina.events.create_listener_function.call(null, listener);
  var t__11726 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__2487__auto____11737 = function iter__11727(s__11728) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11728__11733 = s__11728;
        while(true) {
          var temp__4092__auto____11734 = cljs.core.seq.call(null, s__11728__11733);
          if(temp__4092__auto____11734) {
            var xs__4579__auto____11735 = temp__4092__auto____11734;
            var node__11736 = cljs.core.first.call(null, xs__4579__auto____11735);
            return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node__11736, t__11726, f__11725, capture) : goog.events.listen(node__11736, t__11726, f__11725, capture), iter__11727.call(null, cljs.core.rest.call(null, s__11728__11733)))
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__2487__auto____11737.call(null, domina.nodes.call(null, content))
  }())
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false)
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_BANG_.cljs$lang$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$lang$arity$3 = listen_BANG___3;
  return listen_BANG_
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false)
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_BANG_.cljs$lang$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$lang$arity$3 = capture_BANG___3;
  return capture_BANG_
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true)
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once_BANG_.cljs$lang$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$lang$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener)
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true)
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener)
    }
    throw"Invalid arity: " + arguments.length;
  };
  capture_once_BANG_.cljs$lang$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$lang$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element)
  };
  var unlisten_BANG___1 = function(content) {
    var G__11745__11746 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__11745__11746) {
      var node__11747 = cljs.core.first.call(null, G__11745__11746);
      var G__11745__11748 = G__11745__11746;
      while(true) {
        goog.events.removeAll(node__11747);
        var temp__4092__auto____11749 = cljs.core.next.call(null, G__11745__11748);
        if(temp__4092__auto____11749) {
          var G__11745__11750 = temp__4092__auto____11749;
          var G__11752 = cljs.core.first.call(null, G__11745__11750);
          var G__11753 = G__11745__11750;
          node__11747 = G__11752;
          G__11745__11748 = G__11753;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__11751 = domina.events.find_builtin_type.call(null, type);
    return goog.events.removeAll(domina.events.node, type__11751)
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten_BANG_.cljs$lang$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$lang$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$lang$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, cljs.core.PersistentVector.fromArray([n], true))
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while(true) {
      var temp__4090__auto____11756 = n.parentNode;
      if(cljs.core.truth_(temp__4090__auto____11756)) {
        var parent__11757 = temp__4090__auto____11756;
        var G__11758 = parent__11757;
        var G__11759 = cljs.core.cons.call(null, parent__11757, so_far);
        n = G__11758;
        so_far = G__11759;
        continue
      }else {
        return so_far
      }
      break
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestor_nodes.cljs$lang$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$lang$arity$2 = ancestor_nodes__2;
  return ancestor_nodes
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  var ancestors__11773 = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var G__11774__11775 = cljs.core.seq.call(null, ancestors__11773);
  if(G__11774__11775) {
    var n__11776 = cljs.core.first.call(null, G__11774__11775);
    var G__11774__11777 = G__11774__11775;
    while(true) {
      if(cljs.core.truth_(n__11776.propagationStopped)) {
      }else {
        evt.currentTarget = n__11776;
        goog.events.fireListeners(n__11776, evt.type, true, evt)
      }
      var temp__4092__auto____11778 = cljs.core.next.call(null, G__11774__11777);
      if(temp__4092__auto____11778) {
        var G__11774__11779 = temp__4092__auto____11778;
        var G__11786 = cljs.core.first.call(null, G__11774__11779);
        var G__11787 = G__11774__11779;
        n__11776 = G__11786;
        G__11774__11777 = G__11787;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11780__11781 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors__11773));
  if(G__11780__11781) {
    var n__11782 = cljs.core.first.call(null, G__11780__11781);
    var G__11780__11783 = G__11780__11781;
    while(true) {
      if(cljs.core.truth_(n__11782.propagationStopped)) {
      }else {
        evt.currentTarget = n__11782;
        goog.events.fireListeners(n__11782, evt.type, false, evt)
      }
      var temp__4092__auto____11784 = cljs.core.next.call(null, G__11780__11783);
      if(temp__4092__auto____11784) {
        var G__11780__11785 = temp__4092__auto____11784;
        var G__11788 = cljs.core.first.call(null, G__11780__11785);
        var G__11789 = G__11780__11785;
        n__11782 = G__11788;
        G__11780__11783 = G__11789;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return evt.returnValue_
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt)
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__3941__auto____11791 = o.getParentEventTarget;
  if(cljs.core.truth_(and__3941__auto____11791)) {
    return o.dispatchEvent
  }else {
    return and__3941__auto____11791
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map)
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt__11812 = new goog.events.Event(domina.events.find_builtin_type.call(null, type));
    var G__11813__11814 = cljs.core.seq.call(null, evt_map);
    if(G__11813__11814) {
      var G__11816__11818 = cljs.core.first.call(null, G__11813__11814);
      var vec__11817__11819 = G__11816__11818;
      var k__11820 = cljs.core.nth.call(null, vec__11817__11819, 0, null);
      var v__11821 = cljs.core.nth.call(null, vec__11817__11819, 1, null);
      var G__11813__11822 = G__11813__11814;
      var G__11816__11823 = G__11816__11818;
      var G__11813__11824 = G__11813__11822;
      while(true) {
        var vec__11825__11826 = G__11816__11823;
        var k__11827 = cljs.core.nth.call(null, vec__11825__11826, 0, null);
        var v__11828 = cljs.core.nth.call(null, vec__11825__11826, 1, null);
        var G__11813__11829 = G__11813__11824;
        evt__11812[k__11827] = v__11828;
        var temp__4092__auto____11830 = cljs.core.next.call(null, G__11813__11829);
        if(temp__4092__auto____11830) {
          var G__11813__11831 = temp__4092__auto____11830;
          var G__11832 = cljs.core.first.call(null, G__11813__11831);
          var G__11833 = G__11813__11831;
          G__11816__11823 = G__11832;
          G__11813__11824 = G__11833;
          continue
        }else {
        }
        break
      }
    }else {
    }
    if(cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt__11812)
    }else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt__11812)
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dispatch_BANG_.cljs$lang$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$lang$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key)
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__11836 = domina.events.find_builtin_type.call(null, type);
  return cljs.core.mapcat.call(null, function(p1__11834_SHARP_) {
    return goog.events.getListeners(p1__11834_SHARP_, type__11836, false)
  }, domina.nodes.call(null, content))
};
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("gooraphreads.client");
goog.require("cljs.core");
goog.require("c2.core");
goog.require("c2.scale");
goog.require("domina.events");
goog.require("domina");
goog.require("goog.net.XhrIo");
gooraphreads.client.main = function main() {
  var width__7232 = 500;
  var bar_height__7233 = 20;
  var data__7234 = cljs.core.ObjMap.fromObject(["A", "B", "C", "D"], {"A":1, "B":2, "C":4, "D":3});
  var s__7235 = c2.scale.linear.call(null, "\ufdd0'domain", cljs.core.PersistentVector.fromArray([0, cljs.core.apply.call(null, cljs.core.max, cljs.core.vals.call(null, data__7234))], true), "\ufdd0'range", cljs.core.PersistentVector.fromArray([0, width__7232], true));
  return cljs.core.PersistentVector.fromArray(["\ufdd0'div#bars", c2.core.unify.call(null, data__7234, function(p__7236) {
    var vec__7237__7238 = p__7236;
    var label__7239 = cljs.core.nth.call(null, vec__7237__7238, 0, null);
    var val__7240 = cljs.core.nth.call(null, vec__7237__7238, 1, null);
    return cljs.core.PersistentVector.fromArray(["\ufdd0'div", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'height", "\ufdd0'width", "\ufdd0'background-color"], {"\ufdd0'height":bar_height__7233, "\ufdd0'width":s__7235.call(null, val__7240), "\ufdd0'background-color":"gray"})}), cljs.core.PersistentVector.fromArray(["\ufdd0'span", cljs.core.ObjMap.fromObject(["\ufdd0'style"], {"\ufdd0'style":cljs.core.ObjMap.fromObject(["\ufdd0'color"], {"\ufdd0'color":"white"})}), 
    label__7239], true)], true)
  })], true)
};
goog.exportSymbol("gooraphreads.client.main", gooraphreads.client.main);
